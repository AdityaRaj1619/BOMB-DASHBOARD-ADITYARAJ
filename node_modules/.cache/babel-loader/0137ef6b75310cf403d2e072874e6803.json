{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _ = require(\"lodash\");\nvar calldata_1 = require(\"../calldata/calldata\");\nvar raw_calldata_1 = require(\"../calldata/raw_calldata\");\nvar constants_1 = require(\"../utils/constants\");\nvar DataType = /** @class */function () {\n  function DataType(dataItem, factory) {\n    this._dataItem = dataItem;\n    this._factory = factory;\n  }\n  DataType.prototype.getDataItem = function () {\n    return this._dataItem;\n  };\n  DataType.prototype.getFactory = function () {\n    return this._factory;\n  };\n  DataType.prototype.encode = function (value, rules, selector) {\n    var rules_ = rules === undefined ? constants_1.constants.DEFAULT_ENCODING_RULES : rules;\n    var calldata = new calldata_1.Calldata(rules_);\n    if (selector !== undefined) {\n      calldata.setSelector(selector);\n    }\n    var block = this.generateCalldataBlock(value);\n    calldata.setRoot(block);\n    var encodedCalldata = calldata.toString();\n    return encodedCalldata;\n  };\n  DataType.prototype.decode = function (calldata, rules, selector) {\n    if (selector !== undefined && !_.startsWith(calldata, selector)) {\n      throw new Error(\"Tried to decode calldata, but it was missing the function selector. Expected prefix '\" + selector + \"'. Got '\" + calldata + \"'.\");\n    }\n    var hasSelector = selector !== undefined;\n    var rawCalldata = new raw_calldata_1.RawCalldata(calldata, hasSelector);\n    var rules_ = rules === undefined ? constants_1.constants.DEFAULT_DECODING_RULES : rules;\n    var value = rawCalldata.getSizeInBytes() > 0 ? this.generateValue(rawCalldata, rules_) : this.getDefaultValue(rules_);\n    return value;\n  };\n  DataType.prototype.decodeAsArray = function (returndata, rules) {\n    var value = this.decode(returndata, rules);\n    var valuesAsArray = _.isObject(value) ? _.values(value) : [value];\n    return valuesAsArray;\n  };\n  DataType.prototype.getSignature = function (isDetailed) {\n    if (_.isEmpty(this._dataItem.name) || !isDetailed) {\n      return this.getSignatureType();\n    }\n    var name = this.getDataItem().name;\n    var lastIndexOfScopeDelimiter = name.lastIndexOf('.');\n    var isScopedName = lastIndexOfScopeDelimiter !== undefined && lastIndexOfScopeDelimiter > 0;\n    var shortName = isScopedName ? name.substr(lastIndexOfScopeDelimiter + 1) : name;\n    var detailedSignature = shortName + \" \" + this.getSignatureType();\n    return detailedSignature;\n  };\n  return DataType;\n}();\nexports.DataType = DataType;","map":{"version":3,"sources":["../../../../src/abi_encoder/abstract_data_types/data_type.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar _ = require(\"lodash\");\nvar calldata_1 = require(\"../calldata/calldata\");\nvar raw_calldata_1 = require(\"../calldata/raw_calldata\");\nvar constants_1 = require(\"../utils/constants\");\nvar DataType = /** @class */ (function () {\n    function DataType(dataItem, factory) {\n        this._dataItem = dataItem;\n        this._factory = factory;\n    }\n    DataType.prototype.getDataItem = function () {\n        return this._dataItem;\n    };\n    DataType.prototype.getFactory = function () {\n        return this._factory;\n    };\n    DataType.prototype.encode = function (value, rules, selector) {\n        var rules_ = rules === undefined ? constants_1.constants.DEFAULT_ENCODING_RULES : rules;\n        var calldata = new calldata_1.Calldata(rules_);\n        if (selector !== undefined) {\n            calldata.setSelector(selector);\n        }\n        var block = this.generateCalldataBlock(value);\n        calldata.setRoot(block);\n        var encodedCalldata = calldata.toString();\n        return encodedCalldata;\n    };\n    DataType.prototype.decode = function (calldata, rules, selector) {\n        if (selector !== undefined && !_.startsWith(calldata, selector)) {\n            throw new Error(\"Tried to decode calldata, but it was missing the function selector. Expected prefix '\" + selector + \"'. Got '\" + calldata + \"'.\");\n        }\n        var hasSelector = selector !== undefined;\n        var rawCalldata = new raw_calldata_1.RawCalldata(calldata, hasSelector);\n        var rules_ = rules === undefined ? constants_1.constants.DEFAULT_DECODING_RULES : rules;\n        var value = rawCalldata.getSizeInBytes() > 0 ? this.generateValue(rawCalldata, rules_) : this.getDefaultValue(rules_);\n        return value;\n    };\n    DataType.prototype.decodeAsArray = function (returndata, rules) {\n        var value = this.decode(returndata, rules);\n        var valuesAsArray = _.isObject(value) ? _.values(value) : [value];\n        return valuesAsArray;\n    };\n    DataType.prototype.getSignature = function (isDetailed) {\n        if (_.isEmpty(this._dataItem.name) || !isDetailed) {\n            return this.getSignatureType();\n        }\n        var name = this.getDataItem().name;\n        var lastIndexOfScopeDelimiter = name.lastIndexOf('.');\n        var isScopedName = lastIndexOfScopeDelimiter !== undefined && lastIndexOfScopeDelimiter > 0;\n        var shortName = isScopedName ? name.substr(lastIndexOfScopeDelimiter + 1) : name;\n        var detailedSignature = shortName + \" \" + this.getSignatureType();\n        return detailedSignature;\n    };\n    return DataType;\n}());\nexports.DataType = DataType;\n//# sourceMappingURL=data_type.js.map"]},"metadata":{},"sourceType":"script"}