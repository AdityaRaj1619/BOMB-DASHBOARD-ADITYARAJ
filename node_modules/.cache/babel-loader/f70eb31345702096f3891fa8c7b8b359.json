{"ast":null,"code":"import _taggedTemplateLiteral from\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useContext}from'react';import styled,{ThemeContext}from'styled-components';var Label=function Label(_ref){var text=_ref.text,_ref$variant=_ref.variant,variant=_ref$variant===void 0?'secondary':_ref$variant,customColor=_ref.color;var _useContext=useContext(ThemeContext),color=_useContext.color;var labelColor;if(customColor){labelColor=customColor;}else{if(variant==='primary'){labelColor=color.primary.main;}else if(variant==='secondary'){labelColor='#2c2560';//color.secondary.main;\n}else if(variant==='normal'){labelColor='#2c2560';//color.grey[300];\n}else if(variant==='yellow'){labelColor='#f9d749';}}return/*#__PURE__*/React.createElement(StyledLabel,{color:labelColor},text);};var StyledLabel=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  color: \",\";\\n\"])),function(props){return props.color;});export default Label;","map":{"version":3,"names":["React","useContext","styled","ThemeContext","Label","_ref","text","_ref$variant","variant","customColor","color","_useContext","labelColor","primary","main","createElement","StyledLabel","div","_templateObject","_taggedTemplateLiteral","props"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/components/Label/Label.tsx"],"sourcesContent":["import React, {useContext} from 'react';\nimport styled, {ThemeContext} from 'styled-components';\n\ninterface LabelProps {\n  text?: string;\n  variant?: 'primary' | 'secondary' | 'normal' | 'yellow';\n  color?: string;\n}\n\nconst Label: React.FC<LabelProps> = ({text, variant = 'secondary', color: customColor}) => {\n  const {color} = useContext(ThemeContext);\n\n  let labelColor: string;\n  if (customColor) {\n    labelColor = customColor;\n  } else {\n    if (variant === 'primary') {\n      labelColor = color.primary.main;\n    } else if (variant === 'secondary') {\n      labelColor = '#2c2560'; //color.secondary.main;\n    } else if (variant === 'normal') {\n      labelColor = '#2c2560'; //color.grey[300];\n    } else if (variant === 'yellow') {\n      labelColor = '#f9d749';\n    }\n  }\n  return <StyledLabel color={labelColor}>{text}</StyledLabel>;\n};\n\ninterface StyledLabelProps {\n  color: string;\n}\n\nconst StyledLabel = styled.div<StyledLabelProps>`\n  color: ${(props) => props.color};\n`;\n\nexport default Label;\n"],"mappings":"iOAAA,MAAO,CAAAA,KAAK,EAAGC,UAAU,KAAO,OAAO,CACvC,MAAO,CAAAC,MAAM,EAAGC,YAAY,KAAO,mBAAmB,CAQtD,GAAM,CAAAC,KAA2B,CAAG,QAA9B,CAAAA,KAA2BA,CAAAC,IAAA,CAA0D,IAArD,CAAAC,IAAI,CAAAD,IAAA,CAAJC,IAAI,CAAAC,YAAA,CAAAF,IAAA,CAAEG,OAAO,CAAPA,OAAO,CAAAD,YAAA,UAAG,WAAW,CAAAA,YAAA,CAASE,WAAW,CAAAJ,IAAA,CAAlBK,KAAK,CACtE,IAAAC,WAAA,CAAgBV,UAAU,CAACE,YAAY,CAAC,CAAjCO,KAAK,CAAAC,WAAA,CAALD,KAAK,CAEZ,GAAI,CAAAE,UAAkB,CACtB,GAAIH,WAAW,CAAE,CACfG,UAAU,CAAGH,WAAW,CAC1B,CAAC,IAAM,CACL,GAAID,OAAO,GAAK,SAAS,CAAE,CACzBI,UAAU,CAAGF,KAAK,CAACG,OAAO,CAACC,IAAI,CACjC,CAAC,IAAM,IAAIN,OAAO,GAAK,WAAW,CAAE,CAClCI,UAAU,CAAG,SAAS,CAAE;AAC1B,CAAC,IAAM,IAAIJ,OAAO,GAAK,QAAQ,CAAE,CAC/BI,UAAU,CAAG,SAAS,CAAE;AAC1B,CAAC,IAAM,IAAIJ,OAAO,GAAK,QAAQ,CAAE,CAC/BI,UAAU,CAAG,SAAS,CACxB,CACF,CACA,mBAAOZ,KAAA,CAAAe,aAAA,CAACC,WAAW,EAACN,KAAK,CAAEE,UAAW,EAAEN,IAAI,CAAe,CAC7D,CAAC,CAMD,GAAM,CAAAU,WAAW,CAAGd,MAAM,CAACe,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,yBACnB,SAACC,KAAK,QAAK,CAAAA,KAAK,CAACV,KAAK,GAChC,CAED,cAAe,CAAAN,KAAK"},"metadata":{},"sourceType":"module"}