{"ast":null,"code":"import { BigNumber } from 'ethers';\nexport const getDisplayBalance = function (balance) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n  let fractionDigits = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n  let isTruncated = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  if (decimals === 0) {\n    fractionDigits = 0;\n  }\n  const number = getBalance(balance, decimals - fractionDigits);\n  const ret = (number / 10 ** fractionDigits).toFixed(fractionDigits);\n  if (ret.length > 12 && isTruncated) {\n    return ret.slice(0, 12) + '...';\n  }\n  return ret;\n};\nexport const getFullDisplayBalance = function (balance) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n  let isTruncated = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return getDisplayBalance(balance, decimals, 4, isTruncated);\n};\nexport function getBalance(balance) {\n  let decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 18;\n  return Number(balance.div(BigNumber.from(10).pow(decimals)));\n}","map":{"version":3,"names":["BigNumber","getDisplayBalance","balance","decimals","arguments","length","undefined","fractionDigits","isTruncated","number","getBalance","ret","toFixed","slice","getFullDisplayBalance","Number","div","from","pow"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/utils/formatBalance.ts"],"sourcesContent":["import {BigNumber} from 'ethers';\n\nexport const getDisplayBalance = (\n  balance: BigNumber,\n  decimals = 18,\n  fractionDigits = 4,\n  isTruncated: boolean = false,\n) => {\n  if (decimals === 0) {\n    fractionDigits = 0;\n  }\n  const number = getBalance(balance, decimals - fractionDigits);\n  const ret = (number / 10 ** fractionDigits).toFixed(fractionDigits);\n  if (ret.length > 12 && isTruncated) {\n    return ret.slice(0, 12) + '...';\n  }\n  return ret;\n};\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, isTruncated = false) => {\n  return getDisplayBalance(balance, decimals, 4, isTruncated);\n};\n\nexport function getBalance(balance: BigNumber, decimals = 18): number {\n  return Number(balance.div(BigNumber.from(10).pow(decimals)));\n}\n"],"mappings":"AAAA,SAAQA,SAAS,QAAO,QAAQ;AAEhC,OAAO,MAAMC,iBAAiB,GAAG,SAAAA,CAC/BC,OAAkB,EAIf;EAAA,IAHHC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IACbG,cAAc,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC;EAAA,IAClBI,WAAoB,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAE5B,IAAID,QAAQ,KAAK,CAAC,EAAE;IAClBI,cAAc,GAAG,CAAC;EACpB;EACA,MAAME,MAAM,GAAGC,UAAU,CAACR,OAAO,EAAEC,QAAQ,GAAGI,cAAc,CAAC;EAC7D,MAAMI,GAAG,GAAG,CAACF,MAAM,GAAG,EAAE,IAAIF,cAAc,EAAEK,OAAO,CAACL,cAAc,CAAC;EACnE,IAAII,GAAG,CAACN,MAAM,GAAG,EAAE,IAAIG,WAAW,EAAE;IAClC,OAAOG,GAAG,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK;EACjC;EACA,OAAOF,GAAG;AACZ,CAAC;AAED,OAAO,MAAMG,qBAAqB,GAAG,SAAAA,CAACZ,OAAkB,EAAyC;EAAA,IAAvCC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IAAEI,WAAW,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAC1F,OAAOH,iBAAiB,CAACC,OAAO,EAAEC,QAAQ,EAAE,CAAC,EAAEK,WAAW,CAAC;AAC7D,CAAC;AAED,OAAO,SAASE,UAAUA,CAACR,OAAkB,EAAyB;EAAA,IAAvBC,QAAQ,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAC1D,OAAOW,MAAM,CAACb,OAAO,CAACc,GAAG,CAAChB,SAAS,CAACiB,IAAI,CAAC,EAAE,CAAC,CAACC,GAAG,CAACf,QAAQ,CAAC,CAAC,CAAC;AAC9D"},"metadata":{},"sourceType":"module"}