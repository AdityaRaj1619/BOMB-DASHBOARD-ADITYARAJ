{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\src\\\\views\\\\Boardroom\\\\components\\\\Harvest.tsx\";\nimport React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport { Box, Button, Card, CardContent, Typography } from '@material-ui/core';\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport CardIcon from '../../../components/CardIcon';\nimport useClaimRewardTimerBoardroom from '../../../hooks/boardroom/useClaimRewardTimerBoardroom';\nimport useClaimRewardCheck from '../../../hooks/boardroom/useClaimRewardCheck';\nimport ProgressCountdown from './ProgressCountdown';\nimport useHarvestFromBoardroom from '../../../hooks/useHarvestFromBoardroom';\nimport useEarningsOnBoardroom from '../../../hooks/useEarningsOnBoardroom';\nimport useBombStats from '../../../hooks/useBombStats';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\nconst Harvest = () => {\n  const bombStats = useBombStats();\n  const {\n    onReward\n  } = useHarvestFromBoardroom();\n  const earnings = useEarningsOnBoardroom();\n  const canClaimReward = useClaimRewardCheck();\n  const tokenPriceInDollars = useMemo(() => bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null, [bombStats]);\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n  const {\n    from,\n    to\n  } = useClaimRewardTimerBoardroom();\n  return /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardContentInner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TokenSymbol, {\n    symbol: \"BOMB\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Value, {\n    value: getDisplayBalance(earnings),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: `≈ $${earnedInDollars}`,\n    variant: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: \"BOMB Earned\",\n    variant: \"yellow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(StyledCardActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onReward,\n    className: earnings.eq(0) || !canClaimReward ? 'shinyButtonDisabled' : 'shinyButton',\n    disabled: earnings.eq(0) || !canClaimReward,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, \"Claim Reward\"))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    style: {\n      color: '#FFF'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, canClaimReward ? '' : /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Claim possible in\"), /*#__PURE__*/React.createElement(ProgressCountdown, {\n    hideBar: true,\n    base: from,\n    deadline: to,\n    description: \"Claim available in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  })))));\n};\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${props => props.theme.spacing[6]}px;\n  width: 100%;\n`;\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\nexport default Harvest;","map":{"version":3,"names":["React","useMemo","styled","Box","Button","Card","CardContent","Typography","TokenSymbol","Label","Value","CardIcon","useClaimRewardTimerBoardroom","useClaimRewardCheck","ProgressCountdown","useHarvestFromBoardroom","useEarningsOnBoardroom","useBombStats","getDisplayBalance","Harvest","bombStats","onReward","earnings","canClaimReward","tokenPriceInDollars","Number","priceInDollars","toFixed","earnedInDollars","from","to","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","StyledCardContentInner","StyledCardHeader","symbol","value","text","variant","StyledCardActions","onClick","className","eq","disabled","mt","style","color","textAlign","hideBar","base","deadline","description","div","props","theme","spacing"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/views/Boardroom/components/Harvest.tsx"],"sourcesContent":["import React, {useMemo} from 'react';\nimport styled from 'styled-components';\n\nimport {Box, Button, Card, CardContent, Typography} from '@material-ui/core';\n\nimport TokenSymbol from '../../../components/TokenSymbol';\nimport Label from '../../../components/Label';\nimport Value from '../../../components/Value';\nimport CardIcon from '../../../components/CardIcon';\nimport useClaimRewardTimerBoardroom from '../../../hooks/boardroom/useClaimRewardTimerBoardroom';\nimport useClaimRewardCheck from '../../../hooks/boardroom/useClaimRewardCheck';\nimport ProgressCountdown from './ProgressCountdown';\nimport useHarvestFromBoardroom from '../../../hooks/useHarvestFromBoardroom';\nimport useEarningsOnBoardroom from '../../../hooks/useEarningsOnBoardroom';\nimport useBombStats from '../../../hooks/useBombStats';\nimport {getDisplayBalance} from '../../../utils/formatBalance';\n\nconst Harvest: React.FC = () => {\n  const bombStats = useBombStats();\n  const {onReward} = useHarvestFromBoardroom();\n  const earnings = useEarningsOnBoardroom();\n  const canClaimReward = useClaimRewardCheck();\n\n  const tokenPriceInDollars = useMemo(\n    () => (bombStats ? Number(bombStats.priceInDollars).toFixed(2) : null),\n    [bombStats],\n  );\n\n  const earnedInDollars = (Number(tokenPriceInDollars) * Number(getDisplayBalance(earnings))).toFixed(2);\n\n  const {from, to} = useClaimRewardTimerBoardroom();\n\n  return (\n    <Box>\n      <Card>\n        <CardContent>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <CardIcon>\n                <TokenSymbol symbol=\"BOMB\" />\n              </CardIcon>\n              <Value value={getDisplayBalance(earnings)} />\n              <Label text={`≈ $${earnedInDollars}`} variant=\"yellow\" />\n              <Label text=\"BOMB Earned\" variant=\"yellow\" />\n            </StyledCardHeader>\n            <StyledCardActions>\n              <Button\n                onClick={onReward}\n                className={earnings.eq(0) || !canClaimReward ? 'shinyButtonDisabled' : 'shinyButton'}\n                disabled={earnings.eq(0) || !canClaimReward}\n              >\n                Claim Reward\n              </Button>\n            </StyledCardActions>\n          </StyledCardContentInner>\n        </CardContent>\n      </Card>\n      <Box mt={2} style={{color: '#FFF'}}>\n        {canClaimReward ? (\n          ''\n        ) : (\n          <Card>\n            <CardContent>\n              <Typography style={{textAlign: 'center'}}>Claim possible in</Typography>\n              <ProgressCountdown hideBar={true} base={from} deadline={to} description=\"Claim available in\" />\n            </CardContent>\n          </Card>\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[6]}px;\n  width: 100%;\n`;\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport default Harvest;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}