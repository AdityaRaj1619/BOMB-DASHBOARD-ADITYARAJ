{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\src\\\\components\\\\WalletProviderModal\\\\WalletProviderModal.js\";\nimport React, { useEffect } from 'react';\nimport WalletCard from './WalletCard';\nimport { Modal, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport metamaskLogo from \"../../assets/img/metamask-fox.svg\";\nimport walletConnectLogo from \"../../assets/img/wallet-connect.svg\";\nimport coingBaseLogo from '../../assets/img/coinbase_logo.jpeg';\nimport { useWallet } from 'use-wallet';\nimport config from '../../config';\nimport { connectToNetwork } from '../../hooks/useNetworkPrompt';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: '400px',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: 'none'\n  }\n}));\nconst WalletProviderModal = _ref => {\n  let {\n    open,\n    handleClose\n  } = _ref;\n  const classes = useStyles();\n  const {\n    account,\n    connect,\n    error\n  } = useWallet();\n  const {\n    ethereum\n  } = window;\n  useEffect(() => {\n    if (account) {\n      handleClose();\n    }\n  });\n  return /*#__PURE__*/React.createElement(Modal, {\n    \"aria-labelledby\": \"connect a wallet\",\n    \"aria-describedby\": \"connect your crypto wallet\",\n    open: open,\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"Connect Wallet\"), error && error.toString() !== '[object Object]' && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      'color': 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 62\n    }\n  }, error.toString()), /*#__PURE__*/React.createElement(List, {\n    component: \"nav\",\n    \"aria-label\": \"main mailbox folders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WalletCard, {\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: metamaskLogo,\n      alt: \"Metamask logo\",\n      style: {\n        height: 32\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }),\n    onConnect: async () => {\n      if (ethereum && ethereum.networkVersion !== config.chainId.toString()) {\n        await connectToNetwork(ethereum);\n      }\n      connect('injected');\n    },\n    title: \"Metamask\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(WalletCard, {\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: walletConnectLogo,\n      alt: \"Wallet Connect logo\",\n      style: {\n        height: 24,\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }),\n    onConnect: async () => {\n      connect('walletconnect');\n    },\n    title: \"WalletConnect\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(WalletCard, {\n    icon: /*#__PURE__*/React.createElement(\"img\", {\n      src: coingBaseLogo,\n      alt: \"Coinbase wallet logo\",\n      style: {\n        height: 32,\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }),\n    onConnect: async () => {\n      connect('walletlink');\n    },\n    title: \"Coinbase Wallet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))));\n};\nexport default WalletProviderModal;","map":{"version":3,"names":["React","useEffect","WalletCard","Modal","List","makeStyles","metamaskLogo","walletConnectLogo","coingBaseLogo","useWallet","config","connectToNetwork","useStyles","theme","paper","position","width","maxWidth","backgroundColor","palette","background","boxShadow","shadows","padding","spacing","outline","WalletProviderModal","_ref","open","handleClose","classes","account","connect","error","ethereum","window","createElement","style","display","alignItems","justifyContent","onClose","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","toString","component","icon","src","alt","height","onConnect","networkVersion","chainId","title","color"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/components/WalletProviderModal/WalletProviderModal.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport WalletCard from './WalletCard';\nimport { Modal, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport metamaskLogo from '../../assets/img/metamask-fox.svg';\nimport walletConnectLogo from '../../assets/img/wallet-connect.svg';\nimport coingBaseLogo from '../../assets/img/coinbase_logo.jpeg';\nimport { useWallet } from 'use-wallet';\nimport config from '../../config';\nimport { connectToNetwork } from '../../hooks/useNetworkPrompt';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: '400px',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: 'none',\n  },\n}));\n\nconst WalletProviderModal = ({ open, handleClose }) => {\n  const classes = useStyles();\n\n  const { account, connect, error } = useWallet();\n  const {ethereum} = window;\n\n\n  useEffect(() => {\n    if (account) {\n      handleClose();\n    }\n  });\n\n  return (\n    <Modal\n      aria-labelledby=\"connect a wallet\"\n      aria-describedby=\"connect your crypto wallet\"\n      open={open}\n      style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n      onClose={handleClose}\n    >\n      <div className={classes.paper}>\n        <h2>Connect Wallet</h2>\n        { error && error.toString() !== '[object Object]' && <p style={{'color': 'red'}}>{ error.toString() }</p> }\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          <WalletCard\n            icon={<img src={metamaskLogo} alt=\"Metamask logo\" style={{ height: 32 }} />}\n            onConnect={async () => {\n              if (ethereum && ethereum.networkVersion !== config.chainId.toString()) {\n                await connectToNetwork(ethereum);\n              }\n              connect('injected');\n            }}\n            title=\"Metamask\"\n          />\n          <WalletCard\n            icon={<img src={walletConnectLogo} alt=\"Wallet Connect logo\" style={{ height: 24, color: 'white' }} />}\n            onConnect={async () => {\n              connect('walletconnect');\n            }}\n            title=\"WalletConnect\"\n          />\n          <WalletCard\n            icon={<img src={coingBaseLogo} alt=\"Coinbase wallet logo\" style={{ height: 32, color: 'white' }} />}\n            onConnect={async () => {\n              connect('walletlink');\n            }}\n            title=\"Coinbase Wallet\"\n          />\n        </List>\n      </div>\n    </Modal>\n  );\n};\n\nexport default WalletProviderModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}