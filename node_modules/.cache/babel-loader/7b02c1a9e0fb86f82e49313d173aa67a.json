{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\nimport warning from 'tiny-warning';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\n\n// A type of promise-like that resolves synchronously and supports only one observer\nvar _iteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.iterator || (Symbol.iterator = /*#__PURE__*/Symbol(\"Symbol.iterator\")) : \"@@iterator\"; // Asynchronously iterate through an object's values\nvar _asyncIteratorSymbol = /*#__PURE__*/typeof Symbol !== \"undefined\" ? Symbol.asyncIterator || (Symbol.asyncIterator = /*#__PURE__*/Symbol(\"Symbol.asyncIterator\")) : \"@@asyncIterator\"; // Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\n\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n  return result;\n} // Asynchronously await a promise and pass the result to a finally continuation\n\nfunction parseSendReturn(sendReturn) {\n  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn;\n}\nvar NoEthereumProviderError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(NoEthereumProviderError, _Error);\n  function NoEthereumProviderError() {\n    var _this;\n    _this = _Error.call(this) || this;\n    _this.name = _this.constructor.name;\n    _this.message = 'No Ethereum provider was passed to the constructor or found on window.ethereum.';\n    return _this;\n  }\n  return NoEthereumProviderError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar UserRejectedRequestError = /*#__PURE__*/function (_Error2) {\n  _inheritsLoose(UserRejectedRequestError, _Error2);\n  function UserRejectedRequestError() {\n    var _this2;\n    _this2 = _Error2.call(this) || this;\n    _this2.name = _this2.constructor.name;\n    _this2.message = 'The user rejected the request.';\n    return _this2;\n  }\n  return UserRejectedRequestError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar ProvidedConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(ProvidedConnector, _AbstractConnector);\n  function ProvidedConnector(_ref) {\n    var _this3;\n    var _ref$provider = _ref.provider,\n      provider = _ref$provider === void 0 ? window.ethereum : _ref$provider,\n      supportedChainIds = _ref.supportedChainIds;\n    _this3 = _AbstractConnector.call(this, {\n      supportedChainIds: supportedChainIds\n    }) || this;\n    _this3.provider = provider;\n    _this3.handleNetworkChanged = _this3.handleNetworkChanged.bind(_assertThisInitialized(_this3));\n    _this3.handleChainChanged = _this3.handleChainChanged.bind(_assertThisInitialized(_this3));\n    _this3.handleAccountsChanged = _this3.handleAccountsChanged.bind(_assertThisInitialized(_this3));\n    _this3.handleClose = _this3.handleClose.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n  var _proto = ProvidedConnector.prototype;\n  _proto.handleChainChanged = function handleChainChanged(chainId) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    }\n    this.emitUpdate({\n      chainId: chainId,\n      provider: this.provider\n    });\n  };\n  _proto.handleAccountsChanged = function handleAccountsChanged(accounts) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n    }\n    if (accounts.length === 0) {\n      this.emitDeactivate();\n    } else {\n      this.emitUpdate({\n        account: accounts[0]\n      });\n    }\n  };\n  _proto.handleClose = function handleClose(code, reason) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'close' event with payload\", code, reason);\n    }\n    this.emitDeactivate();\n  };\n  _proto.handleNetworkChanged = function handleNetworkChanged(networkId) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId);\n    }\n    this.emitUpdate({\n      chainId: networkId,\n      provider: this.provider\n    });\n  };\n  _proto.activate = function activate() {\n    try {\n      var _temp5 = function _temp5(_result) {\n        if (_exit2) return _result;\n        function _temp2() {\n          return _extends({\n            provider: _this5.provider\n          }, account ? {\n            account: account\n          } : {});\n        }\n        var _temp = function () {\n          if (!account) {\n            // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n            return Promise.resolve(_this5.provider.enable().then(function (sendReturn) {\n              return sendReturn && parseSendReturn(sendReturn)[0];\n            })).then(function (_this4$provider$enabl) {\n              account = _this4$provider$enabl;\n            });\n          }\n        }();\n\n        // if unsuccessful, try enable\n        return _temp && _temp.then ? _temp.then(_temp2) : _temp2(_temp);\n      };\n      var _exit2 = false;\n      var _this5 = this;\n      if (!_this5.provider) {\n        throw new NoEthereumProviderError();\n      }\n      if (_this5.provider.on) {\n        _this5.provider.on('chainChanged', _this5.handleChainChanged);\n        _this5.provider.on('accountsChanged', _this5.handleAccountsChanged);\n        _this5.provider.on('close', _this5.handleClose);\n        _this5.provider.on('networkChanged', _this5.handleNetworkChanged);\n      }\n      if (_this5.provider.isMetaMask) {\n        ;\n        _this5.provider.autoRefreshOnNetworkChange = false;\n      } // try to activate + get account via eth_requestAccounts\n\n      var account;\n      var _temp6 = _catch(function () {\n        return Promise.resolve(_this5.provider.send('eth_requestAccounts').then(function (sendReturn) {\n          return parseSendReturn(sendReturn)[0];\n        })).then(function (_this4$provider$send$) {\n          account = _this4$provider$send$;\n        });\n      }, function (error) {\n        if (error.code === 4001) {\n          throw new UserRejectedRequestError();\n        }\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'eth_requestAccounts was unsuccessful, falling back to enable') : void 0;\n      });\n      return Promise.resolve(_temp6 && _temp6.then ? _temp6.then(_temp5) : _temp5(_temp6));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this7 = this;\n      return Promise.resolve(_this7.provider);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getChainId = function getChainId() {\n    try {\n      var _temp12 = function _temp12() {\n        function _temp9() {\n          if (!chainId) {\n            try {\n              chainId = parseSendReturn(_this9.provider.send({\n                method: 'net_version'\n              }));\n            } catch (_unused) {\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties') : void 0;\n            }\n          }\n          if (!chainId) {\n            if (_this9.provider.isDapper) {\n              chainId = parseSendReturn(_this9.provider.cachedResults.net_version);\n            } else {\n              chainId = _this9.provider.chainId || _this9.provider.networkVersion || _this9.provider._chainId;\n            }\n          }\n          return chainId;\n        }\n        var _temp8 = function () {\n          if (!chainId) {\n            var _temp14 = _catch(function () {\n              return Promise.resolve(_this9.provider.send('net_version').then(parseSendReturn)).then(function (_this8$provider$send$2) {\n                chainId = _this8$provider$send$2;\n              });\n            }, function () {\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'net_version was unsuccessful, falling back to net version v2') : void 0;\n            });\n            if (_temp14 && _temp14.then) return _temp14.then(function () {});\n          }\n        }();\n        return _temp8 && _temp8.then ? _temp8.then(_temp9) : _temp9(_temp8);\n      };\n      var _this9 = this;\n      if (!_this9.provider) {\n        throw new NoEthereumProviderError();\n      }\n      var chainId;\n      var _temp13 = _catch(function () {\n        return Promise.resolve(_this9.provider.send('eth_chainId').then(parseSendReturn)).then(function (_this8$provider$send$) {\n          chainId = _this8$provider$send$;\n        });\n      }, function () {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'eth_chainId was unsuccessful, falling back to net_version') : void 0;\n      });\n      return Promise.resolve(_temp13 && _temp13.then ? _temp13.then(_temp12) : _temp12(_temp13));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getAccount = function getAccount() {\n    try {\n      var _temp20 = function _temp20() {\n        function _temp17() {\n          if (!account) {\n            account = parseSendReturn(_this11.provider.send({\n              method: 'eth_accounts'\n            }))[0];\n          }\n          return account;\n        }\n        var _temp16 = function () {\n          if (!account) {\n            var _temp22 = _catch(function () {\n              return Promise.resolve(_this11.provider.enable().then(function (sendReturn) {\n                return parseSendReturn(sendReturn)[0];\n              })).then(function (_this10$provider$enab) {\n                account = _this10$provider$enab;\n              });\n            }, function () {\n              process.env.NODE_ENV !== \"production\" ? warning(false, 'enable was unsuccessful, falling back to eth_accounts v2') : void 0;\n            });\n            if (_temp22 && _temp22.then) return _temp22.then(function () {});\n          }\n        }();\n        return _temp16 && _temp16.then ? _temp16.then(_temp17) : _temp17(_temp16);\n      };\n      var _this11 = this;\n      if (!_this11.provider) {\n        throw new NoEthereumProviderError();\n      }\n      var account;\n      var _temp21 = _catch(function () {\n        return Promise.resolve(_this11.provider.send('eth_accounts').then(function (sendReturn) {\n          return parseSendReturn(sendReturn)[0];\n        })).then(function (_this10$provider$send) {\n          account = _this10$provider$send;\n        });\n      }, function () {\n        process.env.NODE_ENV !== \"production\" ? warning(false, 'eth_accounts was unsuccessful, falling back to enable') : void 0;\n      });\n      return Promise.resolve(_temp21 && _temp21.then ? _temp21.then(_temp20) : _temp20(_temp21));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.deactivate = function deactivate() {\n    if (this.provider && this.provider.removeListener) {\n      this.provider.removeListener('chainChanged', this.handleChainChanged);\n      this.provider.removeListener('accountsChanged', this.handleAccountsChanged);\n      this.provider.removeListener('close', this.handleClose);\n      this.provider.removeListener('networkChanged', this.handleNetworkChanged);\n    }\n  };\n  _proto.isAuthorized = function isAuthorized() {\n    try {\n      var _this13 = this;\n      if (!_this13.provider) {\n        return Promise.resolve(false);\n      }\n      return Promise.resolve(_catch(function () {\n        return Promise.resolve(_this13.provider.send('eth_accounts').then(function (sendReturn) {\n          if (parseSendReturn(sendReturn).length > 0) {\n            return true;\n          } else {\n            return false;\n          }\n        }));\n      }, function () {\n        return false;\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  return ProvidedConnector;\n}(AbstractConnector);\nexport { NoEthereumProviderError, ProvidedConnector, UserRejectedRequestError };","map":{"version":3,"sources":["../../../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/index.ts"],"names":["_iteratorSymbol","Symbol","iterator","_asyncIteratorSymbol","asyncIterator","_catch","body","recover","result","e","then","parseSendReturn","sendReturn","hasOwnProperty","NoEthereumProviderError","Error","name","constructor","message","UserRejectedRequestError","ProvidedConnector","AbstractConnector","provider","window","ethereum","supportedChainIds","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","chainId","console","log","emitUpdate","accounts","length","emitDeactivate","account","code","reason","networkId","activate","on","isMetaMask","autoRefreshOnNetworkChange","send","error","enable","getProvider","getChainId","method","isDapper","cachedResults","net_version","networkVersion","_chainId","getAccount","deactivate","removeListener","isAuthorized"],"mappings":"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","sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport warning from 'tiny-warning'\n\nimport { SendReturnResult, SendReturn, Send, SendOld } from './types'\n\nfunction parseSendReturn(sendReturn: SendReturnResult | SendReturn): any {\n  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn\n}\n\nexport class NoEthereumProviderError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'No Ethereum provider was passed to the constructor or found on window.ethereum.'\n  }\n}\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\ninterface ProvidedConnectorArguments {\n  provider?: any\n  supportedChainIds: number[]\n}\n\nexport class ProvidedConnector extends AbstractConnector {\n  private provider: Ethereum\n\n  constructor({ provider = window.ethereum, supportedChainIds }: ProvidedConnectorArguments) {\n    super({ supportedChainIds })\n\n    this.provider = provider\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleChainChanged(chainId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId, provider: this.provider })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    if (accounts.length === 0) {\n      this.emitDeactivate()\n    } else {\n      this.emitUpdate({ account: accounts[0] })\n    }\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason)\n    }\n    this.emitDeactivate()\n  }\n\n  private handleNetworkChanged(networkId: string | number): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    }\n    this.emitUpdate({ chainId: networkId, provider: this.provider })\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      throw new NoEthereumProviderError()\n    }\n\n    if (this.provider.on) {\n      this.provider.on('chainChanged', this.handleChainChanged)\n      this.provider.on('accountsChanged', this.handleAccountsChanged)\n      this.provider.on('close', this.handleClose)\n      this.provider.on('networkChanged', this.handleNetworkChanged)\n    }\n\n    if ((this.provider as any).isMetaMask) {\n      ;(this.provider as any).autoRefreshOnNetworkChange = false\n    }\n\n    // try to activate + get account via eth_requestAccounts\n    let account\n    try {\n      account = await (this.provider.send as Send)('eth_requestAccounts').then(\n        sendReturn => parseSendReturn(sendReturn)[0]\n      )\n    } catch (error) {\n      if ((error as any).code === 4001) {\n        throw new UserRejectedRequestError()\n      }\n      warning(false, 'eth_requestAccounts was unsuccessful, falling back to enable')\n    }\n\n    // if unsuccessful, try enable\n    if (!account) {\n      // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n      account = await this.provider.enable().then(sendReturn => sendReturn && parseSendReturn(sendReturn)[0])\n    }\n\n    return { provider: this.provider, ...(account ? { account } : {}) }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number | string> {\n    if (!this.provider) {\n      throw new NoEthereumProviderError()\n    }\n\n    let chainId\n    try {\n      chainId = await (this.provider.send as Send)('eth_chainId').then(parseSendReturn)\n    } catch {\n      warning(false, 'eth_chainId was unsuccessful, falling back to net_version')\n    }\n\n    if (!chainId) {\n      try {\n        chainId = await (this.provider.send as Send)('net_version').then(parseSendReturn)\n      } catch {\n        warning(false, 'net_version was unsuccessful, falling back to net version v2')\n      }\n    }\n\n    if (!chainId) {\n      try {\n        chainId = parseSendReturn((this.provider.send as SendOld)({ method: 'net_version' }))\n      } catch {\n        warning(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties')\n      }\n    }\n\n    if (!chainId) {\n      if ((this.provider as any).isDapper) {\n        chainId = parseSendReturn((this.provider as any).cachedResults.net_version)\n      } else {\n        chainId =\n          (this.provider as any).chainId || (this.provider as any).networkVersion || (this.provider as any)._chainId\n      }\n    }\n\n    return chainId\n  }\n\n  public async getAccount(): Promise<null | string> {\n    if (!this.provider) {\n      throw new NoEthereumProviderError()\n    }\n\n    let account\n    try {\n      account = await (this.provider.send as Send)('eth_accounts').then(sendReturn => parseSendReturn(sendReturn)[0])\n    } catch {\n      warning(false, 'eth_accounts was unsuccessful, falling back to enable')\n    }\n\n    if (!account) {\n      try {\n        account = await this.provider.enable().then(sendReturn => parseSendReturn(sendReturn)[0])\n      } catch {\n        warning(false, 'enable was unsuccessful, falling back to eth_accounts v2')\n      }\n    }\n\n    if (!account) {\n      account = parseSendReturn((this.provider.send as SendOld)({ method: 'eth_accounts' }))[0]\n    }\n\n    return account\n  }\n\n  public deactivate() {\n    if (this.provider && this.provider.removeListener) {\n      this.provider.removeListener('chainChanged', this.handleChainChanged)\n      this.provider.removeListener('accountsChanged', this.handleAccountsChanged)\n      this.provider.removeListener('close', this.handleClose)\n      this.provider.removeListener('networkChanged', this.handleNetworkChanged)\n    }\n  }\n\n  public async isAuthorized(): Promise<boolean> {\n    if (!this.provider) {\n      return false\n    }\n\n    try {\n      return await (this.provider.send as Send)('eth_accounts').then(sendReturn => {\n        if (parseSendReturn(sendReturn).length > 0) {\n          return true\n        } else {\n          return false\n        }\n      })\n    } catch {\n      return false\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}