{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/wrapNativeSuper\";\nimport randombytes from 'randombytes';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport base64urlLib from 'base64url';\nimport keccakLib from 'keccak';\nvar randomId = function randomId() {\n  return randombytes(32).toString(\"hex\");\n};\nvar URLWithHashParams = /*#__PURE__*/function (_URL) {\n  _inherits(URLWithHashParams, _URL);\n  var _super = _createSuper(URLWithHashParams);\n  function URLWithHashParams() {\n    var _this;\n    _classCallCheck(this, URLWithHashParams);\n    _this = _super.apply(this, arguments);\n    _defineProperty(_assertThisInitialized(_this), \"hashParams\", new URLSearchParams());\n    return _this;\n  }\n  _createClass(URLWithHashParams, [{\n    key: \"toString\",\n    value: function toString() {\n      this.hash = this.hashParams.toString();\n      return _get(_getPrototypeOf(URLWithHashParams.prototype), \"toString\", this).call(this);\n    }\n  }]);\n  return URLWithHashParams;\n}( /*#__PURE__*/_wrapNativeSuper(URL));\nvar base64url = base64urlLib;\nfunction safebtoa(str) {\n  return base64url.encode(str);\n}\nfunction safeatob(str) {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\nvar keccak = keccakLib;\nfunction base64toJSON(b64str) {\n  return JSON.parse(base64url.decode(b64str));\n}\nfunction jsonToBase64(json) {\n  return base64url.encode(JSON.stringify(json));\n}\nfunction keccak256(str) {\n  var input = str;\n  if (typeof str === \"string\" && str.slice(0, 2) === \"0x\" && str.length === 66) {\n    input = Buffer.from(str.slice(2), \"hex\");\n  }\n  var data = \"0x\".concat(keccak(\"keccak256\").update(input).digest(\"hex\").padStart(64, \"0\"));\n  return data;\n}\nexport { URLWithHashParams, base64toJSON, base64url, jsonToBase64, keccak, keccak256, randomId, safeatob, safebtoa };","map":{"version":3,"sources":["../src/randomId.ts","../src/url.ts","../src/utils.ts"],"names":["randomId","randombytes","toString","URLWithHashParams","URL","URLSearchParams","hash","hashParams","call","base64url","base64urlLib","safebtoa","str","encode","safeatob","decode","keccak","keccakLib","base64toJSON","b64str","JSON","parse","jsonToBase64","json","stringify","keccak256","input","slice","length","Buffer","from","data","update","digest","padStart"],"mappings":";;;;;;;;;;;;AAEaA,IAAAA,QAAQ,GAAG,SAAXA,QAAQ,CAAA;EAAA,OAAiBC,WAAW,CAAC,EAAE,CAAC,CAACC,QAAQ,CAAC,KAAK,CAAA;AAAA;AAAA,ICAvDC,iBAAkB,0BAAA,IAAA;EAAA,SAAA,CAAA,iBAAA,EAAA,IAAA;EAAA,IAAA,MAAA,GAAA,YAAA,CAAA,iBAAA;EAAW,SAAA,kBAAA,EAAA;IAAA,IAAA,KAAA;IAAA,eAAA,OAAA,iBAAA;IAAA,KAAA,GAAA,MAAA,CAAA,KAAA,OAAA,SAAA;IAAA,eACf,CAAA,sBAAA,CAAA,KAAA,GAAA,YAAA,EAAA,IAAIE,eAAe,EAAE,CAAA;IAAA,OAAA,KAAA;EAAA;EAAA,YAAA,CAAA,iBAAA;IAAA,GAAA;IAAA,KAAA,EAE9CH,SAAAA,SAAAA,EAAQ;MACN,IAAI,CAACI,IAAI,GAAG,IAAI,CAACC,UAAU,CAACL,QAAQ,EAAE;MACtC,OAAO,IAAA,CAAA,eAAA,CAAA,iBAAA,CAAA,SAAA,qBAAeM,IAAI,CAAC,IAAI,CAAC;IAClC;EAAA;EAAA,OAAA,iBAAA;AAAA,gBAAA,gBAAA,CANqCJ,GAAG;ACCnC,IAAMK,SAAS,GAAGC,YAAAA;AAEnB,SAAUC,QAAQ,CAACC,GAAW,EAAA;EAClC,OAAOH,SAAS,CAACI,MAAM,CAACD,GAAG,CAAC;AAC9B;AAEM,SAAUE,QAAQ,CAACF,GAAW,EAAA;EAClC;EACA,OAAOH,SAAS,CAACM,MAAM,CAACH,GAAG,CAAC;AAC9B;AAEO,IAAMI,MAAM,GAAGC,SAAAA;AAIhB,SAAUC,YAAY,CAACC,MAAc,EAAA;EACzC,OAAOC,IAAI,CAACC,KAAK,CAACZ,SAAS,CAACM,MAAM,CAACI,MAAM,CAAC,CAAC;AAC7C;AAEM,SAAUG,YAAY,CAACC,IAA6B,EAAA;EACxD,OAAOd,SAAS,CAACI,MAAM,CAACO,IAAI,CAACI,SAAS,CAACD,IAAI,CAAC,CAAC;AAC/C;AAEM,SAAUE,SAAS,CAACb,GAAW,EAAA;EACnC,IAAIc,KAAK,GAAoBd,GAAG;EAChC,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIA,GAAG,CAACe,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,IAAI,IAAIf,GAAG,CAACgB,MAAM,KAAK,EAAE,EAAE;IAC5EF,KAAK,GAAGG,MAAM,CAACC,IAAI,CAAClB,GAAG,CAACe,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC;EACzC;EACD,IAAMI,IAAI,QAAA,MAAA,CAAQf,MAAM,CAAC,WAAW,CAAC,CAACgB,MAAM,CAACN,KAAK,CAAC,CAACO,MAAM,CAAC,KAAK,CAAC,CAACC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAE;EACrF,OAAOH,IAAI;AACb","sourcesContent":["import randombytes from 'randombytes';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport base64urlLib from 'base64url';\nimport keccakLib from 'keccak';\n\nconst randomId = () => randombytes(32).toString(\"hex\");\n\nclass URLWithHashParams extends URL {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"hashParams\", new URLSearchParams());\n  }\n  toString() {\n    this.hash = this.hashParams.toString();\n    return super.toString.call(this);\n  }\n}\n\nconst base64url = base64urlLib;\nfunction safebtoa(str) {\n  return base64url.encode(str);\n}\nfunction safeatob(str) {\n  // Going backwards: from bytestream, to percent-encoding, to original string.\n  return base64url.decode(str);\n}\nconst keccak = keccakLib;\nfunction base64toJSON(b64str) {\n  return JSON.parse(base64url.decode(b64str));\n}\nfunction jsonToBase64(json) {\n  return base64url.encode(JSON.stringify(json));\n}\nfunction keccak256(str) {\n  let input = str;\n  if (typeof str === \"string\" && str.slice(0, 2) === \"0x\" && str.length === 66) {\n    input = Buffer.from(str.slice(2), \"hex\");\n  }\n  const data = `0x${keccak(\"keccak256\").update(input).digest(\"hex\").padStart(64, \"0\")}`;\n  return data;\n}\n\nexport { URLWithHashParams, base64toJSON, base64url, jsonToBase64, keccak, keccak256, randomId, safeatob, safebtoa };\n//# sourceMappingURL=openloginUtils.esm.js.map\n"]},"metadata":{},"sourceType":"module"}