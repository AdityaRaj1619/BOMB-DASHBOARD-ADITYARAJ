{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\src\\\\views\\\\Bank\\\\components\\\\ZapModal.tsx\";\nimport React, { useState, useMemo } from 'react';\nimport { Button, Select, MenuItem, InputLabel, withStyles } from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport styled from 'styled-components';\nimport { getDisplayBalance } from '../../../utils/formatBalance';\nimport Label from '../../../components/Label';\nimport useLpStats from '../../../hooks/useLpStats';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useBombFinance from '../../../hooks/useBombFinance';\nimport { useWallet } from 'use-wallet';\nimport useApproveZapper, { ApprovalState } from '../../../hooks/useApproveZapper';\nimport { BOMB_TICKER, BSHARE_TICKER, BNB_TICKER, BTC_TICKER } from '../../../utils/constants';\nimport { Alert } from '@material-ui/lab';\nconst ZapModal = _ref => {\n  let {\n    onConfirm,\n    onDismiss,\n    tokenName = '',\n    decimals = 18\n  } = _ref;\n  const bombFinance = useBombFinance();\n  const {\n    balance\n  } = useWallet();\n  const ftmBalance = (Number(balance) / 1e18).toFixed(4).toString();\n  const bombBalance = useTokenBalance(bombFinance.BOMB);\n  const bshareBalance = useTokenBalance(bombFinance.BSHARE);\n  const btcBalance = useTokenBalance(bombFinance.BTC);\n  const [val, setVal] = useState('');\n  const [zappingToken, setZappingToken] = useState(BNB_TICKER);\n  const [zappingTokenBalance, setZappingTokenBalance] = useState(ftmBalance);\n  const [estimate, setEstimate] = useState({\n    token0: '0',\n    token1: '0'\n  }); // token0 will always be BNB in this case\n  const [approveZapperStatus, approveZapper] = useApproveZapper(zappingToken);\n  const bombFtmLpStats = useLpStats('BOMB-BTCB-LP');\n  const tShareFtmLpStats = useLpStats('BSHARE-BNB-LP');\n  const bombLPStats = useMemo(() => bombFtmLpStats ? bombFtmLpStats : null, [bombFtmLpStats]);\n  const bshareLPStats = useMemo(() => tShareFtmLpStats ? tShareFtmLpStats : null, [tShareFtmLpStats]);\n  const ftmAmountPerLP = tokenName.startsWith(BOMB_TICKER) ? bombLPStats === null || bombLPStats === void 0 ? void 0 : bombLPStats.ftmAmount : bshareLPStats === null || bshareLPStats === void 0 ? void 0 : bshareLPStats.ftmAmount;\n  /**\n   * Checks if a value is a valid number or not\n   * @param n is the value to be evaluated for a number\n   * @returns\n   */\n  function isNumeric(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  const handleChangeAsset = event => {\n    const value = event.target.value;\n    setZappingToken(value);\n    setZappingTokenBalance(ftmBalance);\n    if (event.target.value === BSHARE_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(bshareBalance, decimals));\n    }\n    if (event.target.value === BOMB_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(bombBalance, decimals));\n    }\n    if (event.target.value === BTC_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(btcBalance, decimals));\n    }\n  };\n  const handleChange = async e => {\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\n      setVal(e.currentTarget.value);\n      setEstimate({\n        token0: '0',\n        token1: '0'\n      });\n    }\n    if (!isNumeric(e.currentTarget.value)) return;\n    setVal(e.currentTarget.value);\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(e.currentTarget.value));\n    setEstimate({\n      token0: estimateZap[0].toString(),\n      token1: estimateZap[1].toString()\n    });\n  };\n  const handleSelectMax = async () => {\n    setVal(zappingTokenBalance);\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(zappingTokenBalance));\n    setEstimate({\n      token0: estimateZap[0].toString(),\n      token1: estimateZap[1].toString()\n    });\n  };\n  return /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, {\n    text: `Zap in ${tokenName}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StyledActionSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InputLabel, {\n    style: {\n      color: '#2c2560'\n    },\n    id: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, \"Select asset to zap with\"), /*#__PURE__*/React.createElement(Select, {\n    onChange: handleChangeAsset,\n    style: {\n      color: '#2c2560'\n    },\n    labelId: \"label\",\n    id: \"select\",\n    value: zappingToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(StyledMenuItem, {\n    value: BNB_TICKER,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"BNB\"), /*#__PURE__*/React.createElement(StyledMenuItem, {\n    value: BSHARE_TICKER,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"BSHARE\")), /*#__PURE__*/React.createElement(TokenInput, {\n    onSelectMax: handleSelectMax,\n    onChange: handleChange,\n    value: val,\n    max: zappingTokenBalance,\n    symbol: zappingToken,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Label, {\n    text: \"Zap Estimations\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(StyledDescriptionText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, ' ', tokenName, \": \", Number(estimate.token0) / Number(ftmAmountPerLP)), /*#__PURE__*/React.createElement(StyledDescriptionText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, ' ', \"(\", Number(estimate.token0), \" \", tokenName.startsWith(BSHARE_TICKER) ? BSHARE_TICKER : BNB_TICKER, \" /\", ' ', Number(estimate.token1), \" \", tokenName.startsWith(BSHARE_TICKER) ? BNB_TICKER : BSHARE_TICKER, \")\", ' '), /*#__PURE__*/React.createElement(ModalActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: () => approveZapperStatus !== ApprovalState.APPROVED ? approveZapper() : onConfirm(zappingToken, tokenName, val),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, approveZapperStatus !== ApprovalState.APPROVED ? 'Approve' : \"Let's go\")), /*#__PURE__*/React.createElement(StyledActionSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Alert, {\n    variant: \"filled\",\n    severity: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, \"New feature. Use at your own risk!\"));\n};\nconst StyledActionSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledDescriptionText = styled.div`\n  align-items: center;\n  color: ${props => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 22px;\n  justify-content: flex-start;\n`;\nconst StyledMenuItem = withStyles({\n  root: {\n    backgroundColor: 'white',\n    color: '#2c2560',\n    '&:hover': {\n      backgroundColor: 'grey',\n      color: '#2c2560'\n    },\n    selected: {\n      backgroundColor: 'black'\n    }\n  }\n})(MenuItem);\nexport default ZapModal;","map":{"version":3,"names":["React","useState","useMemo","Button","Select","MenuItem","InputLabel","withStyles","Modal","ModalActions","ModalTitle","TokenInput","styled","getDisplayBalance","Label","useLpStats","useTokenBalance","useBombFinance","useWallet","useApproveZapper","ApprovalState","BOMB_TICKER","BSHARE_TICKER","BNB_TICKER","BTC_TICKER","Alert","ZapModal","_ref","onConfirm","onDismiss","tokenName","decimals","bombFinance","balance","ftmBalance","Number","toFixed","toString","bombBalance","BOMB","bshareBalance","BSHARE","btcBalance","BTC","val","setVal","zappingToken","setZappingToken","zappingTokenBalance","setZappingTokenBalance","estimate","setEstimate","token0","token1","approveZapperStatus","approveZapper","bombFtmLpStats","tShareFtmLpStats","bombLPStats","bshareLPStats","ftmAmountPerLP","startsWith","ftmAmount","isNumeric","n","isNaN","parseFloat","isFinite","handleChangeAsset","event","value","target","handleChange","e","currentTarget","estimateZap","estimateZapIn","String","handleSelectMax","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","text","StyledActionSpacer","style","color","id","onChange","labelId","StyledMenuItem","onSelectMax","max","symbol","StyledDescriptionText","variant","onClick","APPROVED","severity","div","props","theme","spacing","grey","root","backgroundColor","selected"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/views/Bank/components/ZapModal.tsx"],"sourcesContent":["import React, {useState, useMemo} from 'react';\n\nimport {Button, Select, MenuItem, InputLabel, withStyles} from '@material-ui/core';\n// import Button from '../../../components/Button'\nimport Modal, {ModalProps} from '../../../components/Modal';\nimport ModalActions from '../../../components/ModalActions';\nimport ModalTitle from '../../../components/ModalTitle';\nimport TokenInput from '../../../components/TokenInput';\nimport styled from 'styled-components';\n\nimport {getDisplayBalance} from '../../../utils/formatBalance';\nimport Label from '../../../components/Label';\nimport useLpStats from '../../../hooks/useLpStats';\nimport useTokenBalance from '../../../hooks/useTokenBalance';\nimport useBombFinance from '../../../hooks/useBombFinance';\nimport {useWallet} from 'use-wallet';\nimport useApproveZapper, {ApprovalState} from '../../../hooks/useApproveZapper';\nimport {BOMB_TICKER, BSHARE_TICKER, BNB_TICKER, BTC_TICKER} from '../../../utils/constants';\nimport {Alert} from '@material-ui/lab';\n\ninterface ZapProps extends ModalProps {\n  onConfirm: (zapAsset: string, lpName: string, amount: string) => void;\n  tokenName?: string;\n  decimals?: number;\n}\n\nconst ZapModal: React.FC<ZapProps> = ({onConfirm, onDismiss, tokenName = '', decimals = 18}) => {\n  const bombFinance = useBombFinance();\n  const {balance} = useWallet();\n  const ftmBalance = (Number(balance) / 1e18).toFixed(4).toString();\n  const bombBalance = useTokenBalance(bombFinance.BOMB);\n  const bshareBalance = useTokenBalance(bombFinance.BSHARE);\n  const btcBalance = useTokenBalance(bombFinance.BTC);\n  const [val, setVal] = useState('');\n  const [zappingToken, setZappingToken] = useState(BNB_TICKER);\n  const [zappingTokenBalance, setZappingTokenBalance] = useState(ftmBalance);\n  const [estimate, setEstimate] = useState({token0: '0', token1: '0'}); // token0 will always be BNB in this case\n  const [approveZapperStatus, approveZapper] = useApproveZapper(zappingToken);\n  const bombFtmLpStats = useLpStats('BOMB-BTCB-LP');\n  const tShareFtmLpStats = useLpStats('BSHARE-BNB-LP');\n  const bombLPStats = useMemo(() => (bombFtmLpStats ? bombFtmLpStats : null), [bombFtmLpStats]);\n  const bshareLPStats = useMemo(() => (tShareFtmLpStats ? tShareFtmLpStats : null), [tShareFtmLpStats]);\n  const ftmAmountPerLP = tokenName.startsWith(BOMB_TICKER) ? bombLPStats?.ftmAmount : bshareLPStats?.ftmAmount;\n  /**\n   * Checks if a value is a valid number or not\n   * @param n is the value to be evaluated for a number\n   * @returns\n   */\n  function isNumeric(n: any) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n  }\n  const handleChangeAsset = (event: any) => {\n    const value = event.target.value;\n    setZappingToken(value);\n    setZappingTokenBalance(ftmBalance);\n    if (event.target.value === BSHARE_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(bshareBalance, decimals));\n    }\n    if (event.target.value === BOMB_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(bombBalance, decimals));\n    }\n    if (event.target.value === BTC_TICKER) {\n      setZappingTokenBalance(getDisplayBalance(btcBalance, decimals));\n    }\n  };\n\n  const handleChange = async (e: any) => {\n    if (e.currentTarget.value === '' || e.currentTarget.value === 0) {\n      setVal(e.currentTarget.value);\n      setEstimate({token0: '0', token1: '0'});\n    }\n    if (!isNumeric(e.currentTarget.value)) return;\n    setVal(e.currentTarget.value);\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(e.currentTarget.value));\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\n  };\n\n  const handleSelectMax = async () => {\n    setVal(zappingTokenBalance);\n    const estimateZap = await bombFinance.estimateZapIn(zappingToken, tokenName, String(zappingTokenBalance));\n    setEstimate({token0: estimateZap[0].toString(), token1: estimateZap[1].toString()});\n  };\n\n  return (\n    <Modal>\n      <ModalTitle text={`Zap in ${tokenName}`} />\n\n      <StyledActionSpacer />\n      <InputLabel style={{color: '#2c2560'}} id=\"label\">\n        Select asset to zap with\n      </InputLabel>\n      <Select onChange={handleChangeAsset} style={{color: '#2c2560'}} labelId=\"label\" id=\"select\" value={zappingToken}>\n        <StyledMenuItem value={BNB_TICKER}>BNB</StyledMenuItem>\n        <StyledMenuItem value={BSHARE_TICKER}>BSHARE</StyledMenuItem>\n        {/* <StyledMenuItem value={BTC_TICKER}>BTC</StyledMenuItem> */}\n        {/* Bomb as an input for zapping will be disabled due to issues occuring with the Gatekeeper system */}\n        {/* <StyledMenuItem value={BOMB_TICKER}>BOMB</StyledMenuItem> */}\n      </Select>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={zappingTokenBalance}\n        symbol={zappingToken}\n      />\n      <Label text=\"Zap Estimations\" />\n      <StyledDescriptionText>\n        {' '}\n        {tokenName}: {Number(estimate.token0) / Number(ftmAmountPerLP)}\n      </StyledDescriptionText>\n      <StyledDescriptionText>\n        {' '}\n        ({Number(estimate.token0)} {tokenName.startsWith(BSHARE_TICKER) ? BSHARE_TICKER : BNB_TICKER} /{' '}\n        {Number(estimate.token1)} {tokenName.startsWith(BSHARE_TICKER) ? BNB_TICKER : BSHARE_TICKER}){' '}\n      </StyledDescriptionText>\n      <ModalActions>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() =>\n            approveZapperStatus !== ApprovalState.APPROVED ? approveZapper() : onConfirm(zappingToken, tokenName, val)\n          }\n        >\n          {approveZapperStatus !== ApprovalState.APPROVED ? 'Approve' : \"Let's go\"}\n        </Button>\n      </ModalActions>\n\n      <StyledActionSpacer />\n      <Alert variant=\"filled\" severity=\"info\">\n        New feature. Use at your own risk!\n      </Alert>\n    </Modal>\n  );\n};\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledDescriptionText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[400]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 22px;\n  justify-content: flex-start;\n`;\nconst StyledMenuItem = withStyles({\n  root: {\n    backgroundColor: 'white',\n    color: '#2c2560',\n    '&:hover': {\n      backgroundColor: 'grey',\n      color: '#2c2560',\n    },\n    selected: {\n      backgroundColor: 'black',\n    },\n  },\n})(MenuItem);\n\nexport default ZapModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}