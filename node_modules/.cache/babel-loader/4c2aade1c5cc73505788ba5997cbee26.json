{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _inherits = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar _createSuper = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JsonRpcMulticallProvider = void 0;\nvar contracts_1 = require(\"@ethersproject/contracts\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar providers_1 = require(\"@ethersproject/providers\");\nvar Multicall_json_1 = __importDefault(require(\"./Multicall.json\"));\nvar logger = new logger_1.Logger('0.1.0');\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasSigner(obj) {\n  return obj.getSigner !== undefined;\n}\n// Multicall3 is deployed at the same create2 address on basically every chain\n// https://github.com/mds1/multicall\nvar multicall3Address = '0xcA11bde05977b3631167028862bE2a173976CA11';\nvar JsonRpcMulticallProvider = /*#__PURE__*/function (_providers_1$BaseProv) {\n  _inherits(JsonRpcMulticallProvider, _providers_1$BaseProv);\n  var _super = _createSuper(JsonRpcMulticallProvider);\n  function JsonRpcMulticallProvider(provider) {\n    var _this;\n    _classCallCheck(this, JsonRpcMulticallProvider);\n    _this = _super.call(this, provider.getNetwork());\n    _this.parent = provider;\n    return _this;\n  }\n  _createClass(JsonRpcMulticallProvider, [{\n    key: \"getSigner\",\n    value: function getSigner(addressOrIndex) {\n      if (!hasSigner(this.parent)) {\n        return logger.throwError('Parent provider does not support getSigner', logger_1.Logger.errors.NOT_IMPLEMENTED, {\n          parent: this.parent\n        });\n      }\n      return this.parent.getSigner(addressOrIndex);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  }, {\n    key: \"perform\",\n    value: function perform(method, params) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _this2 = this;\n        var reqParams, target, callData, newCall, promise, provider;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(method === 'call')) {\n                _context2.next = 14;\n                break;\n              }\n              reqParams = params;\n              target = reqParams.transaction.to;\n              callData = reqParams.transaction.data; // If there is no call data or unknown multicall contract, just passthrough to parent\n              if (!(!target || !callData)) {\n                _context2.next = 6;\n                break;\n              }\n              return _context2.abrupt(\"return\", this.parent.perform(method, params));\n            case 6:\n              if (!this._pendingBatch) {\n                this._pendingBatch = [];\n              }\n              newCall = {\n                request: {\n                  target: target,\n                  callData: callData\n                },\n                resolve: null,\n                reject: null\n              };\n              promise = new Promise(function (resolve, reject) {\n                newCall.resolve = resolve;\n                newCall.reject = reject;\n              });\n              this._pendingBatch.push(newCall);\n              if (!this._pendingBatchAggregator) {\n                provider = this.parent;\n                this._pendingBatchAggregator = setTimeout(function () {\n                  return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                    var batch, multicall, multicallResult;\n                    return _regeneratorRuntime().wrap(function _callee$(_context) {\n                      while (1) switch (_context.prev = _context.next) {\n                        case 0:\n                          batch = this._pendingBatch;\n                          if (batch) {\n                            _context.next = 3;\n                            break;\n                          }\n                          return _context.abrupt(\"return\");\n                        case 3:\n                          this._pendingBatch = null;\n                          this._pendingBatchAggregator = null;\n                          multicall = new contracts_1.Contract(multicall3Address, Multicall_json_1.default.abi, provider); // returns [blockNumber, call results], so results are at index 1\n                          _context.next = 8;\n                          return multicall.aggregate(batch.map(function (i) {\n                            return i.request;\n                          }));\n                        case 8:\n                          multicallResult = _context.sent;\n                          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                          multicallResult[1].map(function (result, i) {\n                            return batch[i].resolve(result);\n                          });\n                          this._pendingBatch = null;\n                          this._pendingBatchAggregator = null;\n                        case 12:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }, _callee, this);\n                  }));\n                }, 10);\n              }\n              return _context2.abrupt(\"return\", promise);\n            case 14:\n              return _context2.abrupt(\"return\", this.parent.perform(method, params));\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n    }\n  }, {\n    key: \"detectNetwork\",\n    value: function detectNetwork() {\n      return this.parent.detectNetwork();\n    }\n  }]);\n  return JsonRpcMulticallProvider;\n}(providers_1.BaseProvider);\nexports.JsonRpcMulticallProvider = JsonRpcMulticallProvider;","map":{"version":3,"sources":["../src/JsonRpcMulticallProvider.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.JsonRpcMulticallProvider = void 0;\nconst contracts_1 = require(\"@ethersproject/contracts\");\nconst logger_1 = require(\"@ethersproject/logger\");\nconst providers_1 = require(\"@ethersproject/providers\");\nconst Multicall_json_1 = __importDefault(require(\"./Multicall.json\"));\nconst logger = new logger_1.Logger('0.1.0');\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction hasSigner(obj) {\n    return obj.getSigner !== undefined;\n}\n// Multicall3 is deployed at the same create2 address on basically every chain\n// https://github.com/mds1/multicall\nconst multicall3Address = '0xcA11bde05977b3631167028862bE2a173976CA11';\nclass JsonRpcMulticallProvider extends providers_1.BaseProvider {\n    constructor(provider) {\n        super(provider.getNetwork());\n        this.parent = provider;\n    }\n    getSigner(addressOrIndex) {\n        if (!hasSigner(this.parent)) {\n            return logger.throwError('Parent provider does not support getSigner', logger_1.Logger.errors.NOT_IMPLEMENTED, {\n                parent: this.parent,\n            });\n        }\n        return this.parent.getSigner(addressOrIndex);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    perform(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (method === 'call') {\n                const reqParams = params;\n                const target = reqParams.transaction.to;\n                const callData = reqParams.transaction.data;\n                // If there is no call data or unknown multicall contract, just passthrough to parent\n                if (!target || !callData) {\n                    return this.parent.perform(method, params);\n                }\n                if (!this._pendingBatch) {\n                    this._pendingBatch = [];\n                }\n                const newCall = { request: { target, callData }, resolve: null, reject: null };\n                const promise = new Promise((resolve, reject) => {\n                    newCall.resolve = resolve;\n                    newCall.reject = reject;\n                });\n                this._pendingBatch.push(newCall);\n                if (!this._pendingBatchAggregator) {\n                    const provider = this.parent;\n                    this._pendingBatchAggregator = setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n                        const batch = this._pendingBatch;\n                        if (!batch) {\n                            return;\n                        }\n                        this._pendingBatch = null;\n                        this._pendingBatchAggregator = null;\n                        const multicall = new contracts_1.Contract(multicall3Address, Multicall_json_1.default.abi, provider);\n                        // returns [blockNumber, call results], so results are at index 1\n                        const multicallResult = yield multicall.aggregate(batch.map(i => i.request));\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        multicallResult[1].map((result, i) => batch[i].resolve(result));\n                        this._pendingBatch = null;\n                        this._pendingBatchAggregator = null;\n                    }), 10);\n                }\n                return promise;\n            }\n            else {\n                return this.parent.perform(method, params);\n            }\n        });\n    }\n    detectNetwork() {\n        return this.parent.detectNetwork();\n    }\n}\nexports.JsonRpcMulticallProvider = JsonRpcMulticallProvider;\n//# sourceMappingURL=JsonRpcMulticallProvider.js.map"]},"metadata":{},"sourceType":"script"}