{"ast":null,"code":"const EventEmitter = require('events');\nconst EthereumProvider = require('ethereum-provider');\nconst ConnectionManager = require('../ConnectionManager');\nconst monitor = provider => {\n  function update(status) {\n    provider.status = status;\n    if (provider instanceof EventEmitter) provider.emit('status', status);\n  }\n  async function check() {\n    if (provider.inSetup) return setTimeout(check, 1000);\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing');\n        setTimeout(() => check(), 5000);\n      } else {\n        update('connected');\n      }\n    } catch (e) {\n      update('disconnected');\n    }\n  }\n  update('loading');\n  check();\n  provider.on('connect', () => check());\n  provider.on('close', () => update('disconnected'));\n  return provider;\n};\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider;\n    return monitor(connections.injected);\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options));\n  provider.setMaxListeners(128);\n  return monitor(provider);\n};","map":{"version":3,"names":["EventEmitter","require","EthereumProvider","ConnectionManager","monitor","provider","update","status","emit","check","inSetup","setTimeout","send","e","on","module","exports","connections","targets","options","injected","__isProvider","map","t","type","indexOf","setMaxListeners"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/node_modules/eth-provider/provider/index.js"],"sourcesContent":["const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider')\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n  async function check () {\n    if (provider.inSetup) return setTimeout(check, 1000)\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n        setTimeout(() => check(), 5000)\n      } else {\n        update('connected')\n      }\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n  update('loading')\n  check()\n  provider.on('connect', () => check())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAQ,CAAC;AACtC,MAAMC,gBAAgB,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AACrD,MAAME,iBAAiB,GAAGF,OAAO,CAAC,sBAAsB,CAAC;AAEzD,MAAMG,OAAO,GAAGC,QAAQ,IAAI;EAC1B,SAASC,MAAMA,CAAEC,MAAM,EAAE;IACvBF,QAAQ,CAACE,MAAM,GAAGA,MAAM;IACxB,IAAIF,QAAQ,YAAYL,YAAY,EAAEK,QAAQ,CAACG,IAAI,CAAC,QAAQ,EAAED,MAAM,CAAC;EACvE;EACA,eAAeE,KAAKA,CAAA,EAAI;IACtB,IAAIJ,QAAQ,CAACK,OAAO,EAAE,OAAOC,UAAU,CAACF,KAAK,EAAE,IAAI,CAAC;IACpD,IAAI;MACF,IAAI,MAAMJ,QAAQ,CAACO,IAAI,CAAC,aAAa,CAAC,EAAE;QACtCN,MAAM,CAAC,SAAS,CAAC;QACjBK,UAAU,CAAC,MAAMF,KAAK,EAAE,EAAE,IAAI,CAAC;MACjC,CAAC,MAAM;QACLH,MAAM,CAAC,WAAW,CAAC;MACrB;IACF,CAAC,CAAC,OAAOO,CAAC,EAAE;MACVP,MAAM,CAAC,cAAc,CAAC;IACxB;EACF;EACAA,MAAM,CAAC,SAAS,CAAC;EACjBG,KAAK,EAAE;EACPJ,QAAQ,CAACS,EAAE,CAAC,SAAS,EAAE,MAAML,KAAK,EAAE,CAAC;EACrCJ,QAAQ,CAACS,EAAE,CAAC,OAAO,EAAE,MAAMR,MAAM,CAAC,cAAc,CAAC,CAAC;EAClD,OAAOD,QAAQ;AACjB,CAAC;AAEDU,MAAM,CAACC,OAAO,GAAG,CAACC,WAAW,EAAEC,OAAO,EAAEC,OAAO,KAAK;EAClD;EACA,IAAIF,WAAW,CAACG,QAAQ,CAACC,YAAY,IAAIH,OAAO,CAACI,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAAC,CAACC,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE;IAC1F,OAAOR,WAAW,CAACG,QAAQ,CAACC,YAAY;IACxC,OAAOjB,OAAO,CAACa,WAAW,CAACG,QAAQ,CAAC;EACtC;EACA,MAAMf,QAAQ,GAAG,IAAIH,gBAAgB,CAAC,IAAIC,iBAAiB,CAACc,WAAW,EAAEC,OAAO,EAAEC,OAAO,CAAC,CAAC;EAC3Fd,QAAQ,CAACqB,eAAe,CAAC,GAAG,CAAC;EAC7B,OAAOtB,OAAO,CAACC,QAAQ,CAAC;AAC1B,CAAC"},"metadata":{},"sourceType":"script"}