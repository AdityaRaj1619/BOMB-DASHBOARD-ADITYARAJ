{"ast":null,"code":"import{useCallback}from'react';import useBombFinance from'./useBombFinance';import useHandleTransactionReceipt from'./useHandleTransactionReceipt';var useStakeToBomb=function useStakeToBomb(){var bombFinance=useBombFinance();var handleTransactionReceipt=useHandleTransactionReceipt();var handleStake=useCallback(function(amount){handleTransactionReceipt(bombFinance.stakeToBomb(amount),\"Stake \".concat(amount,\" BOMB for xBOMB\"));},[bombFinance,handleTransactionReceipt]);return{onStake:handleStake};};export default useStakeToBomb;","map":{"version":3,"names":["useCallback","useBombFinance","useHandleTransactionReceipt","useStakeToBomb","bombFinance","handleTransactionReceipt","handleStake","amount","stakeToBomb","concat","onStake"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/hooks/useStakeToBomb.ts"],"sourcesContent":["import {useCallback} from 'react';\nimport useBombFinance from './useBombFinance';\nimport useHandleTransactionReceipt from './useHandleTransactionReceipt';\n\nconst useStakeToBomb = () => {\n  const bombFinance = useBombFinance();\n  const handleTransactionReceipt = useHandleTransactionReceipt();\n\n  const handleStake = useCallback(\n    (amount: string) => {\n      handleTransactionReceipt(bombFinance.stakeToBomb(amount), `Stake ${amount} BOMB for xBOMB`);\n    },\n    [bombFinance, handleTransactionReceipt],\n  );\n  return {onStake: handleStake};\n};\n\nexport default useStakeToBomb;\n"],"mappings":"AAAA,OAAQA,WAAW,KAAO,OAAO,CACjC,MAAO,CAAAC,cAAc,KAAM,kBAAkB,CAC7C,MAAO,CAAAC,2BAA2B,KAAM,+BAA+B,CAEvE,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAA,CAAS,CAC3B,GAAM,CAAAC,WAAW,CAAGH,cAAc,EAAE,CACpC,GAAM,CAAAI,wBAAwB,CAAGH,2BAA2B,EAAE,CAE9D,GAAM,CAAAI,WAAW,CAAGN,WAAW,CAC7B,SAACO,MAAc,CAAK,CAClBF,wBAAwB,CAACD,WAAW,CAACI,WAAW,CAACD,MAAM,CAAC,UAAAE,MAAA,CAAWF,MAAM,oBAAkB,CAC7F,CAAC,CACD,CAACH,WAAW,CAAEC,wBAAwB,CAAC,CACxC,CACD,MAAO,CAACK,OAAO,CAAEJ,WAAW,CAAC,CAC/B,CAAC,CAED,cAAe,CAAAH,cAAc"},"metadata":{},"sourceType":"module"}