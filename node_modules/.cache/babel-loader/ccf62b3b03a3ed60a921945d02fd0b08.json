{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\src\\\\contexts\\\\RefreshContext\\\\RefreshContextProvider.tsx\";\nimport React, { useState, useEffect } from 'react';\nconst FAST_INTERVAL = 10000;\nconst SLOW_INTERVAL = 60000;\nexport const RefreshContext = React.createContext({\n  slow: 0,\n  fast: 0\n});\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nexport const RefreshContextProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const [slow, setSlow] = useState(0);\n  const [fast, setFast] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast(prev => prev + 1);\n    }, FAST_INTERVAL);\n    return () => clearInterval(interval);\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow(prev => prev + 1);\n    }, SLOW_INTERVAL);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/React.createElement(RefreshContext.Provider, {\n    value: {\n      slow,\n      fast\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }, children);\n};","map":{"version":3,"names":["React","useState","useEffect","FAST_INTERVAL","SLOW_INTERVAL","RefreshContext","createContext","slow","fast","RefreshContextProvider","_ref","children","setSlow","setFast","interval","setInterval","prev","clearInterval","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/contexts/RefreshContext/RefreshContextProvider.tsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst FAST_INTERVAL = 10000;\nconst SLOW_INTERVAL = 60000;\n\nexport const RefreshContext = React.createContext({slow: 0, fast: 0});\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nexport const RefreshContextProvider: React.FC = ({children}) => {\n  const [slow, setSlow] = useState(0);\n  const [fast, setFast] = useState(0);\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1);\n    }, FAST_INTERVAL);\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1);\n    }, SLOW_INTERVAL);\n    return () => clearInterval(interval);\n  }, []);\n\n  return <RefreshContext.Provider value={{slow, fast}}>{children}</RefreshContext.Provider>;\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAEhD,MAAMC,aAAa,GAAG,KAAK;AAC3B,MAAMC,aAAa,GAAG,KAAK;AAE3B,OAAO,MAAMC,cAAc,GAAGL,KAAK,CAACM,aAAa,CAAC;EAACC,IAAI,EAAE,CAAC;EAAEC,IAAI,EAAE;AAAC,CAAC,CAAC;;AAErE;AACA,OAAO,MAAMC,sBAAgC,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAD,IAAA;EACzD,MAAM,CAACH,IAAI,EAAEK,OAAO,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACO,IAAI,EAAEK,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEnCC,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAGC,WAAW,CAAC,YAAY;MACvCF,OAAO,CAAEG,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;IAC7B,CAAC,EAAEb,aAAa,CAAC;IACjB,OAAO,MAAMc,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAENZ,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAGC,WAAW,CAAC,YAAY;MACvCH,OAAO,CAAEI,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;IAC7B,CAAC,EAAEZ,aAAa,CAAC;IACjB,OAAO,MAAMa,aAAa,CAACH,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOd,KAAA,CAAAkB,aAAA,CAACb,cAAc,CAACc,QAAQ;IAACC,KAAK,EAAE;MAACb,IAAI;MAAEC;IAAI,CAAE;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEf,QAAQ,CAA2B;AAC3F,CAAC"},"metadata":{},"sourceType":"module"}