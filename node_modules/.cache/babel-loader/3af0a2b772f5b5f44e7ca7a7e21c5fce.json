{"ast":null,"code":"//import { useCallback, useEffect, useState } from 'react';\nimport{bombMaxi}from'../fetchers';export var useBombMaxi=function useBombMaxi(poolId){// const [maxiStats, setMaxiStats] = useState(null);\nvar maxiData=bombMaxi(poolId);//   const fetchMaxi = useCallback(async () => {\n//     setMaxiStats(await maxiData);\n//   }, [maxiData]);\n//   useEffect(() => {\n//     fetchMaxi().catch((err) => console.error(`Failed to fetch maxiStats: ${err.stack}`));\n//     //    let refreshInterval = setInterval(fetchMaxi);\n//     //  return () => clearInterval(refreshInterval);\n//   }, [maxiData, fetchMaxi]);\n//const BombMaxi = useState(bombMaxi(poolId));\nreturn maxiData;};export default useBombMaxi;","map":{"version":3,"names":["bombMaxi","useBombMaxi","poolId","maxiData"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/services/graph/hooks/useBombMaxi.ts"],"sourcesContent":["//import { useCallback, useEffect, useState } from 'react';\nimport { bombMaxi } from '../fetchers';\n\nexport const useBombMaxi = (poolId: string) => {\n  // const [maxiStats, setMaxiStats] = useState(null);\n\n  const maxiData = bombMaxi(poolId);\n\n  //   const fetchMaxi = useCallback(async () => {\n  //     setMaxiStats(await maxiData);\n  //   }, [maxiData]);\n\n  //   useEffect(() => {\n  //     fetchMaxi().catch((err) => console.error(`Failed to fetch maxiStats: ${err.stack}`));\n  //     //    let refreshInterval = setInterval(fetchMaxi);\n  //     //  return () => clearInterval(refreshInterval);\n  //   }, [maxiData, fetchMaxi]);\n\n  //const BombMaxi = useState(bombMaxi(poolId));\n  return maxiData;\n};\n\nexport default useBombMaxi;\n"],"mappings":"AAAA;AACA,OAASA,QAAQ,KAAQ,aAAa,CAEtC,MAAO,IAAM,CAAAC,WAAW,CAAG,QAAd,CAAAA,WAAWA,CAAIC,MAAc,CAAK,CAC7C;AAEA,GAAM,CAAAC,QAAQ,CAAGH,QAAQ,CAACE,MAAM,CAAC,CAEjC;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAO,CAAAC,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,WAAW"},"metadata":{},"sourceType":"module"}