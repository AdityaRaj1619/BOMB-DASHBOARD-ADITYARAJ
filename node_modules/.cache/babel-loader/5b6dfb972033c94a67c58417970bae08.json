{"ast":null,"code":"import { useCallback } from 'react';\nimport { useTransactionAdder } from '../state/transactions/hooks';\nimport { useAddPopup } from '../state/application/hooks';\nfunction useHandleTransactionReceipt() {\n  const addTransaction = useTransactionAdder();\n  const addPopup = useAddPopup();\n  return useCallback((promise, summary) => {\n    promise.then(tx => addTransaction(tx, {\n      summary\n    })).catch(err => {\n      if (err.message.includes('User denied')) {\n        // User denied transaction signature on MetaMask.\n        return;\n      }\n      const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\n      console.error(`${message}: ${err.message || err.stack}`);\n      addPopup({\n        error: {\n          message,\n          stack: err.message || err.stack\n        }\n      });\n    });\n  }, [addPopup, addTransaction]);\n}\nexport default useHandleTransactionReceipt;","map":{"version":3,"names":["useCallback","useTransactionAdder","useAddPopup","useHandleTransactionReceipt","addTransaction","addPopup","promise","summary","then","tx","catch","err","message","includes","toLowerCase","slice","console","error","stack"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/hooks/useHandleTransactionReceipt.ts"],"sourcesContent":["import {useCallback} from 'react';\nimport {TransactionResponse} from '@ethersproject/providers';\nimport {useTransactionAdder} from '../state/transactions/hooks';\nimport {useAddPopup} from '../state/application/hooks';\n\nfunction useHandleTransactionReceipt(): (promise: Promise<TransactionResponse>, summary: string) => void {\n  const addTransaction = useTransactionAdder();\n  const addPopup = useAddPopup();\n\n  return useCallback(\n    (promise: Promise<TransactionResponse>, summary: string) => {\n      promise\n        .then((tx) => addTransaction(tx, {summary}))\n        .catch((err) => {\n          if (err.message.includes('User denied')) {\n            // User denied transaction signature on MetaMask.\n            return;\n          }\n          const message = `Unable to ${summary[0].toLowerCase()}${summary.slice(1)}`;\n          console.error(`${message}: ${err.message || err.stack}`);\n          addPopup({error: {message, stack: err.message || err.stack}});\n        });\n    },\n    [addPopup, addTransaction],\n  );\n}\n\nexport default useHandleTransactionReceipt;\n"],"mappings":"AAAA,SAAQA,WAAW,QAAO,OAAO;AAEjC,SAAQC,mBAAmB,QAAO,6BAA6B;AAC/D,SAAQC,WAAW,QAAO,4BAA4B;AAEtD,SAASC,2BAA2BA,CAAA,EAAqE;EACvG,MAAMC,cAAc,GAAGH,mBAAmB,EAAE;EAC5C,MAAMI,QAAQ,GAAGH,WAAW,EAAE;EAE9B,OAAOF,WAAW,CAChB,CAACM,OAAqC,EAAEC,OAAe,KAAK;IAC1DD,OAAO,CACJE,IAAI,CAAEC,EAAE,IAAKL,cAAc,CAACK,EAAE,EAAE;MAACF;IAAO,CAAC,CAAC,CAAC,CAC3CG,KAAK,CAAEC,GAAG,IAAK;MACd,IAAIA,GAAG,CAACC,OAAO,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAE;QACvC;QACA;MACF;MACA,MAAMD,OAAO,GAAI,aAAYL,OAAO,CAAC,CAAC,CAAC,CAACO,WAAW,EAAG,GAAEP,OAAO,CAACQ,KAAK,CAAC,CAAC,CAAE,EAAC;MAC1EC,OAAO,CAACC,KAAK,CAAE,GAAEL,OAAQ,KAAID,GAAG,CAACC,OAAO,IAAID,GAAG,CAACO,KAAM,EAAC,CAAC;MACxDb,QAAQ,CAAC;QAACY,KAAK,EAAE;UAACL,OAAO;UAAEM,KAAK,EAAEP,GAAG,CAACC,OAAO,IAAID,GAAG,CAACO;QAAK;MAAC,CAAC,CAAC;IAC/D,CAAC,CAAC;EACN,CAAC,EACD,CAACb,QAAQ,EAAED,cAAc,CAAC,CAC3B;AACH;AAEA,eAAeD,2BAA2B"},"metadata":{},"sourceType":"module"}