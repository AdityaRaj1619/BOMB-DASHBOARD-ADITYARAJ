{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\src\\\\views\\\\Stake\\\\Stake.js\";\nimport React, { useMemo } from 'react';\nimport { useWallet } from 'use-wallet';\nimport styled from 'styled-components';\nimport Stake from './components/Stake';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport { roundAndFormatNumber } from '../../0x';\nimport { Alert } from '@material-ui/lab';\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Page from '../../components/Page';\nimport useXbombBalance from '../../hooks/useXbombBalance';\nimport useXbombAPR from '../../hooks/useXbombAPR';\nimport useStakedTotalBombBalance from '../../hooks/useTotalStakedBombBalance';\nimport { createGlobalStyle } from 'styled-components';\nimport { Helmet } from 'react-helmet';\nimport HomeImage from '../../assets/img/background.jpg';\nimport useFetchBombAPR from '../../hooks/useFetchBombAPR';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${HomeImage}) repeat !important;\n    background-size: cover !important;\n    background-color: #171923;\n  }\n`;\nconst TITLE = 'bomb.money | xBOMB - BOMB Staking';\nconst useStyles = makeStyles(theme => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px'\n    }\n  }\n}));\nconst Staking = () => {\n  const classes = useStyles();\n  const {\n    account\n  } = useWallet();\n  // const { onRedeem } = useRedeemOnBoardroom();\n  //  const stakedBombBalance = useStakedBombBalance();\n  const xbombBalance = useXbombBalance();\n  const xbombRate = Number(xbombBalance / 1000000000000000000).toFixed(4);\n  const xbombAPR = useXbombAPR();\n  // console.log(\"xbombAPR\", xbombAPR)\n  //const xbombTVL = xbombAPR.TVL;\n  const xbombPrintApr = useFetchBombAPR();\n  // console.log(\"xbombPrintApr\", xbombPrintApr)\n\n  const xbombPrintAprNice = useMemo(() => xbombPrintApr ? Number(xbombPrintApr).toFixed(2) : null, [xbombPrintApr]);\n  const stakedTotalBombBalance = useStakedTotalBombBalance();\n  const bombTotalStaked = Number(stakedTotalBombBalance / 1000000000000000000).toFixed(0);\n  const xbombTVL = useMemo(() => xbombAPR ? Number(xbombAPR.TVL).toFixed(0) : null, [xbombAPR]);\n  // const xbombDailyAPR = useMemo(() => (xbombAPR ? Number(xbombAPR.dailyAPR).toFixed(2) : null), [xbombAPR]);\n  //const xbombYearlyAPR = useMemo(() => (xbombAPR ? Number(xbombAPR.yearlyAPR).toFixed(2) : null), [xbombAPR]);\n\n  // console.log('xbombAPR', xbombYearlyAPR);\n\n  // const cashStat = useCashPriceInEstimatedTWAP();\n\n  return /*#__PURE__*/React.createElement(Page, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(BackgroundImage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, TITLE)), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textPrimary\",\n    align: \"center\",\n    variant: \"h3\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"BOMB Staking for xBOMB\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    style: {\n      width: '600px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    variant: \"filled\",\n    severity: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, \" Most rewards are generated from boardroom printing!\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), \"20% of all BOMB minted - from protocol allocation, does not impact BSHARE boardroom printing.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }), \"If TWAP of BOMB peg is not over 1.01, yield will be reduced.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), \"The APR (Minted BOMB) shown is based on our latest print, and is only applied when the Boardroom is printing (over 1.01 peg at epoch start)\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Box, {\n    mt: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textTransform: 'uppercase',\n      color: '#f9d749'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"1 xBOMB =\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 21\n    }\n  }, Number(xbombRate), \" BOMB\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textTransform: 'uppercase',\n      color: '#f9d749'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, \"APR (Minted BOMB)\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, xbombPrintAprNice, \"%\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textTransform: 'uppercase',\n      color: '#f9d749'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, \"BOMB Staked\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }, roundAndFormatNumber(bombTotalStaked))))), !!account && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 2,\n    lg: 2,\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.gridItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      textTransform: 'uppercase',\n      color: '#f9d749'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"xBOMB TVL\"), /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"$\", roundAndFormatNumber(xbombTVL, 2)))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledBoardroom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 19\n    }\n  }, !!account ? /*#__PURE__*/React.createElement(Stake, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(UnlockWallet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledBoardroom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 27\n    }\n  }, \"About xBOMB & Rewards\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 27\n    }\n  }, \"xBOMB will be the governance token required to cast votes on protocol decisions.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 27\n    }\n  }, \"20% of all BOMB minted will be deposited into the xBOMB smart contract, increasing the amount of BOMB that can be redeemed for each xBOMB. Rewards will be deposited at random times to prevent abuse.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 27\n    }\n  }, \"Functionality will be developed around xBOMB including using it as collateral to borrow other assets.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 27\n    }\n  }, \"Reward structure subject to change based on community voting.\"))))))))));\n};\nconst StyledBoardroom = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\nexport default Staking;","map":{"version":3,"names":["React","useMemo","useWallet","styled","Stake","makeStyles","Box","Card","CardContent","Typography","Grid","roundAndFormatNumber","Alert","UnlockWallet","Page","useXbombBalance","useXbombAPR","useStakedTotalBombBalance","createGlobalStyle","Helmet","HomeImage","useFetchBombAPR","BackgroundImage","TITLE","useStyles","theme","gridItem","height","breakpoints","up","Staking","classes","account","xbombBalance","xbombRate","Number","toFixed","xbombAPR","xbombPrintApr","xbombPrintAprNice","stakedTotalBombBalance","bombTotalStaked","xbombTVL","TVL","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","color","align","variant","gutterBottom","container","justify","mt","style","width","severity","spacing","item","xs","md","lg","className","textTransform","StyledBoardroom","StyledCardsWrapper","StyledCardWrapper","div"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/views/Stake/Stake.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { useWallet } from 'use-wallet';\nimport styled from 'styled-components';\nimport Stake from './components/Stake';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Box, Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport { roundAndFormatNumber } from '../../0x';\n\nimport { Alert } from '@material-ui/lab';\n\nimport UnlockWallet from '../../components/UnlockWallet';\nimport Page from '../../components/Page';\n\nimport useXbombBalance from '../../hooks/useXbombBalance';\nimport useXbombAPR from '../../hooks/useXbombAPR';\nimport useStakedTotalBombBalance from '../../hooks/useTotalStakedBombBalance';\nimport { createGlobalStyle } from 'styled-components';\nimport { Helmet } from 'react-helmet';\n\nimport HomeImage from '../../assets/img/background.jpg';\nimport useFetchBombAPR from '../../hooks/useFetchBombAPR';\nconst BackgroundImage = createGlobalStyle`\n  body {\n    background: url(${HomeImage}) repeat !important;\n    background-size: cover !important;\n    background-color: #171923;\n  }\n`;\nconst TITLE = 'bomb.money | xBOMB - BOMB Staking';\n\nconst useStyles = makeStyles((theme) => ({\n  gridItem: {\n    height: '100%',\n    [theme.breakpoints.up('md')]: {\n      height: '90px',\n    },\n  },\n}));\n\nconst Staking = () => {\n  const classes = useStyles();\n  const { account } = useWallet();\n  // const { onRedeem } = useRedeemOnBoardroom();\n  //  const stakedBombBalance = useStakedBombBalance();\n  const xbombBalance = useXbombBalance();\n  const xbombRate = Number(xbombBalance / 1000000000000000000).toFixed(4);\n  const xbombAPR = useXbombAPR();\n  // console.log(\"xbombAPR\", xbombAPR)\n  //const xbombTVL = xbombAPR.TVL;\n  const xbombPrintApr = useFetchBombAPR();\n  // console.log(\"xbombPrintApr\", xbombPrintApr)\n\n  const xbombPrintAprNice = useMemo(() => (xbombPrintApr ? Number(xbombPrintApr).toFixed(2) : null), [xbombPrintApr]);\n\n  const stakedTotalBombBalance = useStakedTotalBombBalance();\n  const bombTotalStaked = Number(stakedTotalBombBalance / 1000000000000000000).toFixed(0);\n  const xbombTVL = useMemo(() => (xbombAPR ? Number(xbombAPR.TVL).toFixed(0) : null), [xbombAPR]);\n  // const xbombDailyAPR = useMemo(() => (xbombAPR ? Number(xbombAPR.dailyAPR).toFixed(2) : null), [xbombAPR]);\n  //const xbombYearlyAPR = useMemo(() => (xbombAPR ? Number(xbombAPR.yearlyAPR).toFixed(2) : null), [xbombAPR]);\n\n  // console.log('xbombAPR', xbombYearlyAPR);\n\n  // const cashStat = useCashPriceInEstimatedTWAP();\n\n  return (\n    <Page>\n      <BackgroundImage />\n      <Helmet>\n        <title>{TITLE}</title>\n      </Helmet>\n          <Typography color=\"textPrimary\" align=\"center\" variant=\"h3\" gutterBottom>\n            BOMB Staking for xBOMB\n          </Typography>\n          <Grid container justify=\"center\">\n            <Box mt={3} style={{ width: '600px' }}>\n              <Alert variant=\"filled\" severity=\"info\">\n                <b> Most rewards are generated from boardroom printing!</b>\n                <br />\n                20% of all BOMB minted - from protocol allocation, does not impact BSHARE boardroom printing.\n                <br />\n                If TWAP of BOMB peg is not over 1.01, yield will be reduced.\n                <br />\n                <br />\n                The APR (Minted BOMB) shown is based on our latest print, and is only applied when the Boardroom is\n                printing (over 1.01 peg at epoch start)\n                <br />\n                {/* <br />We are currently in debt phase, APR will be approximately 3x higher once debt is repaid. */}\n              </Alert>\n            </Box>\n          </Grid>\n\n          <Box mt={5}>\n            <Grid container justify=\"center\" spacing={3}>\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>1 xBOMB =</Typography>\n                    <Typography>{Number(xbombRate)} BOMB</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              {/* <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>\n                      BOMB PEG <small>(TWAP)</small>\n                    </Typography>\n                    <Typography>{scalingFactor} BTC</Typography>\n                    <Typography>\n                      <small>per 10,000 BOMB</small>\n                    </Typography>\n                  </CardContent>\n                </Card>\n              </Grid> */}\n              {/* <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>Historic APR</Typography>\n                    <Typography>{xbombYearlyAPR}%</Typography>\n                  </CardContent>\n                </Card>\n              </Grid> */}\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>APR (Minted BOMB)</Typography>\n                    <Typography>{xbombPrintAprNice}%</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              <Grid item xs={12} md={2} lg={2}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>BOMB Staked</Typography>\n                    <Typography>{roundAndFormatNumber(bombTotalStaked)}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              {!!account && (\n              <Grid item xs={12} md={2} lg={2} className={classes.gridItem}>\n                <Card className={classes.gridItem}>\n                  <CardContent align=\"center\">\n                    <Typography style={{ textTransform: 'uppercase', color: '#f9d749' }}>xBOMB TVL</Typography>\n                    <Typography>${roundAndFormatNumber(xbombTVL, 2)}</Typography>\n                  </CardContent>\n                </Card>\n              </Grid>\n              )}\n            </Grid>\n\n            <Box mt={4}>\n              <StyledBoardroom>\n                <StyledCardsWrapper>\n                  {/* <StyledCardWrapper>\n                    <Harvest />\n                  </StyledCardWrapper> */}\n                  {/* <Spacer /> */}\n\n                  <StyledCardWrapper>\n                    {!!account ? (\n                      <Stake />\n                    ) : (\n                        <UnlockWallet />\n                    )}\n                  </StyledCardWrapper>\n                </StyledCardsWrapper>\n              </StyledBoardroom>\n            </Box>\n            <Box mt={4}>\n              <StyledBoardroom>\n                <StyledCardsWrapper>\n                  {/* <StyledCardWrapper>\n                    <Harvest />\n                  </StyledCardWrapper> */}\n                  {/* <Spacer /> */}\n                  <StyledCardWrapper>\n                    <Box>\n                      <Card>\n                        <CardContent>\n                          <h2>About xBOMB & Rewards</h2>\n                          {/* <p><strong>We are currently depositing 10,000 BOMB per week into the staking pool until our BTC Single Staking service is launched.</strong></p> */}\n                          <p>xBOMB will be the governance token required to cast votes on protocol decisions.</p>\n                          <p>\n                            20% of all BOMB minted will be deposited into the xBOMB smart contract, increasing the\n                            amount of BOMB that can be redeemed for each xBOMB. Rewards will be deposited at random\n                            times to prevent abuse.\n                          </p>\n                          <p>\n                            Functionality will be developed around xBOMB including using it as collateral to borrow\n                            other assets.\n                          </p>\n                          <p>Reward structure subject to change based on community voting.</p>\n                        </CardContent>\n                      </Card>\n                    </Box>\n                  </StyledCardWrapper>\n                </StyledCardsWrapper>\n              </StyledBoardroom>\n            </Box>\n            {/* <Grid container justify=\"center\" spacing={3}>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent align=\"center\">\n                  <Typography>Rewards</Typography>\n\n                </CardContent>\n                <CardActions style={{justifyContent: 'center'}}>\n                  <Button color=\"primary\" variant=\"outlined\">Claim Reward</Button>\n                </CardActions>\n                <CardContent align=\"center\">\n                  <Typography>Claim Countdown</Typography>\n                  <Typography>00:00:00</Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n            <Grid item xs={4}>\n              <Card>\n                <CardContent align=\"center\">\n                  <Typography>Stakings</Typography>\n                  <Typography>{getDisplayBalance(stakedBalance)}</Typography>\n                </CardContent>\n                <CardActions style={{justifyContent: 'center'}}>\n                  <Button>+</Button>\n                  <Button>-</Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          </Grid> */}\n          </Box>\n          {/* \n          <Box mt={5}>\n            <Grid container justify=\"center\" spacing={3} mt={10}>\n              <Button\n                disabled={stakedBombBalance.eq(0) || (!canWithdraw && !canClaimReward)}\n                onClick={onRedeem}\n                className={\n                  stakedBombBalance.eq(0) || (!canWithdraw && !canClaimReward)\n                    ? 'shinyButtonDisabledSecondary'\n                    : 'shinyButtonSecondary'\n                }\n              >\n                Claim &amp; Withdraw\n              </Button>\n            </Grid>\n          </Box> */}\n    </Page>\n  );\n};\n\nconst StyledBoardroom = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\n\nconst StyledCardsWrapper = styled.div`\n  display: flex;\n  width: 600px;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  @media (max-width: 768px) {\n    width: 80%;\n  }\n`;\n\nexport default Staking;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}