{"ast":null,"code":"import { AbstractConnector } from '@web3-react/abstract-connector';\nimport ethProvider from 'eth-provider';\nimport invariant from 'tiny-invariant';\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nvar UserRejectedRequestError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(UserRejectedRequestError, _Error);\n  function UserRejectedRequestError() {\n    var _this;\n    _this = _Error.call(this) || this;\n    _this.name = _this.constructor.name;\n    _this.message = 'The user rejected the request.';\n    return _this;\n  }\n  return UserRejectedRequestError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nvar FrameConnector = /*#__PURE__*/function (_AbstractConnector) {\n  _inheritsLoose(FrameConnector, _AbstractConnector);\n  function FrameConnector(kwargs) {\n    var _this2;\n    !(kwargs.supportedChainIds.length === 1) ? process.env.NODE_ENV !== \"production\" ? invariant(false, 'This connector only supports 1 chainId at the moment.') : invariant(false) : void 0;\n    _this2 = _AbstractConnector.call(this, kwargs) || this;\n    _this2.handleNetworkChanged = _this2.handleNetworkChanged.bind(_assertThisInitialized(_this2));\n    _this2.handleChainChanged = _this2.handleChainChanged.bind(_assertThisInitialized(_this2));\n    _this2.handleAccountsChanged = _this2.handleAccountsChanged.bind(_assertThisInitialized(_this2));\n    _this2.handleClose = _this2.handleClose.bind(_assertThisInitialized(_this2));\n    return _this2;\n  }\n  var _proto = FrameConnector.prototype;\n  _proto.handleNetworkChanged = function handleNetworkChanged(networkId) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId);\n    }\n    this.emitUpdate({\n      provider: this.provider,\n      chainId: networkId\n    });\n  };\n  _proto.handleChainChanged = function handleChainChanged(chainId) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    }\n    this.emitUpdate({\n      chainId: chainId\n    });\n  };\n  _proto.handleAccountsChanged = function handleAccountsChanged(accounts) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n    }\n    this.emitUpdate({\n      account: accounts.length === 0 ? null : accounts[0]\n    });\n  };\n  _proto.handleClose = function handleClose(code, reason) {\n    if (process.env.NODE_ENV !== \"production\") {\n      console.log(\"Handling 'close' event with payload\", code, reason);\n    }\n    this.emitDeactivate();\n  };\n  _proto.activate = function activate() {\n    try {\n      var _this4 = this;\n      if (!_this4.provider) {\n        _this4.provider = ethProvider('frame');\n      }\n      _this4.provider.on('networkChanged', _this4.handleNetworkChanged).on('chainChanged', _this4.handleChainChanged).on('accountsChanged', _this4.handleAccountsChanged).on('close', _this4.handleClose);\n      return Promise.resolve(_this4.provider.enable().then(function (accounts) {\n        return accounts[0];\n      })[\"catch\"](function (error) {\n        if (error && error.code === 4001) {\n          throw new UserRejectedRequestError();\n        } else {\n          throw error;\n        }\n      })).then(function (account) {\n        return {\n          provider: _this4.provider,\n          account: account\n        };\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getProvider = function getProvider() {\n    try {\n      var _this6 = this;\n      return Promise.resolve(_this6.provider);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getChainId = function getChainId() {\n    try {\n      var _this8 = this;\n      return Promise.resolve(_this8.provider.send('eth_chainId'));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getAccount = function getAccount() {\n    try {\n      var _this10 = this;\n      return Promise.resolve(_this10.provider.send('eth_accounts').then(function (accounts) {\n        return accounts[0];\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.deactivate = function deactivate() {\n    this.provider.removeListener('networkChanged', this.handleNetworkChanged).removeListener('chainChanged', this.handleChainChanged).removeListener('accountsChanged', this.handleAccountsChanged).removeListener('close', this.handleClose);\n  };\n  return FrameConnector;\n}(AbstractConnector);\nexport { FrameConnector, UserRejectedRequestError };","map":{"version":3,"sources":["../src/index.ts"],"names":["UserRejectedRequestError","Error","name","constructor","message","FrameConnector","AbstractConnector","kwargs","supportedChainIds","length","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","networkId","console","log","emitUpdate","provider","chainId","accounts","account","code","reason","emitDeactivate","activate","ethProvider","on","enable","then","error","getProvider","getChainId","send","getAccount","deactivate","removeListener"],"mappings":"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","sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport ethProvider from 'eth-provider'\nimport invariant from 'tiny-invariant'\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class FrameConnector extends AbstractConnector {\n  private provider: any\n\n  constructor(kwargs: Required<AbstractConnectorArguments>) {\n    invariant(kwargs.supportedChainIds.length === 1, 'This connector only supports 1 chainId at the moment.')\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleNetworkChanged(networkId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    }\n    this.emitUpdate({ provider: this.provider, chainId: networkId })\n  }\n\n  private handleChainChanged(chainId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts.length === 0 ? null : accounts[0] })\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason)\n    }\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      this.provider = ethProvider('frame')\n    }\n\n    this.provider\n      .on('networkChanged', this.handleNetworkChanged)\n      .on('chainChanged', this.handleChainChanged)\n      .on('accountsChanged', this.handleAccountsChanged)\n      .on('close', this.handleClose)\n\n    const account = await this.provider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        if (error && (error as any).code === 4001) {\n          throw new UserRejectedRequestError()\n        } else {\n          throw error\n        }\n      })\n\n    return { provider: this.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.provider\n      .removeListener('networkChanged', this.handleNetworkChanged)\n      .removeListener('chainChanged', this.handleChainChanged)\n      .removeListener('accountsChanged', this.handleAccountsChanged)\n      .removeListener('close', this.handleClose)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}