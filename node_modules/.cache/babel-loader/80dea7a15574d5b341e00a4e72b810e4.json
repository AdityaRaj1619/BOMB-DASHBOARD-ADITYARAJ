{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\src\\\\contexts\\\\BombFinanceProvider\\\\BombFinanceProvider.tsx\";\nimport React, { createContext, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport BombFinance from '../../bomb-finance';\nimport config from '../../config';\nexport const Context = createContext({\n  bombFinance: null\n});\nexport const BombFinanceProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const {\n    ethereum,\n    account\n  } = useWallet();\n  const [bombFinance, setBombFinance] = useState();\n  useEffect(() => {\n    if (!bombFinance) {\n      const bomb = new BombFinance(config);\n      if (account) {\n        // wallet was unlocked at initialization\n        bomb.unlockWallet(ethereum, account);\n      }\n      setBombFinance(bomb);\n    } else if (account) {\n      bombFinance.unlockWallet(ethereum, account);\n    }\n  }, [account, ethereum, bombFinance]);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      bombFinance\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 10\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useEffect","useState","useWallet","BombFinance","config","Context","bombFinance","BombFinanceProvider","_ref","children","ethereum","account","setBombFinance","bomb","unlockWallet","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/contexts/BombFinanceProvider/BombFinanceProvider.tsx"],"sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\nimport {useWallet} from 'use-wallet';\nimport BombFinance from '../../bomb-finance';\nimport config from '../../config';\n\nexport interface BombFinanceContext {\n  bombFinance?: BombFinance;\n}\n\nexport const Context = createContext<BombFinanceContext>({bombFinance: null});\n\nexport const BombFinanceProvider: React.FC = ({children}) => {\n  const {ethereum, account} = useWallet();\n  const [bombFinance, setBombFinance] = useState<BombFinance>();\n\n  useEffect(() => {\n    if (!bombFinance) {\n      const bomb = new BombFinance(config);\n      if (account) {\n        // wallet was unlocked at initialization\n        bomb.unlockWallet(ethereum, account);\n      }\n      setBombFinance(bomb);\n    } else if (account) {\n      bombFinance.unlockWallet(ethereum, account);\n    }\n  }, [account, ethereum, bombFinance]);\n\n  return <Context.Provider value={{bombFinance}}>{children}</Context.Provider>;\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC/D,SAAQC,SAAS,QAAO,YAAY;AACpC,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,OAAOC,MAAM,MAAM,cAAc;AAMjC,OAAO,MAAMC,OAAO,GAAGN,aAAa,CAAqB;EAACO,WAAW,EAAE;AAAI,CAAC,CAAC;AAE7E,OAAO,MAAMC,mBAA6B,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAD,IAAA;EACtD,MAAM;IAACE,QAAQ;IAAEC;EAAO,CAAC,GAAGT,SAAS,EAAE;EACvC,MAAM,CAACI,WAAW,EAAEM,cAAc,CAAC,GAAGX,QAAQ,EAAe;EAE7DD,SAAS,CAAC,MAAM;IACd,IAAI,CAACM,WAAW,EAAE;MAChB,MAAMO,IAAI,GAAG,IAAIV,WAAW,CAACC,MAAM,CAAC;MACpC,IAAIO,OAAO,EAAE;QACX;QACAE,IAAI,CAACC,YAAY,CAACJ,QAAQ,EAAEC,OAAO,CAAC;MACtC;MACAC,cAAc,CAACC,IAAI,CAAC;IACtB,CAAC,MAAM,IAAIF,OAAO,EAAE;MAClBL,WAAW,CAACQ,YAAY,CAACJ,QAAQ,EAAEC,OAAO,CAAC;IAC7C;EACF,CAAC,EAAE,CAACA,OAAO,EAAED,QAAQ,EAAEJ,WAAW,CAAC,CAAC;EAEpC,oBAAOR,KAAA,CAAAiB,aAAA,CAACV,OAAO,CAACW,QAAQ;IAACC,KAAK,EAAE;MAACX;IAAW,CAAE;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEd,QAAQ,CAAoB;AAC9E,CAAC"},"metadata":{},"sourceType":"module"}