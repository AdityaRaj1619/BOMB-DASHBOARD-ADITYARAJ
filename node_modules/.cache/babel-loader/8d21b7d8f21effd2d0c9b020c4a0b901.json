{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nconst useChainId = () => {\n  const [chainId, setChainId] = useState(97);\n  const fetchChainId = useCallback(async () => {\n    if (window.ethereum) {\n      const ethereum = window.ethereum;\n      let chainId = await ethereum.request({\n        method: 'eth_chainId'\n      });\n      chainId = parseInt(chainId, 16);\n      setChainId(chainId);\n      window.ethereum.on('networkChanged', function (chainId) {\n        chainId = parseInt(chainId, 16);\n        setChainId(chainId);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    fetchChainId().catch(err => console.error(err.stack));\n    const refreshChainId = setInterval(fetchChainId, 1000);\n    return () => clearInterval(refreshChainId);\n  }, [fetchChainId]);\n  return chainId;\n};\nexport default useChainId;","map":{"version":3,"names":["useCallback","useEffect","useState","useChainId","chainId","setChainId","fetchChainId","window","ethereum","request","method","parseInt","on","catch","err","console","error","stack","refreshChainId","setInterval","clearInterval"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/hooks/useChainId.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nconst useChainId = () => {\n    const [chainId, setChainId] = useState(97);\n\n    const fetchChainId = useCallback(async () => {\n        if (window.ethereum) {\n            const ethereum = window.ethereum;\n            let chainId = await ethereum.request({\n                method: 'eth_chainId',\n            });\n            chainId = parseInt(chainId, 16);\n            setChainId(chainId);\n\n            window.ethereum.on('networkChanged', function (chainId) {\n                chainId = parseInt(chainId, 16);\n                setChainId(chainId);\n            });\n        }\n    }, []);\n\n    useEffect(() => {\n        fetchChainId().catch((err) => console.error(err.stack));\n\n        const refreshChainId = setInterval(fetchChainId, 1000);\n        return () => clearInterval(refreshChainId);\n    }, [fetchChainId]);\n\n    return chainId;\n};\n\nexport default useChainId;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAExD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMI,YAAY,GAAGN,WAAW,CAAC,YAAY;IACzC,IAAIO,MAAM,CAACC,QAAQ,EAAE;MACjB,MAAMA,QAAQ,GAAGD,MAAM,CAACC,QAAQ;MAChC,IAAIJ,OAAO,GAAG,MAAMI,QAAQ,CAACC,OAAO,CAAC;QACjCC,MAAM,EAAE;MACZ,CAAC,CAAC;MACFN,OAAO,GAAGO,QAAQ,CAACP,OAAO,EAAE,EAAE,CAAC;MAC/BC,UAAU,CAACD,OAAO,CAAC;MAEnBG,MAAM,CAACC,QAAQ,CAACI,EAAE,CAAC,gBAAgB,EAAE,UAAUR,OAAO,EAAE;QACpDA,OAAO,GAAGO,QAAQ,CAACP,OAAO,EAAE,EAAE,CAAC;QAC/BC,UAAU,CAACD,OAAO,CAAC;MACvB,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,EAAE,CAAC;EAENH,SAAS,CAAC,MAAM;IACZK,YAAY,EAAE,CAACO,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,KAAK,CAACF,GAAG,CAACG,KAAK,CAAC,CAAC;IAEvD,MAAMC,cAAc,GAAGC,WAAW,CAACb,YAAY,EAAE,IAAI,CAAC;IACtD,OAAO,MAAMc,aAAa,CAACF,cAAc,CAAC;EAC9C,CAAC,EAAE,CAACZ,YAAY,CAAC,CAAC;EAElB,OAAOF,OAAO;AAClB,CAAC;AAED,eAAeD,UAAU"},"metadata":{},"sourceType":"module"}