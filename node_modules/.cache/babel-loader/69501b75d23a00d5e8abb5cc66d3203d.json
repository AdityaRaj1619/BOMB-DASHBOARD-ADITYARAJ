{"ast":null,"code":"\"use strict\";\n\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar _toConsumableArray = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/toConsumableArray\");\nvar _asyncToGenerator = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\nvar _classCallCheck = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _assertThisInitialized = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/assertThisInitialized\");\nvar _inherits = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar _createSuper = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CoinbaseWalletProvider = void 0;\nvar safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\nvar errors_1 = require(\"../errors\");\nvar Session_1 = require(\"../relay/Session\");\nvar WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\nvar Web3Method_1 = require(\"../relay/Web3Method\");\nvar Web3Response_1 = require(\"../relay/Web3Response\");\nvar util_1 = require(\"../util\");\nvar eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nvar FilterPolyfill_1 = require(\"./FilterPolyfill\");\nvar JSONRPC_1 = require(\"./JSONRPC\");\nvar SubscriptionManager_1 = require(\"./SubscriptionManager\");\nvar DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nvar DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\nvar CoinbaseWalletProvider = /*#__PURE__*/function (_safe_event_emitter_) {\n  _inherits(CoinbaseWalletProvider, _safe_event_emitter_);\n  var _super = _createSuper(CoinbaseWalletProvider);\n  function CoinbaseWalletProvider(options) {\n    var _this;\n    _classCallCheck(this, CoinbaseWalletProvider);\n    var _a, _b;\n    _this = _super.call(this);\n    _this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(_assertThisInitialized(_this));\n    _this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(_assertThisInitialized(_this));\n    _this._relay = null;\n    _this._addresses = [];\n    _this.hasMadeFirstChainChangedEmission = false;\n    _this.setProviderInfo = _this.setProviderInfo.bind(_assertThisInitialized(_this));\n    _this.updateProviderInfo = _this.updateProviderInfo.bind(_assertThisInitialized(_this));\n    _this.getChainId = _this.getChainId.bind(_assertThisInitialized(_this));\n    _this.setAppInfo = _this.setAppInfo.bind(_assertThisInitialized(_this));\n    _this.enable = _this.enable.bind(_assertThisInitialized(_this));\n    _this.close = _this.close.bind(_assertThisInitialized(_this));\n    _this.send = _this.send.bind(_assertThisInitialized(_this));\n    _this.sendAsync = _this.sendAsync.bind(_assertThisInitialized(_this));\n    _this.request = _this.request.bind(_assertThisInitialized(_this));\n    _this._setAddresses = _this._setAddresses.bind(_assertThisInitialized(_this));\n    _this.scanQRCode = _this.scanQRCode.bind(_assertThisInitialized(_this));\n    _this.genericRequest = _this.genericRequest.bind(_assertThisInitialized(_this));\n    _this._chainIdFromOpts = options.chainId;\n    _this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n    _this._overrideIsMetaMask = options.overrideIsMetaMask;\n    _this._relayProvider = options.relayProvider;\n    _this._storage = options.storage;\n    _this._relayEventManager = options.relayEventManager;\n    _this.diagnostic = options.diagnosticLogger;\n    _this.reloadOnDisconnect = true;\n    _this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n    _this.isCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n    _this.qrUrl = options.qrUrl;\n    _this.supportsAddressSwitching = options.supportsAddressSwitching;\n    _this.isLedger = options.isLedger;\n    var chainId = _this.getChainId();\n    var chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n    // indicate that we've connected, for EIP-1193 compliance\n    _this.emit(\"connect\", {\n      chainIdStr: chainIdStr\n    });\n    var cachedAddresses = _this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n    if (cachedAddresses) {\n      var addresses = cachedAddresses.split(\" \");\n      if (addresses[0] !== \"\") {\n        _this._addresses = addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n        _this.emit(\"accountsChanged\", addresses);\n      }\n    }\n    _this._subscriptionManager.events.on(\"notification\", function (notification) {\n      _this.emit(\"message\", {\n        type: notification.method,\n        data: notification.params\n      });\n    });\n    if (_this._addresses.length > 0) {\n      void _this.initializeRelay();\n    }\n    window.addEventListener(\"message\", function (event) {\n      var _a;\n      // Used to verify the source and window are correct before proceeding\n      if (event.origin !== location.origin || event.source !== window) {\n        return;\n      }\n      if (event.data.type !== \"walletLinkMessage\") return; // compatibility with CBW extension\n      if (event.data.data.action === \"defaultChainChanged\" || event.data.data.action === \"dappChainSwitched\") {\n        var _chainId = event.data.data.chainId;\n        var jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : _this.jsonRpcUrl;\n        _this.updateProviderInfo(jsonRpcUrl, Number(_chainId));\n      }\n      if (event.data.data.action === \"addressChanged\") {\n        _this._setAddresses([event.data.data.address]);\n      }\n    });\n    return _this;\n  }\n  /** @deprecated Use `.request({ method: 'eth_accounts' })` instead. */\n  _createClass(CoinbaseWalletProvider, [{\n    key: \"selectedAddress\",\n    get: function get() {\n      return this._addresses[0] || undefined;\n    }\n    /** @deprecated Use the chain ID. If you still need the network ID, use `.request({ method: 'net_version' })`. */\n  }, {\n    key: \"networkVersion\",\n    get: function get() {\n      return this.getChainId().toString(10);\n    }\n    /** @deprecated Use `.request({ method: 'eth_chainId' })` instead. */\n  }, {\n    key: \"chainId\",\n    get: function get() {\n      return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n  }, {\n    key: \"isWalletLink\",\n    get: function get() {\n      // backward compatibility\n      return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n  }, {\n    key: \"isMetaMask\",\n    get: function get() {\n      return this._overrideIsMetaMask;\n    }\n  }, {\n    key: \"host\",\n    get: function get() {\n      return this.jsonRpcUrl;\n    }\n  }, {\n    key: \"connected\",\n    get: function get() {\n      return true;\n    }\n  }, {\n    key: \"isConnected\",\n    value: function isConnected() {\n      return true;\n    }\n  }, {\n    key: \"jsonRpcUrl\",\n    get: function get() {\n      var _a;\n      return (_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts;\n    },\n    set: function set(value) {\n      this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n  }, {\n    key: \"disableReloadOnDisconnect\",\n    value: function disableReloadOnDisconnect() {\n      this.reloadOnDisconnect = false;\n    }\n    /**\n     * this function is called when coinbase provider is being injected to a dapp\n     * standalone + walletlinked extension, ledger, in-app browser using cipher-web-view\n     */\n  }, {\n    key: \"setProviderInfo\",\n    value: function setProviderInfo(jsonRpcUrl, chainId) {\n      // extension tend to use the chianId from the dapp, while in-app browser and ledger overrides the default network\n      if (!(this.isLedger || this.isCoinbaseBrowser)) {\n        this._chainIdFromOpts = chainId;\n        this._jsonRpcUrlFromOpts = jsonRpcUrl;\n      }\n      this.updateProviderInfo(this.jsonRpcUrl, this.getChainId());\n    }\n  }, {\n    key: \"updateProviderInfo\",\n    value: function updateProviderInfo(jsonRpcUrl, chainId) {\n      this.jsonRpcUrl = jsonRpcUrl;\n      // emit chainChanged event if necessary\n      var originalChainId = this.getChainId();\n      this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n      var chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n      if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n        this.emit(\"chainChanged\", this.getChainId());\n        this.hasMadeFirstChainChangedEmission = true;\n      }\n    }\n  }, {\n    key: \"watchAsset\",\n    value: function () {\n      var _watchAsset = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(type, address, symbol, decimals, image, chainId) {\n        var relay, result;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context.sent;\n              _context.next = 5;\n              return relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString()).promise;\n            case 5:\n              result = _context.sent;\n              return _context.abrupt(\"return\", !!result.result);\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function watchAsset(_x, _x2, _x3, _x4, _x5, _x6) {\n        return _watchAsset.apply(this, arguments);\n      }\n      return watchAsset;\n    }()\n  }, {\n    key: \"addEthereumChain\",\n    value: function () {\n      var _addEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b, relay, isWhitelistedNetworkOrStandalone, res;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!((0, util_1.ensureIntNumber)(chainId) === this.getChainId())) {\n                _context2.next = 2;\n                break;\n              }\n              return _context2.abrupt(\"return\", false);\n            case 2:\n              _context2.next = 4;\n              return this.initializeRelay();\n            case 4:\n              relay = _context2.sent;\n              isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n              if (!(!this._isAuthorized() && !isWhitelistedNetworkOrStandalone)) {\n                _context2.next = 9;\n                break;\n              }\n              _context2.next = 9;\n              return relay.requestEthereumAccounts().promise;\n            case 9:\n              _context2.next = 11;\n              return relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n            case 11:\n              res = _context2.sent;\n              if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n                this.updateProviderInfo(rpcUrls[0], chainId);\n              }\n              return _context2.abrupt(\"return\", ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true);\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function addEthereumChain(_x7, _x8, _x9, _x10, _x11, _x12) {\n        return _addEthereumChain.apply(this, arguments);\n      }\n      return addEthereumChain;\n    }()\n  }, {\n    key: \"switchEthereumChain\",\n    value: function () {\n      var _switchEthereumChain = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(chainId) {\n        var relay, res, switchResponse;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context3.sent;\n              _context3.next = 5;\n              return relay.switchEthereumChain(chainId.toString(10), this.selectedAddress || undefined).promise;\n            case 5:\n              res = _context3.sent;\n              if (!((0, Web3Response_1.isErrorResponse)(res) && res.errorCode)) {\n                _context3.next = 12;\n                break;\n              }\n              if (!(res.errorCode === errors_1.standardErrorCodes.provider.unsupportedChain)) {\n                _context3.next = 11;\n                break;\n              }\n              throw errors_1.standardErrors.provider.unsupportedChain(chainId);\n            case 11:\n              throw errors_1.standardErrors.provider.custom({\n                message: res.errorMessage,\n                code: res.errorCode\n              });\n            case 12:\n              switchResponse = res.result;\n              if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n                this.updateProviderInfo(switchResponse.rpcUrl, chainId);\n              }\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function switchEthereumChain(_x13) {\n        return _switchEthereumChain.apply(this, arguments);\n      }\n      return switchEthereumChain;\n    }()\n  }, {\n    key: \"setAppInfo\",\n    value: function setAppInfo(appName, appLogoUrl) {\n      void this.initializeRelay().then(function (relay) {\n        return relay.setAppInfo(appName, appLogoUrl);\n      });\n    }\n    /** @deprecated Use `.request({ method: 'eth_requestAccounts' })` instead. */\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _a;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                method: \"provider::enable\",\n                addresses_length: this._addresses.length,\n                sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : undefined\n              });\n              if (!(this._addresses.length > 0)) {\n                _context4.next = 3;\n                break;\n              }\n              return _context4.abrupt(\"return\", _toConsumableArray(this._addresses));\n            case 3:\n              _context4.next = 5;\n              return this.send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n            case 5:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n      return enable;\n    }()\n  }, {\n    key: \"close\",\n    value: function () {\n      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        var relay;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context5.sent;\n              relay.resetAndReload();\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function close() {\n        return _close.apply(this, arguments);\n      }\n      return close;\n    }()\n  }, {\n    key: \"send\",\n    value: function send(requestOrMethod, callbackOrParams) {\n      // send<T>(method, params): Promise<T>\n      try {\n        var result = this._send(requestOrMethod, callbackOrParams);\n        if (result instanceof Promise) {\n          return result.catch(function (error) {\n            throw (0, errors_1.serializeError)(error, requestOrMethod);\n          });\n        }\n      } catch (error) {\n        throw (0, errors_1.serializeError)(error, requestOrMethod);\n      }\n    }\n  }, {\n    key: \"_send\",\n    value: function _send(requestOrMethod, callbackOrParams) {\n      var _this2 = this;\n      if (typeof requestOrMethod === \"string\") {\n        var method = requestOrMethod;\n        var params = Array.isArray(callbackOrParams) ? callbackOrParams : callbackOrParams !== undefined ? [callbackOrParams] : [];\n        var request = {\n          jsonrpc: \"2.0\",\n          id: 0,\n          method: method,\n          params: params\n        };\n        return this._sendRequestAsync(request).then(function (res) {\n          return res.result;\n        });\n      }\n      // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n      if (typeof callbackOrParams === \"function\") {\n        var _request2 = requestOrMethod;\n        var callback = callbackOrParams;\n        return this._sendAsync(_request2, callback);\n      }\n      // send(JSONRPCRequest[]): JSONRPCResponse[]\n      if (Array.isArray(requestOrMethod)) {\n        var requests = requestOrMethod;\n        return requests.map(function (r) {\n          return _this2._sendRequest(r);\n        });\n      }\n      // send(JSONRPCRequest): JSONRPCResponse\n      var req = requestOrMethod;\n      return this._sendRequest(req);\n    }\n  }, {\n    key: \"sendAsync\",\n    value: function () {\n      var _sendAsync2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request, callback) {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              return _context6.abrupt(\"return\", this._sendAsync(request, callback).catch(function (error) {\n                throw (0, errors_1.serializeError)(error, request);\n              }));\n            case 4:\n              _context6.prev = 4;\n              _context6.t0 = _context6[\"catch\"](0);\n              return _context6.abrupt(\"return\", Promise.reject((0, errors_1.serializeError)(_context6.t0, request)));\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 4]]);\n      }));\n      function sendAsync(_x14, _x15) {\n        return _sendAsync2.apply(this, arguments);\n      }\n      return sendAsync;\n    }()\n  }, {\n    key: \"_sendAsync\",\n    value: function () {\n      var _sendAsync3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(request, callback) {\n        var arrayCb, cb;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              if (!(typeof callback !== \"function\")) {\n                _context7.next = 2;\n                break;\n              }\n              throw new Error(\"callback is required\");\n            case 2:\n              if (!Array.isArray(request)) {\n                _context7.next = 6;\n                break;\n              }\n              arrayCb = callback;\n              this._sendMultipleRequestsAsync(request).then(function (responses) {\n                return arrayCb(null, responses);\n              }).catch(function (err) {\n                return arrayCb(err, null);\n              });\n              return _context7.abrupt(\"return\");\n            case 6:\n              // send(JSONRPCRequest, callback): void\n              cb = callback;\n              return _context7.abrupt(\"return\", this._sendRequestAsync(request).then(function (response) {\n                return cb(null, response);\n              }).catch(function (err) {\n                return cb(err, null);\n              }));\n            case 8:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function _sendAsync(_x16, _x17) {\n        return _sendAsync3.apply(this, arguments);\n      }\n      return _sendAsync;\n    }()\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(args) {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.prev = 0;\n              return _context8.abrupt(\"return\", this._request(args).catch(function (error) {\n                throw (0, errors_1.serializeError)(error, args.method);\n              }));\n            case 4:\n              _context8.prev = 4;\n              _context8.t0 = _context8[\"catch\"](0);\n              return _context8.abrupt(\"return\", Promise.reject((0, errors_1.serializeError)(_context8.t0, args.method)));\n            case 7:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this, [[0, 4]]);\n      }));\n      function request(_x18) {\n        return _request3.apply(this, arguments);\n      }\n      return request;\n    }()\n  }, {\n    key: \"_request\",\n    value: function () {\n      var _request4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(args) {\n        var method, params, newParams, id, result;\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              if (!(!args || typeof args !== \"object\" || Array.isArray(args))) {\n                _context9.next = 2;\n                break;\n              }\n              throw errors_1.standardErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args\n              });\n            case 2:\n              method = args.method, params = args.params;\n              if (!(typeof method !== \"string\" || method.length === 0)) {\n                _context9.next = 5;\n                break;\n              }\n              throw errors_1.standardErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args\n              });\n            case 5:\n              if (!(params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null))) {\n                _context9.next = 7;\n                break;\n              }\n              throw errors_1.standardErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args\n              });\n            case 7:\n              newParams = params === undefined ? [] : params; // Coinbase Wallet Requests\n              id = this._relayEventManager.makeRequestId();\n              _context9.next = 11;\n              return this._sendRequestAsync({\n                method: method,\n                params: newParams,\n                jsonrpc: \"2.0\",\n                id: id\n              });\n            case 11:\n              result = _context9.sent;\n              return _context9.abrupt(\"return\", result.result);\n            case 13:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function _request(_x19) {\n        return _request4.apply(this, arguments);\n      }\n      return _request;\n    }()\n  }, {\n    key: \"scanQRCode\",\n    value: function () {\n      var _scanQRCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(match) {\n        var _a, relay, res;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context10.sent;\n              _context10.next = 5;\n              return relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n            case 5:\n              res = _context10.sent;\n              if (!(typeof res.result !== \"string\")) {\n                _context10.next = 8;\n                break;\n              }\n              throw (0, errors_1.serializeError)((_a = res.errorMessage) !== null && _a !== void 0 ? _a : \"result was not a string\", Web3Method_1.Web3Method.scanQRCode);\n            case 8:\n              return _context10.abrupt(\"return\", res.result);\n            case 9:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function scanQRCode(_x20) {\n        return _scanQRCode.apply(this, arguments);\n      }\n      return scanQRCode;\n    }()\n  }, {\n    key: \"genericRequest\",\n    value: function () {\n      var _genericRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11(data, action) {\n        var _a, relay, res;\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context11.sent;\n              _context11.next = 5;\n              return relay.genericRequest(data, action).promise;\n            case 5:\n              res = _context11.sent;\n              if (!(typeof res.result !== \"string\")) {\n                _context11.next = 8;\n                break;\n              }\n              throw (0, errors_1.serializeError)((_a = res.errorMessage) !== null && _a !== void 0 ? _a : \"result was not a string\", Web3Method_1.Web3Method.generic);\n            case 8:\n              return _context11.abrupt(\"return\", res.result);\n            case 9:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function genericRequest(_x21, _x22) {\n        return _genericRequest.apply(this, arguments);\n      }\n      return genericRequest;\n    }()\n  }, {\n    key: \"selectProvider\",\n    value: function () {\n      var _selectProvider = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(providerOptions) {\n        var _a, relay, res;\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context12.sent;\n              _context12.next = 5;\n              return relay.selectProvider(providerOptions).promise;\n            case 5:\n              res = _context12.sent;\n              if (!(typeof res.result !== \"string\")) {\n                _context12.next = 8;\n                break;\n              }\n              throw (0, errors_1.serializeError)((_a = res.errorMessage) !== null && _a !== void 0 ? _a : \"result was not a string\", Web3Method_1.Web3Method.selectProvider);\n            case 8:\n              return _context12.abrupt(\"return\", res.result);\n            case 9:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n      function selectProvider(_x23) {\n        return _selectProvider.apply(this, arguments);\n      }\n      return selectProvider;\n    }()\n  }, {\n    key: \"supportsSubscriptions\",\n    value: function supportsSubscriptions() {\n      return false;\n    }\n  }, {\n    key: \"subscribe\",\n    value: function subscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      throw new Error(\"Subscriptions are not supported\");\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      return true;\n    }\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(request) {\n      var response = {\n        jsonrpc: \"2.0\",\n        id: request.id\n      };\n      var method = request.method;\n      response.result = this._handleSynchronousMethods(request);\n      if (response.result === undefined) {\n        throw new Error(\"Coinbase Wallet does not support calling \".concat(method, \" synchronously without \") + \"a callback. Please provide a callback parameter to call \".concat(method, \" \") + \"asynchronously.\");\n      }\n      return response;\n    }\n  }, {\n    key: \"_setAddresses\",\n    value: function _setAddresses(addresses, isDisconnect) {\n      if (!Array.isArray(addresses)) {\n        throw new Error(\"addresses is not an array\");\n      }\n      var newAddresses = addresses.map(function (address) {\n        return (0, util_1.ensureAddressString)(address);\n      });\n      if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n        return;\n      }\n      if (this._addresses.length > 0 && this.supportsAddressSwitching === false && !isDisconnect) {\n        /**\n         * The extension currently doesn't support switching selected wallet index\n         * make sure walletlink doesn't update it's address in this case\n         */\n        return;\n      }\n      this._addresses = newAddresses;\n      this.emit(\"accountsChanged\", this._addresses);\n      this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    }\n  }, {\n    key: \"_sendRequestAsync\",\n    value: function _sendRequestAsync(request) {\n      var _this3 = this;\n      return new Promise(function (resolve, reject) {\n        try {\n          var syncResult = _this3._handleSynchronousMethods(request);\n          if (syncResult !== undefined) {\n            return resolve({\n              jsonrpc: \"2.0\",\n              id: request.id,\n              result: syncResult\n            });\n          }\n          var filterPromise = _this3._handleAsynchronousFilterMethods(request);\n          if (filterPromise !== undefined) {\n            filterPromise.then(function (res) {\n              return resolve(Object.assign(Object.assign({}, res), {\n                id: request.id\n              }));\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n          var subscriptionPromise = _this3._handleSubscriptionMethods(request);\n          if (subscriptionPromise !== undefined) {\n            subscriptionPromise.then(function (res) {\n              return resolve({\n                jsonrpc: \"2.0\",\n                id: request.id,\n                result: res.result\n              });\n            }).catch(function (err) {\n              return reject(err);\n            });\n            return;\n          }\n        } catch (err) {\n          return reject(err);\n        }\n        _this3._handleAsynchronousMethods(request).then(function (res) {\n          return res && resolve(Object.assign(Object.assign({}, res), {\n            id: request.id\n          }));\n        }).catch(function (err) {\n          return reject(err);\n        });\n      });\n    }\n  }, {\n    key: \"_sendMultipleRequestsAsync\",\n    value: function _sendMultipleRequestsAsync(requests) {\n      var _this4 = this;\n      return Promise.all(requests.map(function (r) {\n        return _this4._sendRequestAsync(r);\n      }));\n    }\n  }, {\n    key: \"_handleSynchronousMethods\",\n    value: function _handleSynchronousMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_accounts:\n          return this._eth_accounts();\n        case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n          return this._eth_coinbase();\n        case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n          return this._eth_uninstallFilter(params);\n        case JSONRPC_1.JSONRPCMethod.net_version:\n          return this._net_version();\n        case JSONRPC_1.JSONRPCMethod.eth_chainId:\n          return this._eth_chainId();\n        default:\n          return undefined;\n      }\n    }\n  }, {\n    key: \"_handleAsynchronousMethods\",\n    value: function () {\n      var _handleAsynchronousMethods2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(request) {\n        var method, params, relay;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              method = request.method;\n              params = request.params || [];\n              _context13.t0 = method;\n              _context13.next = _context13.t0 === JSONRPC_1.JSONRPCMethod.eth_requestAccounts ? 5 : _context13.t0 === JSONRPC_1.JSONRPCMethod.eth_sign ? 6 : _context13.t0 === JSONRPC_1.JSONRPCMethod.eth_ecRecover ? 7 : _context13.t0 === JSONRPC_1.JSONRPCMethod.personal_sign ? 8 : _context13.t0 === JSONRPC_1.JSONRPCMethod.personal_ecRecover ? 9 : _context13.t0 === JSONRPC_1.JSONRPCMethod.eth_signTransaction ? 10 : _context13.t0 === JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction ? 11 : _context13.t0 === JSONRPC_1.JSONRPCMethod.eth_sendTransaction ? 12 : _context13.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1 ? 13 : _context13.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2 ? 14 : _context13.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3 ? 15 : _context13.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4 ? 16 : _context13.t0 === JSONRPC_1.JSONRPCMethod.eth_signTypedData ? 16 : _context13.t0 === JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary ? 17 : _context13.t0 === JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain ? 18 : _context13.t0 === JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain ? 19 : _context13.t0 === JSONRPC_1.JSONRPCMethod.wallet_watchAsset ? 20 : 21;\n              break;\n            case 5:\n              return _context13.abrupt(\"return\", this._eth_requestAccounts());\n            case 6:\n              return _context13.abrupt(\"return\", this._eth_sign(params));\n            case 7:\n              return _context13.abrupt(\"return\", this._eth_ecRecover(params));\n            case 8:\n              return _context13.abrupt(\"return\", this._personal_sign(params));\n            case 9:\n              return _context13.abrupt(\"return\", this._personal_ecRecover(params));\n            case 10:\n              return _context13.abrupt(\"return\", this._eth_signTransaction(params));\n            case 11:\n              return _context13.abrupt(\"return\", this._eth_sendRawTransaction(params));\n            case 12:\n              return _context13.abrupt(\"return\", this._eth_sendTransaction(params));\n            case 13:\n              return _context13.abrupt(\"return\", this._eth_signTypedData_v1(params));\n            case 14:\n              return _context13.abrupt(\"return\", this._throwUnsupportedMethodError());\n            case 15:\n              return _context13.abrupt(\"return\", this._eth_signTypedData_v3(params));\n            case 16:\n              return _context13.abrupt(\"return\", this._eth_signTypedData_v4(params));\n            case 17:\n              return _context13.abrupt(\"return\", this._cbwallet_arbitrary(params));\n            case 18:\n              return _context13.abrupt(\"return\", this._wallet_addEthereumChain(params));\n            case 19:\n              return _context13.abrupt(\"return\", this._wallet_switchEthereumChain(params));\n            case 20:\n              return _context13.abrupt(\"return\", this._wallet_watchAsset(params));\n            case 21:\n              _context13.next = 23;\n              return this.initializeRelay();\n            case 23:\n              relay = _context13.sent;\n              return _context13.abrupt(\"return\", relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl));\n            case 25:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function _handleAsynchronousMethods(_x24) {\n        return _handleAsynchronousMethods2.apply(this, arguments);\n      }\n      return _handleAsynchronousMethods;\n    }()\n  }, {\n    key: \"_handleAsynchronousFilterMethods\",\n    value: function _handleAsynchronousFilterMethods(request) {\n      var method = request.method;\n      var params = request.params || [];\n      switch (method) {\n        case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n          return this._eth_newFilter(params);\n        case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n          return this._eth_newBlockFilter();\n        case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n          return this._eth_newPendingTransactionFilter();\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n          return this._eth_getFilterChanges(params);\n        case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n          return this._eth_getFilterLogs(params);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_handleSubscriptionMethods\",\n    value: function _handleSubscriptionMethods(request) {\n      switch (request.method) {\n        case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n        case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n          return this._subscriptionManager.handleRequest(request);\n      }\n      return undefined;\n    }\n  }, {\n    key: \"_isKnownAddress\",\n    value: function _isKnownAddress(addressString) {\n      try {\n        var addressStr = (0, util_1.ensureAddressString)(addressString);\n        var lowercaseAddresses = this._addresses.map(function (address) {\n          return (0, util_1.ensureAddressString)(address);\n        });\n        return lowercaseAddresses.includes(addressStr);\n      } catch (_a) {}\n      return false;\n    }\n  }, {\n    key: \"_ensureKnownAddress\",\n    value: function _ensureKnownAddress(addressString) {\n      var _a;\n      if (!this._isKnownAddress(addressString)) {\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n        throw new Error(\"Unknown Ethereum address\");\n      }\n    }\n  }, {\n    key: \"_prepareTransactionParams\",\n    value: function _prepareTransactionParams(tx) {\n      var fromAddress = tx.from ? (0, util_1.ensureAddressString)(tx.from) : this.selectedAddress;\n      if (!fromAddress) {\n        throw new Error(\"Ethereum address is unavailable\");\n      }\n      this._ensureKnownAddress(fromAddress);\n      var toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n      var weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n      var data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n      var nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n      var gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n      var maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n      var maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas) : null;\n      var gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n      var chainId = this.getChainId();\n      return {\n        fromAddress: fromAddress,\n        toAddress: toAddress,\n        weiValue: weiValue,\n        data: data,\n        nonce: nonce,\n        gasPriceInWei: gasPriceInWei,\n        maxFeePerGas: maxFeePerGas,\n        maxPriorityFeePerGas: maxPriorityFeePerGas,\n        gasLimit: gasLimit,\n        chainId: chainId\n      };\n    }\n  }, {\n    key: \"_isAuthorized\",\n    value: function _isAuthorized() {\n      return this._addresses.length > 0;\n    }\n  }, {\n    key: \"_requireAuthorization\",\n    value: function _requireAuthorization() {\n      if (!this._isAuthorized()) {\n        throw errors_1.standardErrors.provider.unauthorized({});\n      }\n    }\n  }, {\n    key: \"_throwUnsupportedMethodError\",\n    value: function _throwUnsupportedMethodError() {\n      throw errors_1.standardErrors.provider.unsupportedMethod({});\n    }\n  }, {\n    key: \"_signEthereumMessage\",\n    value: function () {\n      var _signEthereumMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(message, address, addPrefix, typedDataJson) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              this._ensureKnownAddress(address);\n              _context14.prev = 1;\n              _context14.next = 4;\n              return this.initializeRelay();\n            case 4:\n              relay = _context14.sent;\n              _context14.next = 7;\n              return relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            case 7:\n              res = _context14.sent;\n              return _context14.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 11:\n              _context14.prev = 11;\n              _context14.t0 = _context14[\"catch\"](1);\n              if (!(typeof _context14.t0.message === \"string\" && _context14.t0.message.match(/(denied|rejected)/i))) {\n                _context14.next = 15;\n                break;\n              }\n              throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied message signature\");\n            case 15:\n              throw _context14.t0;\n            case 16:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this, [[1, 11]]);\n      }));\n      function _signEthereumMessage(_x25, _x26, _x27, _x28) {\n        return _signEthereumMessage2.apply(this, arguments);\n      }\n      return _signEthereumMessage;\n    }()\n  }, {\n    key: \"_ethereumAddressFromSignedMessage\",\n    value: function () {\n      var _ethereumAddressFromSignedMessage2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(message, signature, addPrefix) {\n        var relay, res;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return this.initializeRelay();\n            case 2:\n              relay = _context15.sent;\n              _context15.next = 5;\n              return relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n            case 5:\n              res = _context15.sent;\n              return _context15.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 7:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function _ethereumAddressFromSignedMessage(_x29, _x30, _x31) {\n        return _ethereumAddressFromSignedMessage2.apply(this, arguments);\n      }\n      return _ethereumAddressFromSignedMessage;\n    }()\n  }, {\n    key: \"_eth_accounts\",\n    value: function _eth_accounts() {\n      return _toConsumableArray(this._addresses);\n    }\n  }, {\n    key: \"_eth_coinbase\",\n    value: function _eth_coinbase() {\n      return this.selectedAddress || null;\n    }\n  }, {\n    key: \"_net_version\",\n    value: function _net_version() {\n      return this.getChainId().toString(10);\n    }\n  }, {\n    key: \"_eth_chainId\",\n    value: function _eth_chainId() {\n      return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n  }, {\n    key: \"getChainId\",\n    value: function getChainId() {\n      var chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY);\n      if (!chainIdStr) {\n        return (0, util_1.ensureIntNumber)(this._chainIdFromOpts);\n      }\n      var chainId = parseInt(chainIdStr, 10);\n      return (0, util_1.ensureIntNumber)(chainId);\n    }\n  }, {\n    key: \"_eth_requestAccounts\",\n    value: function () {\n      var _eth_requestAccounts2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16() {\n        var _a, res, relay;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n                method: \"provider::_eth_requestAccounts\",\n                addresses_length: this._addresses.length,\n                sessionIdHash: this._relay ? Session_1.Session.hash(this._relay.session.id) : undefined\n              });\n              if (!(this._addresses.length > 0)) {\n                _context16.next = 3;\n                break;\n              }\n              return _context16.abrupt(\"return\", Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n              }));\n            case 3:\n              _context16.prev = 3;\n              _context16.next = 6;\n              return this.initializeRelay();\n            case 6:\n              relay = _context16.sent;\n              _context16.next = 9;\n              return relay.requestEthereumAccounts().promise;\n            case 9:\n              res = _context16.sent;\n              _context16.next = 17;\n              break;\n            case 12:\n              _context16.prev = 12;\n              _context16.t0 = _context16[\"catch\"](3);\n              if (!(typeof _context16.t0.message === \"string\" && _context16.t0.message.match(/(denied|rejected)/i))) {\n                _context16.next = 16;\n                break;\n              }\n              throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            case 16:\n              throw _context16.t0;\n            case 17:\n              if (res.result) {\n                _context16.next = 19;\n                break;\n              }\n              throw new Error(\"accounts received is empty\");\n            case 19:\n              this._setAddresses(res.result);\n              if (this.isLedger || this.isCoinbaseBrowser) {\n                _context16.next = 23;\n                break;\n              }\n              _context16.next = 23;\n              return this.switchEthereumChain(this.getChainId());\n            case 23:\n              return _context16.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses\n              });\n            case 24:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this, [[3, 12]]);\n      }));\n      function _eth_requestAccounts() {\n        return _eth_requestAccounts2.apply(this, arguments);\n      }\n      return _eth_requestAccounts;\n    }()\n  }, {\n    key: \"_eth_sign\",\n    value: function _eth_sign(params) {\n      this._requireAuthorization();\n      var address = (0, util_1.ensureAddressString)(params[0]);\n      var message = (0, util_1.ensureBuffer)(params[1]);\n      return this._signEthereumMessage(message, address, false);\n    }\n  }, {\n    key: \"_eth_ecRecover\",\n    value: function _eth_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n  }, {\n    key: \"_personal_sign\",\n    value: function _personal_sign(params) {\n      this._requireAuthorization();\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var address = (0, util_1.ensureAddressString)(params[1]);\n      return this._signEthereumMessage(message, address, true);\n    }\n  }, {\n    key: \"_personal_ecRecover\",\n    value: function _personal_ecRecover(params) {\n      var message = (0, util_1.ensureBuffer)(params[0]);\n      var signature = (0, util_1.ensureBuffer)(params[1]);\n      return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n  }, {\n    key: \"_eth_signTransaction\",\n    value: function () {\n      var _eth_signTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              this._requireAuthorization();\n              tx = this._prepareTransactionParams(params[0] || {});\n              _context17.prev = 2;\n              _context17.next = 5;\n              return this.initializeRelay();\n            case 5:\n              relay = _context17.sent;\n              _context17.next = 8;\n              return relay.signEthereumTransaction(tx).promise;\n            case 8:\n              res = _context17.sent;\n              return _context17.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 12:\n              _context17.prev = 12;\n              _context17.t0 = _context17[\"catch\"](2);\n              if (!(typeof _context17.t0.message === \"string\" && _context17.t0.message.match(/(denied|rejected)/i))) {\n                _context17.next = 16;\n                break;\n              }\n              throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            case 16:\n              throw _context17.t0;\n            case 17:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, this, [[2, 12]]);\n      }));\n      function _eth_signTransaction(_x32) {\n        return _eth_signTransaction2.apply(this, arguments);\n      }\n      return _eth_signTransaction;\n    }()\n  }, {\n    key: \"_eth_sendRawTransaction\",\n    value: function () {\n      var _eth_sendRawTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(params) {\n        var signedTransaction, relay, res;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n              _context18.next = 3;\n              return this.initializeRelay();\n            case 3:\n              relay = _context18.sent;\n              _context18.next = 6;\n              return relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n            case 6:\n              res = _context18.sent;\n              return _context18.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 8:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function _eth_sendRawTransaction(_x33) {\n        return _eth_sendRawTransaction2.apply(this, arguments);\n      }\n      return _eth_sendRawTransaction;\n    }()\n  }, {\n    key: \"_eth_sendTransaction\",\n    value: function () {\n      var _eth_sendTransaction2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(params) {\n        var tx, relay, res;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              this._requireAuthorization();\n              tx = this._prepareTransactionParams(params[0] || {});\n              _context19.prev = 2;\n              _context19.next = 5;\n              return this.initializeRelay();\n            case 5:\n              relay = _context19.sent;\n              _context19.next = 8;\n              return relay.signAndSubmitEthereumTransaction(tx).promise;\n            case 8:\n              res = _context19.sent;\n              return _context19.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res.result\n              });\n            case 12:\n              _context19.prev = 12;\n              _context19.t0 = _context19[\"catch\"](2);\n              if (!(typeof _context19.t0.message === \"string\" && _context19.t0.message.match(/(denied|rejected)/i))) {\n                _context19.next = 16;\n                break;\n              }\n              throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            case 16:\n              throw _context19.t0;\n            case 17:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this, [[2, 12]]);\n      }));\n      function _eth_sendTransaction(_x34) {\n        return _eth_sendTransaction2.apply(this, arguments);\n      }\n      return _eth_sendTransaction;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v1\",\n    value: function () {\n      var _eth_signTypedData_v = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(params) {\n        var typedData, address, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              this._requireAuthorization();\n              typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n              address = (0, util_1.ensureAddressString)(params[1]);\n              this._ensureKnownAddress(address);\n              message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({\n                data: typedData\n              });\n              typedDataJSON = JSON.stringify(typedData, null, 2);\n              return _context20.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n            case 7:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n      function _eth_signTypedData_v1(_x35) {\n        return _eth_signTypedData_v.apply(this, arguments);\n      }\n      return _eth_signTypedData_v1;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v3\",\n    value: function () {\n      var _eth_signTypedData_v2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              this._requireAuthorization();\n              address = (0, util_1.ensureAddressString)(params[0]);\n              typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n              this._ensureKnownAddress(address);\n              message = eth_eip712_util_1.default.hashForSignTypedData_v3({\n                data: typedData\n              });\n              typedDataJSON = JSON.stringify(typedData, null, 2);\n              return _context21.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n            case 7:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this);\n      }));\n      function _eth_signTypedData_v3(_x36) {\n        return _eth_signTypedData_v2.apply(this, arguments);\n      }\n      return _eth_signTypedData_v3;\n    }()\n  }, {\n    key: \"_eth_signTypedData_v4\",\n    value: function () {\n      var _eth_signTypedData_v5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(params) {\n        var address, typedData, message, typedDataJSON;\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              this._requireAuthorization();\n              address = (0, util_1.ensureAddressString)(params[0]);\n              typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n              this._ensureKnownAddress(address);\n              message = eth_eip712_util_1.default.hashForSignTypedData_v4({\n                data: typedData\n              });\n              typedDataJSON = JSON.stringify(typedData, null, 2);\n              return _context22.abrupt(\"return\", this._signEthereumMessage(message, address, false, typedDataJSON));\n            case 7:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22, this);\n      }));\n      function _eth_signTypedData_v4(_x37) {\n        return _eth_signTypedData_v5.apply(this, arguments);\n      }\n      return _eth_signTypedData_v4;\n    }() /** @deprecated */\n  }, {\n    key: \"_cbwallet_arbitrary\",\n    value: function () {\n      var _cbwallet_arbitrary2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23(params) {\n        var action, data, result;\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              action = params[0];\n              data = params[1];\n              if (!(typeof data !== \"string\")) {\n                _context23.next = 4;\n                break;\n              }\n              throw new Error(\"parameter must be a string\");\n            case 4:\n              if (!(typeof action !== \"object\" || action === null)) {\n                _context23.next = 6;\n                break;\n              }\n              throw new Error(\"parameter must be an object\");\n            case 6:\n              _context23.next = 8;\n              return this.genericRequest(action, data);\n            case 8:\n              result = _context23.sent;\n              return _context23.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: result\n              });\n            case 10:\n            case \"end\":\n              return _context23.stop();\n          }\n        }, _callee23, this);\n      }));\n      function _cbwallet_arbitrary(_x38) {\n        return _cbwallet_arbitrary2.apply(this, arguments);\n      }\n      return _cbwallet_arbitrary;\n    }()\n  }, {\n    key: \"_wallet_addEthereumChain\",\n    value: function () {\n      var _wallet_addEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24(params) {\n        var _a, _b, _c, _d, request, chainIdNumber, success;\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              request = params[0];\n              if (!(((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0)) {\n                _context24.next = 3;\n                break;\n              }\n              return _context24.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: {\n                  code: 2,\n                  message: \"please pass in at least 1 rpcUrl\"\n                }\n              });\n            case 3:\n              if (!(!request.chainName || request.chainName.trim() === \"\")) {\n                _context24.next = 5;\n                break;\n              }\n              throw errors_1.standardErrors.rpc.invalidParams(\"chainName is a required field\");\n            case 5:\n              if (request.nativeCurrency) {\n                _context24.next = 7;\n                break;\n              }\n              throw errors_1.standardErrors.rpc.invalidParams(\"nativeCurrency is a required field\");\n            case 7:\n              chainIdNumber = parseInt(request.chainId, 16);\n              _context24.next = 10;\n              return this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n            case 10:\n              success = _context24.sent;\n              if (!success) {\n                _context24.next = 15;\n                break;\n              }\n              return _context24.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: null\n              });\n            case 15:\n              return _context24.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: {\n                  code: 2,\n                  message: \"unable to add ethereum chain\"\n                }\n              });\n            case 16:\n            case \"end\":\n              return _context24.stop();\n          }\n        }, _callee24, this);\n      }));\n      function _wallet_addEthereumChain(_x39) {\n        return _wallet_addEthereumChain2.apply(this, arguments);\n      }\n      return _wallet_addEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_switchEthereumChain\",\n    value: function () {\n      var _wallet_switchEthereumChain2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(params) {\n        var request;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) switch (_context25.prev = _context25.next) {\n            case 0:\n              request = params[0];\n              _context25.next = 3;\n              return this.switchEthereumChain(parseInt(request.chainId, 16));\n            case 3:\n              return _context25.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: null\n              });\n            case 4:\n            case \"end\":\n              return _context25.stop();\n          }\n        }, _callee25, this);\n      }));\n      function _wallet_switchEthereumChain(_x40) {\n        return _wallet_switchEthereumChain2.apply(this, arguments);\n      }\n      return _wallet_switchEthereumChain;\n    }()\n  }, {\n    key: \"_wallet_watchAsset\",\n    value: function () {\n      var _wallet_watchAsset2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(params) {\n        var request, chainId, _request$options, address, symbol, image, decimals, res;\n        return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n          while (1) switch (_context26.prev = _context26.next) {\n            case 0:\n              request = Array.isArray(params) ? params[0] : params;\n              if (request.type) {\n                _context26.next = 3;\n                break;\n              }\n              throw errors_1.standardErrors.rpc.invalidParams(\"Type is required\");\n            case 3:\n              if (!((request === null || request === void 0 ? void 0 : request.type) !== \"ERC20\")) {\n                _context26.next = 5;\n                break;\n              }\n              throw errors_1.standardErrors.rpc.invalidParams(\"Asset of type '\".concat(request.type, \"' is not supported\"));\n            case 5:\n              if (request === null || request === void 0 ? void 0 : request.options) {\n                _context26.next = 7;\n                break;\n              }\n              throw errors_1.standardErrors.rpc.invalidParams(\"Options are required\");\n            case 7:\n              if (request === null || request === void 0 ? void 0 : request.options.address) {\n                _context26.next = 9;\n                break;\n              }\n              throw errors_1.standardErrors.rpc.invalidParams(\"Address is required\");\n            case 9:\n              chainId = this.getChainId();\n              _request$options = request.options, address = _request$options.address, symbol = _request$options.symbol, image = _request$options.image, decimals = _request$options.decimals;\n              _context26.next = 13;\n              return this.watchAsset(request.type, address, symbol, decimals, image, chainId);\n            case 13:\n              res = _context26.sent;\n              return _context26.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: res\n              });\n            case 15:\n            case \"end\":\n              return _context26.stop();\n          }\n        }, _callee26, this);\n      }));\n      function _wallet_watchAsset(_x41) {\n        return _wallet_watchAsset2.apply(this, arguments);\n      }\n      return _wallet_watchAsset;\n    }()\n  }, {\n    key: \"_eth_uninstallFilter\",\n    value: function _eth_uninstallFilter(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.uninstallFilter(filterId);\n    }\n  }, {\n    key: \"_eth_newFilter\",\n    value: function () {\n      var _eth_newFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27(params) {\n        var param, filterId;\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) switch (_context27.prev = _context27.next) {\n            case 0:\n              param = params[0];\n              _context27.next = 3;\n              return this._filterPolyfill.newFilter(param);\n            case 3:\n              filterId = _context27.sent;\n              return _context27.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n            case 5:\n            case \"end\":\n              return _context27.stop();\n          }\n        }, _callee27, this);\n      }));\n      function _eth_newFilter(_x42) {\n        return _eth_newFilter2.apply(this, arguments);\n      }\n      return _eth_newFilter;\n    }()\n  }, {\n    key: \"_eth_newBlockFilter\",\n    value: function () {\n      var _eth_newBlockFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28() {\n        var filterId;\n        return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n          while (1) switch (_context28.prev = _context28.next) {\n            case 0:\n              _context28.next = 2;\n              return this._filterPolyfill.newBlockFilter();\n            case 2:\n              filterId = _context28.sent;\n              return _context28.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n            case 4:\n            case \"end\":\n              return _context28.stop();\n          }\n        }, _callee28, this);\n      }));\n      function _eth_newBlockFilter() {\n        return _eth_newBlockFilter2.apply(this, arguments);\n      }\n      return _eth_newBlockFilter;\n    }()\n  }, {\n    key: \"_eth_newPendingTransactionFilter\",\n    value: function () {\n      var _eth_newPendingTransactionFilter2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29() {\n        var filterId;\n        return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n          while (1) switch (_context29.prev = _context29.next) {\n            case 0:\n              _context29.next = 2;\n              return this._filterPolyfill.newPendingTransactionFilter();\n            case 2:\n              filterId = _context29.sent;\n              return _context29.abrupt(\"return\", {\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: filterId\n              });\n            case 4:\n            case \"end\":\n              return _context29.stop();\n          }\n        }, _callee29, this);\n      }));\n      function _eth_newPendingTransactionFilter() {\n        return _eth_newPendingTransactionFilter2.apply(this, arguments);\n      }\n      return _eth_newPendingTransactionFilter;\n    }()\n  }, {\n    key: \"_eth_getFilterChanges\",\n    value: function _eth_getFilterChanges(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterChanges(filterId);\n    }\n  }, {\n    key: \"_eth_getFilterLogs\",\n    value: function _eth_getFilterLogs(params) {\n      var filterId = (0, util_1.ensureHexString)(params[0]);\n      return this._filterPolyfill.getFilterLogs(filterId);\n    }\n  }, {\n    key: \"initializeRelay\",\n    value: function initializeRelay() {\n      var _this5 = this;\n      if (this._relay) {\n        return Promise.resolve(this._relay);\n      }\n      return this._relayProvider().then(function (relay) {\n        relay.setAccountsCallback(function (accounts, isDisconnect) {\n          return _this5._setAddresses(accounts, isDisconnect);\n        });\n        relay.setChainCallback(function (chainId, jsonRpcUrl) {\n          _this5.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10));\n        });\n        relay.setDappDefaultChainCallback(_this5._chainIdFromOpts);\n        _this5._relay = relay;\n        return relay;\n      });\n    }\n  }]);\n  return CoinbaseWalletProvider;\n}(safe_event_emitter_1.default);\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;","map":{"version":3,"names":["_toConsumableArray","require","_asyncToGenerator","_classCallCheck","_createClass","_assertThisInitialized","_inherits","_createSuper","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","__importDefault","mod","__esModule","CoinbaseWalletProvider","safe_event_emitter_1","bn_js_1","DiagnosticLogger_1","errors_1","Session_1","WalletSDKRelayAbstract_1","Web3Method_1","Web3Response_1","util_1","eth_eip712_util_1","FilterPolyfill_1","JSONRPC_1","SubscriptionManager_1","DEFAULT_CHAIN_ID_KEY","DEFAULT_JSON_RPC_URL","_safe_event_emitter_","_super","options","_this","_a","_b","_filterPolyfill","FilterPolyfill","_subscriptionManager","SubscriptionManager","_relay","_addresses","hasMadeFirstChainChangedEmission","setProviderInfo","bind","updateProviderInfo","getChainId","setAppInfo","enable","close","send","sendAsync","request","_setAddresses","scanQRCode","genericRequest","_chainIdFromOpts","chainId","_jsonRpcUrlFromOpts","jsonRpcUrl","_overrideIsMetaMask","overrideIsMetaMask","_relayProvider","relayProvider","_storage","storage","_relayEventManager","relayEventManager","diagnostic","diagnosticLogger","reloadOnDisconnect","isCoinbaseWallet","overrideIsCoinbaseWallet","isCoinbaseBrowser","overrideIsCoinbaseBrowser","qrUrl","supportsAddressSwitching","isLedger","chainIdStr","prepend0x","toString","emit","cachedAddresses","getItem","LOCAL_STORAGE_ADDRESSES_KEY","addresses","split","map","address","ensureAddressString","events","on","notification","data","params","initializeRelay","window","addEventListener","event","origin","location","source","action","_chainId","Number","get","isConnected","set","setItem","disableReloadOnDisconnect","originalChainId","chainChanged","ensureIntNumber","_watchAsset","_callee","symbol","decimals","image","relay","_callee$","_context","watchAsset","promise","_x","_x2","_x3","_x4","_x5","_x6","apply","arguments","_addEthereumChain","_callee2","rpcUrls","blockExplorerUrls","chainName","iconUrls","nativeCurrency","isWhitelistedNetworkOrStandalone","res","_callee2$","_context2","inlineAddEthereumChain","_isAuthorized","requestEthereumAccounts","addEthereumChain","isApproved","_x7","_x8","_x9","_x10","_x11","_x12","_switchEthereumChain","_callee3","switchResponse","_callee3$","_context3","switchEthereumChain","selectedAddress","isErrorResponse","errorCode","standardErrorCodes","provider","unsupportedChain","standardErrors","custom","message","errorMessage","code","rpcUrl","_x13","appName","appLogoUrl","_enable","_callee4","_callee4$","_context4","log","EVENTS","ETH_ACCOUNTS_STATE","addresses_length","sessionIdHash","Session","hash","session","id","JSONRPCMethod","eth_requestAccounts","_close","_callee5","_callee5$","_context5","resetAndReload","requestOrMethod","callbackOrParams","_send","serializeError","_this2","Array","isArray","jsonrpc","_sendRequestAsync","callback","_sendAsync","requests","r","_sendRequest","req","_sendAsync2","_callee6","_callee6$","_context6","t0","_x14","_x15","_sendAsync3","_callee7","arrayCb","cb","_callee7$","_context7","_sendMultipleRequestsAsync","responses","response","_x16","_x17","_request3","_callee8","args","_callee8$","_context8","_request","_x18","_request4","_callee9","newParams","_callee9$","_context9","rpc","invalidRequest","makeRequestId","_x19","_scanQRCode","_callee10","match","_callee10$","_context10","ensureRegExpString","Web3Method","_x20","_genericRequest","_callee11","_callee11$","_context11","generic","_x21","_x22","_selectProvider","_callee12","providerOptions","_callee12$","_context12","selectProvider","_x23","supportsSubscriptions","subscribe","unsubscribe","disconnect","_handleSynchronousMethods","concat","isDisconnect","newAddresses","JSON","stringify","join","_this3","syncResult","filterPromise","_handleAsynchronousFilterMethods","assign","subscriptionPromise","_handleSubscriptionMethods","_handleAsynchronousMethods","_this4","all","eth_accounts","_eth_accounts","eth_coinbase","_eth_coinbase","eth_uninstallFilter","_eth_uninstallFilter","net_version","_net_version","eth_chainId","_eth_chainId","_handleAsynchronousMethods2","_callee13","_callee13$","_context13","eth_sign","eth_ecRecover","personal_sign","personal_ecRecover","eth_signTransaction","eth_sendRawTransaction","eth_sendTransaction","eth_signTypedData_v1","eth_signTypedData_v2","eth_signTypedData_v3","eth_signTypedData_v4","eth_signTypedData","cbWallet_arbitrary","wallet_addEthereumChain","wallet_switchEthereumChain","wallet_watchAsset","_eth_requestAccounts","_eth_sign","_eth_ecRecover","_personal_sign","_personal_ecRecover","_eth_signTransaction","_eth_sendRawTransaction","_eth_sendTransaction","_eth_signTypedData_v1","_throwUnsupportedMethodError","_eth_signTypedData_v3","_eth_signTypedData_v4","_cbwallet_arbitrary","_wallet_addEthereumChain","_wallet_switchEthereumChain","_wallet_watchAsset","makeEthereumJSONRPCRequest","_x24","eth_newFilter","_eth_newFilter","eth_newBlockFilter","_eth_newBlockFilter","eth_newPendingTransactionFilter","_eth_newPendingTransactionFilter","eth_getFilterChanges","_eth_getFilterChanges","eth_getFilterLogs","_eth_getFilterLogs","eth_subscribe","eth_unsubscribe","handleRequest","_isKnownAddress","addressString","addressStr","lowercaseAddresses","includes","_ensureKnownAddress","UNKNOWN_ADDRESS_ENCOUNTERED","_prepareTransactionParams","tx","fromAddress","from","toAddress","to","weiValue","ensureBN","default","ensureBuffer","Buffer","alloc","nonce","gasPriceInWei","gasPrice","maxFeePerGas","maxPriorityFeePerGas","gasLimit","gas","_requireAuthorization","unauthorized","unsupportedMethod","_signEthereumMessage2","_callee14","addPrefix","typedDataJson","_callee14$","_context14","signEthereumMessage","userRejectedRequest","_signEthereumMessage","_x25","_x26","_x27","_x28","_ethereumAddressFromSignedMessage2","_callee15","signature","_callee15$","_context15","ethereumAddressFromSignedMessage","_ethereumAddressFromSignedMessage","_x29","_x30","_x31","hexStringFromIntNumber","parseInt","_eth_requestAccounts2","_callee16","_callee16$","_context16","_eth_signTransaction2","_callee17","_callee17$","_context17","signEthereumTransaction","_x32","_eth_sendRawTransaction2","_callee18","signedTransaction","_callee18$","_context18","submitEthereumTransaction","_x33","_eth_sendTransaction2","_callee19","_callee19$","_context19","signAndSubmitEthereumTransaction","_x34","_eth_signTypedData_v","_callee20","typedData","typedDataJSON","_callee20$","_context20","ensureParsedJSONObject","hashForSignTypedDataLegacy","_x35","_eth_signTypedData_v2","_callee21","_callee21$","_context21","hashForSignTypedData_v3","_x36","_eth_signTypedData_v5","_callee22","_callee22$","_context22","hashForSignTypedData_v4","_x37","_cbwallet_arbitrary2","_callee23","_callee23$","_context23","_x38","_wallet_addEthereumChain2","_callee24","_c","_d","chainIdNumber","success","_callee24$","_context24","trim","invalidParams","_x39","_wallet_switchEthereumChain2","_callee25","_callee25$","_context25","_x40","_wallet_watchAsset2","_callee26","_request$options","_callee26$","_context26","_x41","filterId","ensureHexString","uninstallFilter","_eth_newFilter2","_callee27","param","_callee27$","_context27","newFilter","_x42","_eth_newBlockFilter2","_callee28","_callee28$","_context28","newBlockFilter","_eth_newPendingTransactionFilter2","_callee29","_callee29$","_context29","newPendingTransactionFilter","getFilterChanges","getFilterLogs","_this5","setAccountsCallback","accounts","setChainCallback","setDappDefaultChainCallback"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/node_modules/@coinbase/wallet-sdk/dist/provider/CoinbaseWalletProvider.js"],"sourcesContent":["\"use strict\";\n// Copyright (c) 2018-2022 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CoinbaseWalletProvider = void 0;\nconst safe_event_emitter_1 = __importDefault(require(\"@metamask/safe-event-emitter\"));\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst DiagnosticLogger_1 = require(\"../connection/DiagnosticLogger\");\nconst errors_1 = require(\"../errors\");\nconst Session_1 = require(\"../relay/Session\");\nconst WalletSDKRelayAbstract_1 = require(\"../relay/WalletSDKRelayAbstract\");\nconst Web3Method_1 = require(\"../relay/Web3Method\");\nconst Web3Response_1 = require(\"../relay/Web3Response\");\nconst util_1 = require(\"../util\");\nconst eth_eip712_util_1 = __importDefault(require(\"../vendor-js/eth-eip712-util\"));\nconst FilterPolyfill_1 = require(\"./FilterPolyfill\");\nconst JSONRPC_1 = require(\"./JSONRPC\");\nconst SubscriptionManager_1 = require(\"./SubscriptionManager\");\nconst DEFAULT_CHAIN_ID_KEY = \"DefaultChainId\";\nconst DEFAULT_JSON_RPC_URL = \"DefaultJsonRpcUrl\";\nclass CoinbaseWalletProvider extends safe_event_emitter_1.default {\n    constructor(options) {\n        var _a, _b;\n        super();\n        this._filterPolyfill = new FilterPolyfill_1.FilterPolyfill(this);\n        this._subscriptionManager = new SubscriptionManager_1.SubscriptionManager(this);\n        this._relay = null;\n        this._addresses = [];\n        this.hasMadeFirstChainChangedEmission = false;\n        this.setProviderInfo = this.setProviderInfo.bind(this);\n        this.updateProviderInfo = this.updateProviderInfo.bind(this);\n        this.getChainId = this.getChainId.bind(this);\n        this.setAppInfo = this.setAppInfo.bind(this);\n        this.enable = this.enable.bind(this);\n        this.close = this.close.bind(this);\n        this.send = this.send.bind(this);\n        this.sendAsync = this.sendAsync.bind(this);\n        this.request = this.request.bind(this);\n        this._setAddresses = this._setAddresses.bind(this);\n        this.scanQRCode = this.scanQRCode.bind(this);\n        this.genericRequest = this.genericRequest.bind(this);\n        this._chainIdFromOpts = options.chainId;\n        this._jsonRpcUrlFromOpts = options.jsonRpcUrl;\n        this._overrideIsMetaMask = options.overrideIsMetaMask;\n        this._relayProvider = options.relayProvider;\n        this._storage = options.storage;\n        this._relayEventManager = options.relayEventManager;\n        this.diagnostic = options.diagnosticLogger;\n        this.reloadOnDisconnect = true;\n        this.isCoinbaseWallet = (_a = options.overrideIsCoinbaseWallet) !== null && _a !== void 0 ? _a : true;\n        this.isCoinbaseBrowser = (_b = options.overrideIsCoinbaseBrowser) !== null && _b !== void 0 ? _b : false;\n        this.qrUrl = options.qrUrl;\n        this.supportsAddressSwitching = options.supportsAddressSwitching;\n        this.isLedger = options.isLedger;\n        const chainId = this.getChainId();\n        const chainIdStr = (0, util_1.prepend0x)(chainId.toString(16));\n        // indicate that we've connected, for EIP-1193 compliance\n        this.emit(\"connect\", { chainIdStr });\n        const cachedAddresses = this._storage.getItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY);\n        if (cachedAddresses) {\n            const addresses = cachedAddresses.split(\" \");\n            if (addresses[0] !== \"\") {\n                this._addresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n                this.emit(\"accountsChanged\", addresses);\n            }\n        }\n        this._subscriptionManager.events.on(\"notification\", (notification) => {\n            this.emit(\"message\", {\n                type: notification.method,\n                data: notification.params,\n            });\n        });\n        if (this._addresses.length > 0) {\n            void this.initializeRelay();\n        }\n        window.addEventListener(\"message\", event => {\n            var _a;\n            // Used to verify the source and window are correct before proceeding\n            if (event.origin !== location.origin || event.source !== window) {\n                return;\n            }\n            if (event.data.type !== \"walletLinkMessage\")\n                return; // compatibility with CBW extension\n            if (event.data.data.action === \"defaultChainChanged\" ||\n                event.data.data.action === \"dappChainSwitched\") {\n                const _chainId = event.data.data.chainId;\n                const jsonRpcUrl = (_a = event.data.data.jsonRpcUrl) !== null && _a !== void 0 ? _a : this.jsonRpcUrl;\n                this.updateProviderInfo(jsonRpcUrl, Number(_chainId));\n            }\n            if (event.data.data.action === \"addressChanged\") {\n                this._setAddresses([event.data.data.address]);\n            }\n        });\n    }\n    /** @deprecated Use `.request({ method: 'eth_accounts' })` instead. */\n    get selectedAddress() {\n        return this._addresses[0] || undefined;\n    }\n    /** @deprecated Use the chain ID. If you still need the network ID, use `.request({ method: 'net_version' })`. */\n    get networkVersion() {\n        return this.getChainId().toString(10);\n    }\n    /** @deprecated Use `.request({ method: 'eth_chainId' })` instead. */\n    get chainId() {\n        return (0, util_1.prepend0x)(this.getChainId().toString(16));\n    }\n    get isWalletLink() {\n        // backward compatibility\n        return true;\n    }\n    /**\n     * Some DApps (i.e. Alpha Homora) seem to require the window.ethereum object return\n     * true for this method.\n     */\n    get isMetaMask() {\n        return this._overrideIsMetaMask;\n    }\n    get host() {\n        return this.jsonRpcUrl;\n    }\n    get connected() {\n        return true;\n    }\n    isConnected() {\n        return true;\n    }\n    get jsonRpcUrl() {\n        var _a;\n        return ((_a = this._storage.getItem(DEFAULT_JSON_RPC_URL)) !== null && _a !== void 0 ? _a : this._jsonRpcUrlFromOpts);\n    }\n    set jsonRpcUrl(value) {\n        this._storage.setItem(DEFAULT_JSON_RPC_URL, value);\n    }\n    disableReloadOnDisconnect() {\n        this.reloadOnDisconnect = false;\n    }\n    /**\n     * this function is called when coinbase provider is being injected to a dapp\n     * standalone + walletlinked extension, ledger, in-app browser using cipher-web-view\n     */\n    setProviderInfo(jsonRpcUrl, chainId) {\n        // extension tend to use the chianId from the dapp, while in-app browser and ledger overrides the default network\n        if (!(this.isLedger || this.isCoinbaseBrowser)) {\n            this._chainIdFromOpts = chainId;\n            this._jsonRpcUrlFromOpts = jsonRpcUrl;\n        }\n        this.updateProviderInfo(this.jsonRpcUrl, this.getChainId());\n    }\n    updateProviderInfo(jsonRpcUrl, chainId) {\n        this.jsonRpcUrl = jsonRpcUrl;\n        // emit chainChanged event if necessary\n        const originalChainId = this.getChainId();\n        this._storage.setItem(DEFAULT_CHAIN_ID_KEY, chainId.toString(10));\n        const chainChanged = (0, util_1.ensureIntNumber)(chainId) !== originalChainId;\n        if (chainChanged || !this.hasMadeFirstChainChangedEmission) {\n            this.emit(\"chainChanged\", this.getChainId());\n            this.hasMadeFirstChainChangedEmission = true;\n        }\n    }\n    async watchAsset(type, address, symbol, decimals, image, chainId) {\n        const relay = await this.initializeRelay();\n        const result = await relay.watchAsset(type, address, symbol, decimals, image, chainId === null || chainId === void 0 ? void 0 : chainId.toString()).promise;\n        return !!result.result;\n    }\n    async addEthereumChain(chainId, rpcUrls, blockExplorerUrls, chainName, iconUrls, nativeCurrency) {\n        var _a, _b;\n        if ((0, util_1.ensureIntNumber)(chainId) === this.getChainId()) {\n            return false;\n        }\n        const relay = await this.initializeRelay();\n        const isWhitelistedNetworkOrStandalone = relay.inlineAddEthereumChain(chainId.toString());\n        if (!this._isAuthorized() && !isWhitelistedNetworkOrStandalone) {\n            await relay.requestEthereumAccounts().promise;\n        }\n        const res = await relay.addEthereumChain(chainId.toString(), rpcUrls, iconUrls, blockExplorerUrls, chainName, nativeCurrency).promise;\n        if (((_a = res.result) === null || _a === void 0 ? void 0 : _a.isApproved) === true) {\n            this.updateProviderInfo(rpcUrls[0], chainId);\n        }\n        return ((_b = res.result) === null || _b === void 0 ? void 0 : _b.isApproved) === true;\n    }\n    async switchEthereumChain(chainId) {\n        const relay = await this.initializeRelay();\n        const res = await relay.switchEthereumChain(chainId.toString(10), this.selectedAddress || undefined).promise;\n        // backward compatibility\n        if ((0, Web3Response_1.isErrorResponse)(res) && res.errorCode) {\n            if (res.errorCode === errors_1.standardErrorCodes.provider.unsupportedChain) {\n                throw errors_1.standardErrors.provider.unsupportedChain(chainId);\n            }\n            else {\n                throw errors_1.standardErrors.provider.custom({\n                    message: res.errorMessage,\n                    code: res.errorCode,\n                });\n            }\n        }\n        const switchResponse = res.result;\n        if (switchResponse.isApproved && switchResponse.rpcUrl.length > 0) {\n            this.updateProviderInfo(switchResponse.rpcUrl, chainId);\n        }\n    }\n    setAppInfo(appName, appLogoUrl) {\n        void this.initializeRelay().then(relay => relay.setAppInfo(appName, appLogoUrl));\n    }\n    /** @deprecated Use `.request({ method: 'eth_requestAccounts' })` instead. */\n    async enable() {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::enable\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay\n                ? Session_1.Session.hash(this._relay.session.id)\n                : undefined,\n        });\n        if (this._addresses.length > 0) {\n            return [...this._addresses];\n        }\n        return await this.send(JSONRPC_1.JSONRPCMethod.eth_requestAccounts);\n    }\n    async close() {\n        const relay = await this.initializeRelay();\n        relay.resetAndReload();\n    }\n    send(requestOrMethod, callbackOrParams) {\n        // send<T>(method, params): Promise<T>\n        try {\n            const result = this._send(requestOrMethod, callbackOrParams);\n            if (result instanceof Promise) {\n                return result.catch(error => {\n                    throw (0, errors_1.serializeError)(error, requestOrMethod);\n                });\n            }\n        }\n        catch (error) {\n            throw (0, errors_1.serializeError)(error, requestOrMethod);\n        }\n    }\n    _send(requestOrMethod, callbackOrParams) {\n        if (typeof requestOrMethod === \"string\") {\n            const method = requestOrMethod;\n            const params = Array.isArray(callbackOrParams)\n                ? callbackOrParams\n                : callbackOrParams !== undefined\n                    ? [callbackOrParams]\n                    : [];\n            const request = {\n                jsonrpc: \"2.0\",\n                id: 0,\n                method,\n                params,\n            };\n            return this._sendRequestAsync(request).then(res => res.result);\n        }\n        // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n        if (typeof callbackOrParams === \"function\") {\n            const request = requestOrMethod;\n            const callback = callbackOrParams;\n            return this._sendAsync(request, callback);\n        }\n        // send(JSONRPCRequest[]): JSONRPCResponse[]\n        if (Array.isArray(requestOrMethod)) {\n            const requests = requestOrMethod;\n            return requests.map(r => this._sendRequest(r));\n        }\n        // send(JSONRPCRequest): JSONRPCResponse\n        const req = requestOrMethod;\n        return this._sendRequest(req);\n    }\n    async sendAsync(request, callback) {\n        try {\n            return this._sendAsync(request, callback).catch(error => {\n                throw (0, errors_1.serializeError)(error, request);\n            });\n        }\n        catch (error) {\n            return Promise.reject((0, errors_1.serializeError)(error, request));\n        }\n    }\n    async _sendAsync(request, callback) {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"callback is required\");\n        }\n        // send(JSONRPCRequest[], callback): void\n        if (Array.isArray(request)) {\n            const arrayCb = callback;\n            this._sendMultipleRequestsAsync(request)\n                .then(responses => arrayCb(null, responses))\n                .catch(err => arrayCb(err, null));\n            return;\n        }\n        // send(JSONRPCRequest, callback): void\n        const cb = callback;\n        return this._sendRequestAsync(request)\n            .then(response => cb(null, response))\n            .catch(err => cb(err, null));\n    }\n    async request(args) {\n        try {\n            return this._request(args).catch(error => {\n                throw (0, errors_1.serializeError)(error, args.method);\n            });\n        }\n        catch (error) {\n            return Promise.reject((0, errors_1.serializeError)(error, args.method));\n        }\n    }\n    async _request(args) {\n        if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n            throw errors_1.standardErrors.rpc.invalidRequest({\n                message: \"Expected a single, non-array, object argument.\",\n                data: args,\n            });\n        }\n        const { method, params } = args;\n        if (typeof method !== \"string\" || method.length === 0) {\n            throw errors_1.standardErrors.rpc.invalidRequest({\n                message: \"'args.method' must be a non-empty string.\",\n                data: args,\n            });\n        }\n        if (params !== undefined &&\n            !Array.isArray(params) &&\n            (typeof params !== \"object\" || params === null)) {\n            throw errors_1.standardErrors.rpc.invalidRequest({\n                message: \"'args.params' must be an object or array if provided.\",\n                data: args,\n            });\n        }\n        const newParams = params === undefined ? [] : params;\n        // Coinbase Wallet Requests\n        const id = this._relayEventManager.makeRequestId();\n        const result = await this._sendRequestAsync({\n            method,\n            params: newParams,\n            jsonrpc: \"2.0\",\n            id,\n        });\n        return result.result;\n    }\n    async scanQRCode(match) {\n        var _a;\n        const relay = await this.initializeRelay();\n        const res = await relay.scanQRCode((0, util_1.ensureRegExpString)(match)).promise;\n        if (typeof res.result !== \"string\") {\n            throw (0, errors_1.serializeError)((_a = res.errorMessage) !== null && _a !== void 0 ? _a : \"result was not a string\", Web3Method_1.Web3Method.scanQRCode);\n        }\n        return res.result;\n    }\n    async genericRequest(data, action) {\n        var _a;\n        const relay = await this.initializeRelay();\n        const res = await relay.genericRequest(data, action).promise;\n        if (typeof res.result !== \"string\") {\n            throw (0, errors_1.serializeError)((_a = res.errorMessage) !== null && _a !== void 0 ? _a : \"result was not a string\", Web3Method_1.Web3Method.generic);\n        }\n        return res.result;\n    }\n    async selectProvider(providerOptions) {\n        var _a;\n        const relay = await this.initializeRelay();\n        const res = await relay.selectProvider(providerOptions).promise;\n        if (typeof res.result !== \"string\") {\n            throw (0, errors_1.serializeError)((_a = res.errorMessage) !== null && _a !== void 0 ? _a : \"result was not a string\", Web3Method_1.Web3Method.selectProvider);\n        }\n        return res.result;\n    }\n    supportsSubscriptions() {\n        return false;\n    }\n    subscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    unsubscribe() {\n        throw new Error(\"Subscriptions are not supported\");\n    }\n    disconnect() {\n        return true;\n    }\n    _sendRequest(request) {\n        const response = {\n            jsonrpc: \"2.0\",\n            id: request.id,\n        };\n        const { method } = request;\n        response.result = this._handleSynchronousMethods(request);\n        if (response.result === undefined) {\n            throw new Error(`Coinbase Wallet does not support calling ${method} synchronously without ` +\n                `a callback. Please provide a callback parameter to call ${method} ` +\n                `asynchronously.`);\n        }\n        return response;\n    }\n    _setAddresses(addresses, isDisconnect) {\n        if (!Array.isArray(addresses)) {\n            throw new Error(\"addresses is not an array\");\n        }\n        const newAddresses = addresses.map(address => (0, util_1.ensureAddressString)(address));\n        if (JSON.stringify(newAddresses) === JSON.stringify(this._addresses)) {\n            return;\n        }\n        if (this._addresses.length > 0 &&\n            this.supportsAddressSwitching === false &&\n            !isDisconnect) {\n            /**\n             * The extension currently doesn't support switching selected wallet index\n             * make sure walletlink doesn't update it's address in this case\n             */\n            return;\n        }\n        this._addresses = newAddresses;\n        this.emit(\"accountsChanged\", this._addresses);\n        this._storage.setItem(WalletSDKRelayAbstract_1.LOCAL_STORAGE_ADDRESSES_KEY, newAddresses.join(\" \"));\n    }\n    _sendRequestAsync(request) {\n        return new Promise((resolve, reject) => {\n            try {\n                const syncResult = this._handleSynchronousMethods(request);\n                if (syncResult !== undefined) {\n                    return resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: syncResult,\n                    });\n                }\n                const filterPromise = this._handleAsynchronousFilterMethods(request);\n                if (filterPromise !== undefined) {\n                    filterPromise\n                        .then(res => resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                        .catch(err => reject(err));\n                    return;\n                }\n                const subscriptionPromise = this._handleSubscriptionMethods(request);\n                if (subscriptionPromise !== undefined) {\n                    subscriptionPromise\n                        .then(res => resolve({\n                        jsonrpc: \"2.0\",\n                        id: request.id,\n                        result: res.result,\n                    }))\n                        .catch(err => reject(err));\n                    return;\n                }\n            }\n            catch (err) {\n                return reject(err);\n            }\n            this._handleAsynchronousMethods(request)\n                .then(res => res && resolve(Object.assign(Object.assign({}, res), { id: request.id })))\n                .catch(err => reject(err));\n        });\n    }\n    _sendMultipleRequestsAsync(requests) {\n        return Promise.all(requests.map(r => this._sendRequestAsync(r)));\n    }\n    _handleSynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_accounts:\n                return this._eth_accounts();\n            case JSONRPC_1.JSONRPCMethod.eth_coinbase:\n                return this._eth_coinbase();\n            case JSONRPC_1.JSONRPCMethod.eth_uninstallFilter:\n                return this._eth_uninstallFilter(params);\n            case JSONRPC_1.JSONRPCMethod.net_version:\n                return this._net_version();\n            case JSONRPC_1.JSONRPCMethod.eth_chainId:\n                return this._eth_chainId();\n            default:\n                return undefined;\n        }\n    }\n    async _handleAsynchronousMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_requestAccounts:\n                return this._eth_requestAccounts();\n            case JSONRPC_1.JSONRPCMethod.eth_sign:\n                return this._eth_sign(params);\n            case JSONRPC_1.JSONRPCMethod.eth_ecRecover:\n                return this._eth_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.personal_sign:\n                return this._personal_sign(params);\n            case JSONRPC_1.JSONRPCMethod.personal_ecRecover:\n                return this._personal_ecRecover(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTransaction:\n                return this._eth_signTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendRawTransaction:\n                return this._eth_sendRawTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_sendTransaction:\n                return this._eth_sendTransaction(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v1:\n                return this._eth_signTypedData_v1(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v2:\n                return this._throwUnsupportedMethodError();\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v3:\n                return this._eth_signTypedData_v3(params);\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData_v4:\n            case JSONRPC_1.JSONRPCMethod.eth_signTypedData:\n                return this._eth_signTypedData_v4(params);\n            case JSONRPC_1.JSONRPCMethod.cbWallet_arbitrary:\n                return this._cbwallet_arbitrary(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_addEthereumChain:\n                return this._wallet_addEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_switchEthereumChain:\n                return this._wallet_switchEthereumChain(params);\n            case JSONRPC_1.JSONRPCMethod.wallet_watchAsset:\n                return this._wallet_watchAsset(params);\n        }\n        const relay = await this.initializeRelay();\n        return relay.makeEthereumJSONRPCRequest(request, this.jsonRpcUrl);\n    }\n    _handleAsynchronousFilterMethods(request) {\n        const { method } = request;\n        const params = request.params || [];\n        switch (method) {\n            case JSONRPC_1.JSONRPCMethod.eth_newFilter:\n                return this._eth_newFilter(params);\n            case JSONRPC_1.JSONRPCMethod.eth_newBlockFilter:\n                return this._eth_newBlockFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_newPendingTransactionFilter:\n                return this._eth_newPendingTransactionFilter();\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterChanges:\n                return this._eth_getFilterChanges(params);\n            case JSONRPC_1.JSONRPCMethod.eth_getFilterLogs:\n                return this._eth_getFilterLogs(params);\n        }\n        return undefined;\n    }\n    _handleSubscriptionMethods(request) {\n        switch (request.method) {\n            case JSONRPC_1.JSONRPCMethod.eth_subscribe:\n            case JSONRPC_1.JSONRPCMethod.eth_unsubscribe:\n                return this._subscriptionManager.handleRequest(request);\n        }\n        return undefined;\n    }\n    _isKnownAddress(addressString) {\n        try {\n            const addressStr = (0, util_1.ensureAddressString)(addressString);\n            const lowercaseAddresses = this._addresses.map(address => (0, util_1.ensureAddressString)(address));\n            return lowercaseAddresses.includes(addressStr);\n        }\n        catch (_a) { }\n        return false;\n    }\n    _ensureKnownAddress(addressString) {\n        var _a;\n        if (!this._isKnownAddress(addressString)) {\n            (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.UNKNOWN_ADDRESS_ENCOUNTERED);\n            throw new Error(\"Unknown Ethereum address\");\n        }\n    }\n    _prepareTransactionParams(tx) {\n        const fromAddress = tx.from\n            ? (0, util_1.ensureAddressString)(tx.from)\n            : this.selectedAddress;\n        if (!fromAddress) {\n            throw new Error(\"Ethereum address is unavailable\");\n        }\n        this._ensureKnownAddress(fromAddress);\n        const toAddress = tx.to ? (0, util_1.ensureAddressString)(tx.to) : null;\n        const weiValue = tx.value != null ? (0, util_1.ensureBN)(tx.value) : new bn_js_1.default(0);\n        const data = tx.data ? (0, util_1.ensureBuffer)(tx.data) : Buffer.alloc(0);\n        const nonce = tx.nonce != null ? (0, util_1.ensureIntNumber)(tx.nonce) : null;\n        const gasPriceInWei = tx.gasPrice != null ? (0, util_1.ensureBN)(tx.gasPrice) : null;\n        const maxFeePerGas = tx.maxFeePerGas != null ? (0, util_1.ensureBN)(tx.maxFeePerGas) : null;\n        const maxPriorityFeePerGas = tx.maxPriorityFeePerGas != null\n            ? (0, util_1.ensureBN)(tx.maxPriorityFeePerGas)\n            : null;\n        const gasLimit = tx.gas != null ? (0, util_1.ensureBN)(tx.gas) : null;\n        const chainId = this.getChainId();\n        return {\n            fromAddress,\n            toAddress,\n            weiValue,\n            data,\n            nonce,\n            gasPriceInWei,\n            maxFeePerGas,\n            maxPriorityFeePerGas,\n            gasLimit,\n            chainId,\n        };\n    }\n    _isAuthorized() {\n        return this._addresses.length > 0;\n    }\n    _requireAuthorization() {\n        if (!this._isAuthorized()) {\n            throw errors_1.standardErrors.provider.unauthorized({});\n        }\n    }\n    _throwUnsupportedMethodError() {\n        throw errors_1.standardErrors.provider.unsupportedMethod({});\n    }\n    async _signEthereumMessage(message, address, addPrefix, typedDataJson) {\n        this._ensureKnownAddress(address);\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumMessage(message, address, addPrefix, typedDataJson).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied message signature\");\n            }\n            throw err;\n        }\n    }\n    async _ethereumAddressFromSignedMessage(message, signature, addPrefix) {\n        const relay = await this.initializeRelay();\n        const res = await relay.ethereumAddressFromSignedMessage(message, signature, addPrefix).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    _eth_accounts() {\n        return [...this._addresses];\n    }\n    _eth_coinbase() {\n        return this.selectedAddress || null;\n    }\n    _net_version() {\n        return this.getChainId().toString(10);\n    }\n    _eth_chainId() {\n        return (0, util_1.hexStringFromIntNumber)(this.getChainId());\n    }\n    getChainId() {\n        const chainIdStr = this._storage.getItem(DEFAULT_CHAIN_ID_KEY);\n        if (!chainIdStr) {\n            return (0, util_1.ensureIntNumber)(this._chainIdFromOpts);\n        }\n        const chainId = parseInt(chainIdStr, 10);\n        return (0, util_1.ensureIntNumber)(chainId);\n    }\n    async _eth_requestAccounts() {\n        var _a;\n        (_a = this.diagnostic) === null || _a === void 0 ? void 0 : _a.log(DiagnosticLogger_1.EVENTS.ETH_ACCOUNTS_STATE, {\n            method: \"provider::_eth_requestAccounts\",\n            addresses_length: this._addresses.length,\n            sessionIdHash: this._relay\n                ? Session_1.Session.hash(this._relay.session.id)\n                : undefined,\n        });\n        if (this._addresses.length > 0) {\n            return Promise.resolve({\n                jsonrpc: \"2.0\",\n                id: 0,\n                result: this._addresses,\n            });\n        }\n        let res;\n        try {\n            const relay = await this.initializeRelay();\n            res = await relay.requestEthereumAccounts().promise;\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied account authorization\");\n            }\n            throw err;\n        }\n        if (!res.result) {\n            throw new Error(\"accounts received is empty\");\n        }\n        this._setAddresses(res.result);\n        if (!(this.isLedger || this.isCoinbaseBrowser)) {\n            await this.switchEthereumChain(this.getChainId());\n        }\n        return { jsonrpc: \"2.0\", id: 0, result: this._addresses };\n    }\n    _eth_sign(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const message = (0, util_1.ensureBuffer)(params[1]);\n        return this._signEthereumMessage(message, address, false);\n    }\n    _eth_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, false);\n    }\n    _personal_sign(params) {\n        this._requireAuthorization();\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        return this._signEthereumMessage(message, address, true);\n    }\n    _personal_ecRecover(params) {\n        const message = (0, util_1.ensureBuffer)(params[0]);\n        const signature = (0, util_1.ensureBuffer)(params[1]);\n        return this._ethereumAddressFromSignedMessage(message, signature, true);\n    }\n    async _eth_signTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_sendRawTransaction(params) {\n        const signedTransaction = (0, util_1.ensureBuffer)(params[0]);\n        const relay = await this.initializeRelay();\n        const res = await relay.submitEthereumTransaction(signedTransaction, this.getChainId()).promise;\n        return { jsonrpc: \"2.0\", id: 0, result: res.result };\n    }\n    async _eth_sendTransaction(params) {\n        this._requireAuthorization();\n        const tx = this._prepareTransactionParams(params[0] || {});\n        try {\n            const relay = await this.initializeRelay();\n            const res = await relay.signAndSubmitEthereumTransaction(tx).promise;\n            return { jsonrpc: \"2.0\", id: 0, result: res.result };\n        }\n        catch (err) {\n            if (typeof err.message === \"string\" &&\n                err.message.match(/(denied|rejected)/i)) {\n                throw errors_1.standardErrors.provider.userRejectedRequest(\"User denied transaction signature\");\n            }\n            throw err;\n        }\n    }\n    async _eth_signTypedData_v1(params) {\n        this._requireAuthorization();\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[0]);\n        const address = (0, util_1.ensureAddressString)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedDataLegacy({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v3(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v3({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    async _eth_signTypedData_v4(params) {\n        this._requireAuthorization();\n        const address = (0, util_1.ensureAddressString)(params[0]);\n        const typedData = (0, util_1.ensureParsedJSONObject)(params[1]);\n        this._ensureKnownAddress(address);\n        const message = eth_eip712_util_1.default.hashForSignTypedData_v4({ data: typedData });\n        const typedDataJSON = JSON.stringify(typedData, null, 2);\n        return this._signEthereumMessage(message, address, false, typedDataJSON);\n    }\n    /** @deprecated */\n    async _cbwallet_arbitrary(params) {\n        const action = params[0];\n        const data = params[1];\n        if (typeof data !== \"string\") {\n            throw new Error(\"parameter must be a string\");\n        }\n        if (typeof action !== \"object\" || action === null) {\n            throw new Error(\"parameter must be an object\");\n        }\n        const result = await this.genericRequest(action, data);\n        return { jsonrpc: \"2.0\", id: 0, result };\n    }\n    async _wallet_addEthereumChain(params) {\n        var _a, _b, _c, _d;\n        const request = params[0];\n        if (((_a = request.rpcUrls) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `please pass in at least 1 rpcUrl` },\n            };\n        }\n        if (!request.chainName || request.chainName.trim() === \"\") {\n            throw errors_1.standardErrors.rpc.invalidParams(\"chainName is a required field\");\n        }\n        if (!request.nativeCurrency) {\n            throw errors_1.standardErrors.rpc.invalidParams(\"nativeCurrency is a required field\");\n        }\n        const chainIdNumber = parseInt(request.chainId, 16);\n        const success = await this.addEthereumChain(chainIdNumber, (_b = request.rpcUrls) !== null && _b !== void 0 ? _b : [], (_c = request.blockExplorerUrls) !== null && _c !== void 0 ? _c : [], request.chainName, (_d = request.iconUrls) !== null && _d !== void 0 ? _d : [], request.nativeCurrency);\n        if (success) {\n            return { jsonrpc: \"2.0\", id: 0, result: null };\n        }\n        else {\n            return {\n                jsonrpc: \"2.0\",\n                id: 0,\n                error: { code: 2, message: `unable to add ethereum chain` },\n            };\n        }\n    }\n    async _wallet_switchEthereumChain(params) {\n        const request = params[0];\n        await this.switchEthereumChain(parseInt(request.chainId, 16));\n        return { jsonrpc: \"2.0\", id: 0, result: null };\n    }\n    async _wallet_watchAsset(params) {\n        const request = (Array.isArray(params) ? params[0] : params);\n        if (!request.type) {\n            throw errors_1.standardErrors.rpc.invalidParams(\"Type is required\");\n        }\n        if ((request === null || request === void 0 ? void 0 : request.type) !== \"ERC20\") {\n            throw errors_1.standardErrors.rpc.invalidParams(`Asset of type '${request.type}' is not supported`);\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options)) {\n            throw errors_1.standardErrors.rpc.invalidParams(\"Options are required\");\n        }\n        if (!(request === null || request === void 0 ? void 0 : request.options.address)) {\n            throw errors_1.standardErrors.rpc.invalidParams(\"Address is required\");\n        }\n        const chainId = this.getChainId();\n        const { address, symbol, image, decimals } = request.options;\n        const res = await this.watchAsset(request.type, address, symbol, decimals, image, chainId);\n        return { jsonrpc: \"2.0\", id: 0, result: res };\n    }\n    _eth_uninstallFilter(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.uninstallFilter(filterId);\n    }\n    async _eth_newFilter(params) {\n        const param = params[0];\n        const filterId = await this._filterPolyfill.newFilter(param);\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newBlockFilter() {\n        const filterId = await this._filterPolyfill.newBlockFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    async _eth_newPendingTransactionFilter() {\n        const filterId = await this._filterPolyfill.newPendingTransactionFilter();\n        return { jsonrpc: \"2.0\", id: 0, result: filterId };\n    }\n    _eth_getFilterChanges(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterChanges(filterId);\n    }\n    _eth_getFilterLogs(params) {\n        const filterId = (0, util_1.ensureHexString)(params[0]);\n        return this._filterPolyfill.getFilterLogs(filterId);\n    }\n    initializeRelay() {\n        if (this._relay) {\n            return Promise.resolve(this._relay);\n        }\n        return this._relayProvider().then(relay => {\n            relay.setAccountsCallback((accounts, isDisconnect) => this._setAddresses(accounts, isDisconnect));\n            relay.setChainCallback((chainId, jsonRpcUrl) => {\n                this.updateProviderInfo(jsonRpcUrl, parseInt(chainId, 10));\n            });\n            relay.setDappDefaultChainCallback(this._chainIdFromOpts);\n            this._relay = relay;\n            return relay;\n        });\n    }\n}\nexports.CoinbaseWalletProvider = CoinbaseWalletProvider;\n"],"mappings":"AAAA,YAAY;;AACZ;AACA;AAAA,IAAAA,kBAAA,GAAAC,OAAA;AAAA,IAAAC,iBAAA,GAAAD,OAAA;AAAA,IAAAE,eAAA,GAAAF,OAAA;AAAA,IAAAG,YAAA,GAAAH,OAAA;AAAA,IAAAI,sBAAA,GAAAJ,OAAA;AAAA,IAAAK,SAAA,GAAAL,OAAA;AAAA,IAAAM,YAAA,GAAAN,OAAA;AAAA,SAAAO,oBAAA,kBADA,qJAAAA,mBAAA,YAAAA,oBAAA,WAAAC,OAAA,SAAAA,OAAA,OAAAC,EAAA,GAAAC,MAAA,CAAAC,SAAA,EAAAC,MAAA,GAAAH,EAAA,CAAAI,cAAA,EAAAC,cAAA,GAAAJ,MAAA,CAAAI,cAAA,cAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA,IAAAF,GAAA,CAAAC,GAAA,IAAAC,IAAA,CAAAC,KAAA,KAAAC,OAAA,wBAAAC,MAAA,GAAAA,MAAA,OAAAC,cAAA,GAAAF,OAAA,CAAAG,QAAA,kBAAAC,mBAAA,GAAAJ,OAAA,CAAAK,aAAA,uBAAAC,iBAAA,GAAAN,OAAA,CAAAO,WAAA,8BAAAC,OAAAZ,GAAA,EAAAC,GAAA,EAAAE,KAAA,WAAAR,MAAA,CAAAI,cAAA,CAAAC,GAAA,EAAAC,GAAA,IAAAE,KAAA,EAAAA,KAAA,EAAAU,UAAA,MAAAC,YAAA,MAAAC,QAAA,SAAAf,GAAA,CAAAC,GAAA,WAAAW,MAAA,mBAAAI,GAAA,IAAAJ,MAAA,YAAAA,OAAAZ,GAAA,EAAAC,GAAA,EAAAE,KAAA,WAAAH,GAAA,CAAAC,GAAA,IAAAE,KAAA,gBAAAc,KAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,QAAAC,cAAA,GAAAH,OAAA,IAAAA,OAAA,CAAAvB,SAAA,YAAA2B,SAAA,GAAAJ,OAAA,GAAAI,SAAA,EAAAC,SAAA,GAAA7B,MAAA,CAAA8B,MAAA,CAAAH,cAAA,CAAA1B,SAAA,GAAA8B,OAAA,OAAAC,OAAA,CAAAN,WAAA,gBAAAtB,cAAA,CAAAyB,SAAA,eAAArB,KAAA,EAAAyB,gBAAA,CAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA,MAAAF,SAAA,aAAAK,SAAAC,EAAA,EAAA9B,GAAA,EAAA+B,GAAA,mBAAAC,IAAA,YAAAD,GAAA,EAAAD,EAAA,CAAAG,IAAA,CAAAjC,GAAA,EAAA+B,GAAA,cAAAf,GAAA,aAAAgB,IAAA,WAAAD,GAAA,EAAAf,GAAA,QAAAvB,OAAA,CAAAwB,IAAA,GAAAA,IAAA,MAAAiB,gBAAA,gBAAAX,UAAA,cAAAY,kBAAA,cAAAC,2BAAA,SAAAC,iBAAA,OAAAzB,MAAA,CAAAyB,iBAAA,EAAA/B,cAAA,qCAAAgC,QAAA,GAAA3C,MAAA,CAAA4C,cAAA,EAAAC,uBAAA,GAAAF,QAAA,IAAAA,QAAA,CAAAA,QAAA,CAAAG,MAAA,QAAAD,uBAAA,IAAAA,uBAAA,KAAA9C,EAAA,IAAAG,MAAA,CAAAoC,IAAA,CAAAO,uBAAA,EAAAlC,cAAA,MAAA+B,iBAAA,GAAAG,uBAAA,OAAAE,EAAA,GAAAN,0BAAA,CAAAxC,SAAA,GAAA2B,SAAA,CAAA3B,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAY,iBAAA,YAAAM,sBAAA/C,SAAA,gCAAAgD,OAAA,WAAAC,MAAA,IAAAjC,MAAA,CAAAhB,SAAA,EAAAiD,MAAA,YAAAd,GAAA,gBAAAe,OAAA,CAAAD,MAAA,EAAAd,GAAA,sBAAAgB,cAAAvB,SAAA,EAAAwB,WAAA,aAAAC,OAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA,QAAAC,MAAA,GAAAvB,QAAA,CAAAL,SAAA,CAAAqB,MAAA,GAAArB,SAAA,EAAAO,GAAA,mBAAAqB,MAAA,CAAApB,IAAA,QAAAqB,MAAA,GAAAD,MAAA,CAAArB,GAAA,EAAA5B,KAAA,GAAAkD,MAAA,CAAAlD,KAAA,SAAAA,KAAA,uBAAAA,KAAA,IAAAN,MAAA,CAAAoC,IAAA,CAAA9B,KAAA,eAAA6C,WAAA,CAAAE,OAAA,CAAA/C,KAAA,CAAAmD,OAAA,EAAAC,IAAA,WAAApD,KAAA,IAAA8C,MAAA,SAAA9C,KAAA,EAAA+C,OAAA,EAAAC,MAAA,gBAAAnC,GAAA,IAAAiC,MAAA,UAAAjC,GAAA,EAAAkC,OAAA,EAAAC,MAAA,QAAAH,WAAA,CAAAE,OAAA,CAAA/C,KAAA,EAAAoD,IAAA,WAAAC,SAAA,IAAAH,MAAA,CAAAlD,KAAA,GAAAqD,SAAA,EAAAN,OAAA,CAAAG,MAAA,gBAAAI,KAAA,WAAAR,MAAA,UAAAQ,KAAA,EAAAP,OAAA,EAAAC,MAAA,SAAAA,MAAA,CAAAC,MAAA,CAAArB,GAAA,SAAA2B,eAAA,EAAA3D,cAAA,oBAAAI,KAAA,WAAAA,MAAA0C,MAAA,EAAAd,GAAA,aAAA4B,2BAAA,eAAAX,WAAA,WAAAE,OAAA,EAAAC,MAAA,IAAAF,MAAA,CAAAJ,MAAA,EAAAd,GAAA,EAAAmB,OAAA,EAAAC,MAAA,gBAAAO,eAAA,GAAAA,eAAA,GAAAA,eAAA,CAAAH,IAAA,CAAAI,0BAAA,EAAAA,0BAAA,IAAAA,0BAAA,qBAAA/B,iBAAAV,OAAA,EAAAE,IAAA,EAAAM,OAAA,QAAAkC,KAAA,sCAAAf,MAAA,EAAAd,GAAA,wBAAA6B,KAAA,YAAAC,KAAA,sDAAAD,KAAA,oBAAAf,MAAA,QAAAd,GAAA,SAAA+B,UAAA,WAAApC,OAAA,CAAAmB,MAAA,GAAAA,MAAA,EAAAnB,OAAA,CAAAK,GAAA,GAAAA,GAAA,UAAAgC,QAAA,GAAArC,OAAA,CAAAqC,QAAA,MAAAA,QAAA,QAAAC,cAAA,GAAAC,mBAAA,CAAAF,QAAA,EAAArC,OAAA,OAAAsC,cAAA,QAAAA,cAAA,KAAA9B,gBAAA,mBAAA8B,cAAA,qBAAAtC,OAAA,CAAAmB,MAAA,EAAAnB,OAAA,CAAAwC,IAAA,GAAAxC,OAAA,CAAAyC,KAAA,GAAAzC,OAAA,CAAAK,GAAA,sBAAAL,OAAA,CAAAmB,MAAA,6BAAAe,KAAA,QAAAA,KAAA,gBAAAlC,OAAA,CAAAK,GAAA,EAAAL,OAAA,CAAA0C,iBAAA,CAAA1C,OAAA,CAAAK,GAAA,uBAAAL,OAAA,CAAAmB,MAAA,IAAAnB,OAAA,CAAA2C,MAAA,WAAA3C,OAAA,CAAAK,GAAA,GAAA6B,KAAA,oBAAAR,MAAA,GAAAvB,QAAA,CAAAX,OAAA,EAAAE,IAAA,EAAAM,OAAA,oBAAA0B,MAAA,CAAApB,IAAA,QAAA4B,KAAA,GAAAlC,OAAA,CAAA4C,IAAA,mCAAAlB,MAAA,CAAArB,GAAA,KAAAG,gBAAA,qBAAA/B,KAAA,EAAAiD,MAAA,CAAArB,GAAA,EAAAuC,IAAA,EAAA5C,OAAA,CAAA4C,IAAA,kBAAAlB,MAAA,CAAApB,IAAA,KAAA4B,KAAA,gBAAAlC,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,mBAAAkC,oBAAAF,QAAA,EAAArC,OAAA,QAAA6C,UAAA,GAAA7C,OAAA,CAAAmB,MAAA,EAAAA,MAAA,GAAAkB,QAAA,CAAAxD,QAAA,CAAAgE,UAAA,OAAAC,SAAA,KAAA3B,MAAA,SAAAnB,OAAA,CAAAqC,QAAA,qBAAAQ,UAAA,IAAAR,QAAA,CAAAxD,QAAA,CAAAkE,MAAA,KAAA/C,OAAA,CAAAmB,MAAA,aAAAnB,OAAA,CAAAK,GAAA,GAAAyC,SAAA,EAAAP,mBAAA,CAAAF,QAAA,EAAArC,OAAA,eAAAA,OAAA,CAAAmB,MAAA,kBAAA0B,UAAA,KAAA7C,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA2C,SAAA,uCAAAH,UAAA,iBAAArC,gBAAA,MAAAkB,MAAA,GAAAvB,QAAA,CAAAgB,MAAA,EAAAkB,QAAA,CAAAxD,QAAA,EAAAmB,OAAA,CAAAK,GAAA,mBAAAqB,MAAA,CAAApB,IAAA,SAAAN,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,GAAAqB,MAAA,CAAArB,GAAA,EAAAL,OAAA,CAAAqC,QAAA,SAAA7B,gBAAA,MAAAyC,IAAA,GAAAvB,MAAA,CAAArB,GAAA,SAAA4C,IAAA,GAAAA,IAAA,CAAAL,IAAA,IAAA5C,OAAA,CAAAqC,QAAA,CAAAa,UAAA,IAAAD,IAAA,CAAAxE,KAAA,EAAAuB,OAAA,CAAAmD,IAAA,GAAAd,QAAA,CAAAe,OAAA,eAAApD,OAAA,CAAAmB,MAAA,KAAAnB,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAAyC,SAAA,GAAA9C,OAAA,CAAAqC,QAAA,SAAA7B,gBAAA,IAAAyC,IAAA,IAAAjD,OAAA,CAAAmB,MAAA,YAAAnB,OAAA,CAAAK,GAAA,OAAA2C,SAAA,sCAAAhD,OAAA,CAAAqC,QAAA,SAAA7B,gBAAA,cAAA6C,aAAAC,IAAA,QAAAC,KAAA,KAAAC,MAAA,EAAAF,IAAA,YAAAA,IAAA,KAAAC,KAAA,CAAAE,QAAA,GAAAH,IAAA,WAAAA,IAAA,KAAAC,KAAA,CAAAG,UAAA,GAAAJ,IAAA,KAAAC,KAAA,CAAAI,QAAA,GAAAL,IAAA,WAAAM,UAAA,CAAAC,IAAA,CAAAN,KAAA,cAAAO,cAAAP,KAAA,QAAA7B,MAAA,GAAA6B,KAAA,CAAAQ,UAAA,QAAArC,MAAA,CAAApB,IAAA,oBAAAoB,MAAA,CAAArB,GAAA,EAAAkD,KAAA,CAAAQ,UAAA,GAAArC,MAAA,aAAAzB,QAAAN,WAAA,SAAAiE,UAAA,MAAAJ,MAAA,aAAA7D,WAAA,CAAAuB,OAAA,CAAAmC,YAAA,cAAAW,KAAA,iBAAAjD,OAAAkD,QAAA,QAAAA,QAAA,QAAAC,cAAA,GAAAD,QAAA,CAAArF,cAAA,OAAAsF,cAAA,SAAAA,cAAA,CAAA3D,IAAA,CAAA0D,QAAA,4BAAAA,QAAA,CAAAd,IAAA,SAAAc,QAAA,OAAAE,KAAA,CAAAF,QAAA,CAAAG,MAAA,SAAAC,CAAA,OAAAlB,IAAA,YAAAA,KAAA,aAAAkB,CAAA,GAAAJ,QAAA,CAAAG,MAAA,OAAAjG,MAAA,CAAAoC,IAAA,CAAA0D,QAAA,EAAAI,CAAA,UAAAlB,IAAA,CAAA1E,KAAA,GAAAwF,QAAA,CAAAI,CAAA,GAAAlB,IAAA,CAAAP,IAAA,OAAAO,IAAA,SAAAA,IAAA,CAAA1E,KAAA,GAAAqE,SAAA,EAAAK,IAAA,CAAAP,IAAA,OAAAO,IAAA,YAAAA,IAAA,CAAAA,IAAA,GAAAA,IAAA,eAAAA,IAAA,EAAAf,UAAA,eAAAA,WAAA,aAAA3D,KAAA,EAAAqE,SAAA,EAAAF,IAAA,iBAAAnC,iBAAA,CAAAvC,SAAA,GAAAwC,0BAAA,EAAArC,cAAA,CAAA2C,EAAA,mBAAAvC,KAAA,EAAAiC,0BAAA,EAAAtB,YAAA,SAAAf,cAAA,CAAAqC,0BAAA,mBAAAjC,KAAA,EAAAgC,iBAAA,EAAArB,YAAA,SAAAqB,iBAAA,CAAA6D,WAAA,GAAApF,MAAA,CAAAwB,0BAAA,EAAA1B,iBAAA,wBAAAjB,OAAA,CAAAwG,mBAAA,aAAAC,MAAA,QAAAC,IAAA,wBAAAD,MAAA,IAAAA,MAAA,CAAAE,WAAA,WAAAD,IAAA,KAAAA,IAAA,KAAAhE,iBAAA,6BAAAgE,IAAA,CAAAH,WAAA,IAAAG,IAAA,CAAAE,IAAA,OAAA5G,OAAA,CAAA6G,IAAA,aAAAJ,MAAA,WAAAvG,MAAA,CAAA4G,cAAA,GAAA5G,MAAA,CAAA4G,cAAA,CAAAL,MAAA,EAAA9D,0BAAA,KAAA8D,MAAA,CAAAM,SAAA,GAAApE,0BAAA,EAAAxB,MAAA,CAAAsF,MAAA,EAAAxF,iBAAA,yBAAAwF,MAAA,CAAAtG,SAAA,GAAAD,MAAA,CAAA8B,MAAA,CAAAiB,EAAA,GAAAwD,MAAA,KAAAzG,OAAA,CAAAgH,KAAA,aAAA1E,GAAA,aAAAuB,OAAA,EAAAvB,GAAA,OAAAY,qBAAA,CAAAI,aAAA,CAAAnD,SAAA,GAAAgB,MAAA,CAAAmC,aAAA,CAAAnD,SAAA,EAAAY,mBAAA,iCAAAf,OAAA,CAAAsD,aAAA,GAAAA,aAAA,EAAAtD,OAAA,CAAAiH,KAAA,aAAAxF,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,EAAA2B,WAAA,eAAAA,WAAA,KAAAA,WAAA,GAAA2D,OAAA,OAAAC,IAAA,OAAA7D,aAAA,CAAA9B,IAAA,CAAAC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,WAAA,GAAA2B,WAAA,UAAAvD,OAAA,CAAAwG,mBAAA,CAAA9E,OAAA,IAAAyF,IAAA,GAAAA,IAAA,CAAA/B,IAAA,GAAAtB,IAAA,WAAAF,MAAA,WAAAA,MAAA,CAAAiB,IAAA,GAAAjB,MAAA,CAAAlD,KAAA,GAAAyG,IAAA,CAAA/B,IAAA,WAAAlC,qBAAA,CAAAD,EAAA,GAAA9B,MAAA,CAAA8B,EAAA,EAAAhC,iBAAA,gBAAAE,MAAA,CAAA8B,EAAA,EAAApC,cAAA,iCAAAM,MAAA,CAAA8B,EAAA,6DAAAjD,OAAA,CAAAoH,IAAA,aAAAC,GAAA,QAAAC,MAAA,GAAApH,MAAA,CAAAmH,GAAA,GAAAD,IAAA,gBAAA5G,GAAA,IAAA8G,MAAA,EAAAF,IAAA,CAAAtB,IAAA,CAAAtF,GAAA,UAAA4G,IAAA,CAAAG,OAAA,aAAAnC,KAAA,WAAAgC,IAAA,CAAAf,MAAA,SAAA7F,GAAA,GAAA4G,IAAA,CAAAI,GAAA,QAAAhH,GAAA,IAAA8G,MAAA,SAAAlC,IAAA,CAAA1E,KAAA,GAAAF,GAAA,EAAA4E,IAAA,CAAAP,IAAA,OAAAO,IAAA,WAAAA,IAAA,CAAAP,IAAA,OAAAO,IAAA,QAAApF,OAAA,CAAAgD,MAAA,GAAAA,MAAA,EAAAd,OAAA,CAAA/B,SAAA,KAAAwG,WAAA,EAAAzE,OAAA,EAAA+D,KAAA,WAAAA,MAAAwB,aAAA,aAAAC,IAAA,WAAAtC,IAAA,WAAAX,IAAA,QAAAC,KAAA,GAAAK,SAAA,OAAAF,IAAA,YAAAP,QAAA,cAAAlB,MAAA,gBAAAd,GAAA,GAAAyC,SAAA,OAAAc,UAAA,CAAA1C,OAAA,CAAA4C,aAAA,IAAA0B,aAAA,WAAAb,IAAA,kBAAAA,IAAA,CAAAe,MAAA,OAAAvH,MAAA,CAAAoC,IAAA,OAAAoE,IAAA,MAAAR,KAAA,EAAAQ,IAAA,CAAAgB,KAAA,cAAAhB,IAAA,IAAA7B,SAAA,MAAA8C,IAAA,WAAAA,KAAA,SAAAhD,IAAA,WAAAiD,UAAA,QAAAjC,UAAA,IAAAG,UAAA,kBAAA8B,UAAA,CAAAvF,IAAA,QAAAuF,UAAA,CAAAxF,GAAA,cAAAyF,IAAA,KAAApD,iBAAA,WAAAA,kBAAAqD,SAAA,aAAAnD,IAAA,QAAAmD,SAAA,MAAA/F,OAAA,kBAAAgG,OAAAC,GAAA,EAAAC,MAAA,WAAAxE,MAAA,CAAApB,IAAA,YAAAoB,MAAA,CAAArB,GAAA,GAAA0F,SAAA,EAAA/F,OAAA,CAAAmD,IAAA,GAAA8C,GAAA,EAAAC,MAAA,KAAAlG,OAAA,CAAAmB,MAAA,WAAAnB,OAAA,CAAAK,GAAA,GAAAyC,SAAA,KAAAoD,MAAA,aAAA7B,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,GAAA3C,MAAA,GAAA6B,KAAA,CAAAQ,UAAA,iBAAAR,KAAA,CAAAC,MAAA,SAAAwC,MAAA,aAAAzC,KAAA,CAAAC,MAAA,SAAAiC,IAAA,QAAAU,QAAA,GAAAhI,MAAA,CAAAoC,IAAA,CAAAgD,KAAA,eAAA6C,UAAA,GAAAjI,MAAA,CAAAoC,IAAA,CAAAgD,KAAA,qBAAA4C,QAAA,IAAAC,UAAA,aAAAX,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA,gBAAAgC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA,cAAAyC,QAAA,aAAAV,IAAA,GAAAlC,KAAA,CAAAE,QAAA,SAAAuC,MAAA,CAAAzC,KAAA,CAAAE,QAAA,qBAAA2C,UAAA,YAAAjE,KAAA,qDAAAsD,IAAA,GAAAlC,KAAA,CAAAG,UAAA,SAAAsC,MAAA,CAAAzC,KAAA,CAAAG,UAAA,YAAAf,MAAA,WAAAA,OAAArC,IAAA,EAAAD,GAAA,aAAAgE,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAC,MAAA,SAAAiC,IAAA,IAAAtH,MAAA,CAAAoC,IAAA,CAAAgD,KAAA,wBAAAkC,IAAA,GAAAlC,KAAA,CAAAG,UAAA,QAAA2C,YAAA,GAAA9C,KAAA,aAAA8C,YAAA,iBAAA/F,IAAA,mBAAAA,IAAA,KAAA+F,YAAA,CAAA7C,MAAA,IAAAnD,GAAA,IAAAA,GAAA,IAAAgG,YAAA,CAAA3C,UAAA,KAAA2C,YAAA,cAAA3E,MAAA,GAAA2E,YAAA,GAAAA,YAAA,CAAAtC,UAAA,cAAArC,MAAA,CAAApB,IAAA,GAAAA,IAAA,EAAAoB,MAAA,CAAArB,GAAA,GAAAA,GAAA,EAAAgG,YAAA,SAAAlF,MAAA,gBAAAgC,IAAA,GAAAkD,YAAA,CAAA3C,UAAA,EAAAlD,gBAAA,SAAA8F,QAAA,CAAA5E,MAAA,MAAA4E,QAAA,WAAAA,SAAA5E,MAAA,EAAAiC,QAAA,oBAAAjC,MAAA,CAAApB,IAAA,QAAAoB,MAAA,CAAArB,GAAA,qBAAAqB,MAAA,CAAApB,IAAA,mBAAAoB,MAAA,CAAApB,IAAA,QAAA6C,IAAA,GAAAzB,MAAA,CAAArB,GAAA,gBAAAqB,MAAA,CAAApB,IAAA,SAAAwF,IAAA,QAAAzF,GAAA,GAAAqB,MAAA,CAAArB,GAAA,OAAAc,MAAA,kBAAAgC,IAAA,yBAAAzB,MAAA,CAAApB,IAAA,IAAAqD,QAAA,UAAAR,IAAA,GAAAQ,QAAA,GAAAnD,gBAAA,KAAA+F,MAAA,WAAAA,OAAA7C,UAAA,aAAAW,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAG,UAAA,KAAAA,UAAA,cAAA4C,QAAA,CAAA/C,KAAA,CAAAQ,UAAA,EAAAR,KAAA,CAAAI,QAAA,GAAAG,aAAA,CAAAP,KAAA,GAAA/C,gBAAA,OAAAgG,KAAA,WAAAC,OAAAjD,MAAA,aAAAa,CAAA,QAAAT,UAAA,CAAAQ,MAAA,MAAAC,CAAA,SAAAA,CAAA,QAAAd,KAAA,QAAAK,UAAA,CAAAS,CAAA,OAAAd,KAAA,CAAAC,MAAA,KAAAA,MAAA,QAAA9B,MAAA,GAAA6B,KAAA,CAAAQ,UAAA,kBAAArC,MAAA,CAAApB,IAAA,QAAAoG,MAAA,GAAAhF,MAAA,CAAArB,GAAA,EAAAyD,aAAA,CAAAP,KAAA,YAAAmD,MAAA,gBAAAvE,KAAA,8BAAAwE,aAAA,WAAAA,cAAA1C,QAAA,EAAAf,UAAA,EAAAE,OAAA,gBAAAf,QAAA,KAAAxD,QAAA,EAAAkC,MAAA,CAAAkD,QAAA,GAAAf,UAAA,EAAAA,UAAA,EAAAE,OAAA,EAAAA,OAAA,oBAAAjC,MAAA,UAAAd,GAAA,GAAAyC,SAAA,GAAAtC,gBAAA,OAAAzC,OAAA;AAEA,IAAI6I,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACD5I,MAAM,CAACI,cAAc,CAACN,OAAO,EAAE,YAAY,EAAE;EAAEU,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DV,OAAO,CAACgJ,sBAAsB,GAAG,KAAK,CAAC;AACvC,IAAMC,oBAAoB,GAAGJ,eAAe,CAACrJ,OAAO,CAAC,8BAA8B,CAAC,CAAC;AACrF,IAAM0J,OAAO,GAAGL,eAAe,CAACrJ,OAAO,CAAC,OAAO,CAAC,CAAC;AACjD,IAAM2J,kBAAkB,GAAG3J,OAAO,CAAC,gCAAgC,CAAC;AACpE,IAAM4J,QAAQ,GAAG5J,OAAO,CAAC,WAAW,CAAC;AACrC,IAAM6J,SAAS,GAAG7J,OAAO,CAAC,kBAAkB,CAAC;AAC7C,IAAM8J,wBAAwB,GAAG9J,OAAO,CAAC,iCAAiC,CAAC;AAC3E,IAAM+J,YAAY,GAAG/J,OAAO,CAAC,qBAAqB,CAAC;AACnD,IAAMgK,cAAc,GAAGhK,OAAO,CAAC,uBAAuB,CAAC;AACvD,IAAMiK,MAAM,GAAGjK,OAAO,CAAC,SAAS,CAAC;AACjC,IAAMkK,iBAAiB,GAAGb,eAAe,CAACrJ,OAAO,CAAC,8BAA8B,CAAC,CAAC;AAClF,IAAMmK,gBAAgB,GAAGnK,OAAO,CAAC,kBAAkB,CAAC;AACpD,IAAMoK,SAAS,GAAGpK,OAAO,CAAC,WAAW,CAAC;AACtC,IAAMqK,qBAAqB,GAAGrK,OAAO,CAAC,uBAAuB,CAAC;AAC9D,IAAMsK,oBAAoB,GAAG,gBAAgB;AAC7C,IAAMC,oBAAoB,GAAG,mBAAmB;AAAC,IAC3Cf,sBAAsB,0BAAAgB,oBAAA;EAAAnK,SAAA,CAAAmJ,sBAAA,EAAAgB,oBAAA;EAAA,IAAAC,MAAA,GAAAnK,YAAA,CAAAkJ,sBAAA;EACxB,SAAAA,uBAAYkB,OAAO,EAAE;IAAA,IAAAC,KAAA;IAAAzK,eAAA,OAAAsJ,sBAAA;IACjB,IAAIoB,EAAE,EAAEC,EAAE;IACVF,KAAA,GAAAF,MAAA,CAAAzH,IAAA;IACA2H,KAAA,CAAKG,eAAe,GAAG,IAAIX,gBAAgB,CAACY,cAAc,CAAA3K,sBAAA,CAAAuK,KAAA,EAAM;IAChEA,KAAA,CAAKK,oBAAoB,GAAG,IAAIX,qBAAqB,CAACY,mBAAmB,CAAA7K,sBAAA,CAAAuK,KAAA,EAAM;IAC/EA,KAAA,CAAKO,MAAM,GAAG,IAAI;IAClBP,KAAA,CAAKQ,UAAU,GAAG,EAAE;IACpBR,KAAA,CAAKS,gCAAgC,GAAG,KAAK;IAC7CT,KAAA,CAAKU,eAAe,GAAGV,KAAA,CAAKU,eAAe,CAACC,IAAI,CAAAlL,sBAAA,CAAAuK,KAAA,EAAM;IACtDA,KAAA,CAAKY,kBAAkB,GAAGZ,KAAA,CAAKY,kBAAkB,CAACD,IAAI,CAAAlL,sBAAA,CAAAuK,KAAA,EAAM;IAC5DA,KAAA,CAAKa,UAAU,GAAGb,KAAA,CAAKa,UAAU,CAACF,IAAI,CAAAlL,sBAAA,CAAAuK,KAAA,EAAM;IAC5CA,KAAA,CAAKc,UAAU,GAAGd,KAAA,CAAKc,UAAU,CAACH,IAAI,CAAAlL,sBAAA,CAAAuK,KAAA,EAAM;IAC5CA,KAAA,CAAKe,MAAM,GAAGf,KAAA,CAAKe,MAAM,CAACJ,IAAI,CAAAlL,sBAAA,CAAAuK,KAAA,EAAM;IACpCA,KAAA,CAAKgB,KAAK,GAAGhB,KAAA,CAAKgB,KAAK,CAACL,IAAI,CAAAlL,sBAAA,CAAAuK,KAAA,EAAM;IAClCA,KAAA,CAAKiB,IAAI,GAAGjB,KAAA,CAAKiB,IAAI,CAACN,IAAI,CAAAlL,sBAAA,CAAAuK,KAAA,EAAM;IAChCA,KAAA,CAAKkB,SAAS,GAAGlB,KAAA,CAAKkB,SAAS,CAACP,IAAI,CAAAlL,sBAAA,CAAAuK,KAAA,EAAM;IAC1CA,KAAA,CAAKmB,OAAO,GAAGnB,KAAA,CAAKmB,OAAO,CAACR,IAAI,CAAAlL,sBAAA,CAAAuK,KAAA,EAAM;IACtCA,KAAA,CAAKoB,aAAa,GAAGpB,KAAA,CAAKoB,aAAa,CAACT,IAAI,CAAAlL,sBAAA,CAAAuK,KAAA,EAAM;IAClDA,KAAA,CAAKqB,UAAU,GAAGrB,KAAA,CAAKqB,UAAU,CAACV,IAAI,CAAAlL,sBAAA,CAAAuK,KAAA,EAAM;IAC5CA,KAAA,CAAKsB,cAAc,GAAGtB,KAAA,CAAKsB,cAAc,CAACX,IAAI,CAAAlL,sBAAA,CAAAuK,KAAA,EAAM;IACpDA,KAAA,CAAKuB,gBAAgB,GAAGxB,OAAO,CAACyB,OAAO;IACvCxB,KAAA,CAAKyB,mBAAmB,GAAG1B,OAAO,CAAC2B,UAAU;IAC7C1B,KAAA,CAAK2B,mBAAmB,GAAG5B,OAAO,CAAC6B,kBAAkB;IACrD5B,KAAA,CAAK6B,cAAc,GAAG9B,OAAO,CAAC+B,aAAa;IAC3C9B,KAAA,CAAK+B,QAAQ,GAAGhC,OAAO,CAACiC,OAAO;IAC/BhC,KAAA,CAAKiC,kBAAkB,GAAGlC,OAAO,CAACmC,iBAAiB;IACnDlC,KAAA,CAAKmC,UAAU,GAAGpC,OAAO,CAACqC,gBAAgB;IAC1CpC,KAAA,CAAKqC,kBAAkB,GAAG,IAAI;IAC9BrC,KAAA,CAAKsC,gBAAgB,GAAG,CAACrC,EAAE,GAAGF,OAAO,CAACwC,wBAAwB,MAAM,IAAI,IAAItC,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,IAAI;IACrGD,KAAA,CAAKwC,iBAAiB,GAAG,CAACtC,EAAE,GAAGH,OAAO,CAAC0C,yBAAyB,MAAM,IAAI,IAAIvC,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,KAAK;IACxGF,KAAA,CAAK0C,KAAK,GAAG3C,OAAO,CAAC2C,KAAK;IAC1B1C,KAAA,CAAK2C,wBAAwB,GAAG5C,OAAO,CAAC4C,wBAAwB;IAChE3C,KAAA,CAAK4C,QAAQ,GAAG7C,OAAO,CAAC6C,QAAQ;IAChC,IAAMpB,OAAO,GAAGxB,KAAA,CAAKa,UAAU,EAAE;IACjC,IAAMgC,UAAU,GAAG,CAAC,CAAC,EAAEvD,MAAM,CAACwD,SAAS,EAAEtB,OAAO,CAACuB,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC9D;IACA/C,KAAA,CAAKgD,IAAI,CAAC,SAAS,EAAE;MAAEH,UAAU,EAAVA;IAAW,CAAC,CAAC;IACpC,IAAMI,eAAe,GAAGjD,KAAA,CAAK+B,QAAQ,CAACmB,OAAO,CAAC/D,wBAAwB,CAACgE,2BAA2B,CAAC;IACnG,IAAIF,eAAe,EAAE;MACjB,IAAMG,SAAS,GAAGH,eAAe,CAACI,KAAK,CAAC,GAAG,CAAC;MAC5C,IAAID,SAAS,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;QACrBpD,KAAA,CAAKQ,UAAU,GAAG4C,SAAS,CAACE,GAAG,CAAC,UAAAC,OAAO;UAAA,OAAI,CAAC,CAAC,EAAEjE,MAAM,CAACkE,mBAAmB,EAAED,OAAO,CAAC;QAAA,EAAC;QACpFvD,KAAA,CAAKgD,IAAI,CAAC,iBAAiB,EAAEI,SAAS,CAAC;MAC3C;IACJ;IACApD,KAAA,CAAKK,oBAAoB,CAACoD,MAAM,CAACC,EAAE,CAAC,cAAc,EAAE,UAACC,YAAY,EAAK;MAClE3D,KAAA,CAAKgD,IAAI,CAAC,SAAS,EAAE;QACjB5K,IAAI,EAAEuL,YAAY,CAAC1K,MAAM;QACzB2K,IAAI,EAAED,YAAY,CAACE;MACvB,CAAC,CAAC;IACN,CAAC,CAAC;IACF,IAAI7D,KAAA,CAAKQ,UAAU,CAACtE,MAAM,GAAG,CAAC,EAAE;MAC5B,KAAK8D,KAAA,CAAK8D,eAAe,EAAE;IAC/B;IACAC,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAE,UAAAC,KAAK,EAAI;MACxC,IAAIhE,EAAE;MACN;MACA,IAAIgE,KAAK,CAACC,MAAM,KAAKC,QAAQ,CAACD,MAAM,IAAID,KAAK,CAACG,MAAM,KAAKL,MAAM,EAAE;QAC7D;MACJ;MACA,IAAIE,KAAK,CAACL,IAAI,CAACxL,IAAI,KAAK,mBAAmB,EACvC,OAAO,CAAC;MACZ,IAAI6L,KAAK,CAACL,IAAI,CAACA,IAAI,CAACS,MAAM,KAAK,qBAAqB,IAChDJ,KAAK,CAACL,IAAI,CAACA,IAAI,CAACS,MAAM,KAAK,mBAAmB,EAAE;QAChD,IAAMC,QAAQ,GAAGL,KAAK,CAACL,IAAI,CAACA,IAAI,CAACpC,OAAO;QACxC,IAAME,UAAU,GAAG,CAACzB,EAAE,GAAGgE,KAAK,CAACL,IAAI,CAACA,IAAI,CAAClC,UAAU,MAAM,IAAI,IAAIzB,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGD,KAAA,CAAK0B,UAAU;QACrG1B,KAAA,CAAKY,kBAAkB,CAACc,UAAU,EAAE6C,MAAM,CAACD,QAAQ,CAAC,CAAC;MACzD;MACA,IAAIL,KAAK,CAACL,IAAI,CAACA,IAAI,CAACS,MAAM,KAAK,gBAAgB,EAAE;QAC7CrE,KAAA,CAAKoB,aAAa,CAAC,CAAC6C,KAAK,CAACL,IAAI,CAACA,IAAI,CAACL,OAAO,CAAC,CAAC;MACjD;IACJ,CAAC,CAAC;IAAC,OAAAvD,KAAA;EACP;EACA;EAAAxK,YAAA,CAAAqJ,sBAAA;IAAAxI,GAAA;IAAAmO,GAAA,EACA,SAAAA,IAAA,EAAsB;MAClB,OAAO,IAAI,CAAChE,UAAU,CAAC,CAAC,CAAC,IAAI5F,SAAS;IAC1C;IACA;EAAA;IAAAvE,GAAA;IAAAmO,GAAA,EACA,SAAAA,IAAA,EAAqB;MACjB,OAAO,IAAI,CAAC3D,UAAU,EAAE,CAACkC,QAAQ,CAAC,EAAE,CAAC;IACzC;IACA;EAAA;IAAA1M,GAAA;IAAAmO,GAAA,EACA,SAAAA,IAAA,EAAc;MACV,OAAO,CAAC,CAAC,EAAElF,MAAM,CAACwD,SAAS,EAAE,IAAI,CAACjC,UAAU,EAAE,CAACkC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAChE;EAAC;IAAA1M,GAAA;IAAAmO,GAAA,EACD,SAAAA,IAAA,EAAmB;MACf;MACA,OAAO,IAAI;IACf;IACA;AACJ;AACA;AACA;EAHI;IAAAnO,GAAA;IAAAmO,GAAA,EAIA,SAAAA,IAAA,EAAiB;MACb,OAAO,IAAI,CAAC7C,mBAAmB;IACnC;EAAC;IAAAtL,GAAA;IAAAmO,GAAA,EACD,SAAAA,IAAA,EAAW;MACP,OAAO,IAAI,CAAC9C,UAAU;IAC1B;EAAC;IAAArL,GAAA;IAAAmO,GAAA,EACD,SAAAA,IAAA,EAAgB;MACZ,OAAO,IAAI;IACf;EAAC;IAAAnO,GAAA;IAAAE,KAAA,EACD,SAAAkO,YAAA,EAAc;MACV,OAAO,IAAI;IACf;EAAC;IAAApO,GAAA;IAAAmO,GAAA,EACD,SAAAA,IAAA,EAAiB;MACb,IAAIvE,EAAE;MACN,OAAQ,CAACA,EAAE,GAAG,IAAI,CAAC8B,QAAQ,CAACmB,OAAO,CAACtD,oBAAoB,CAAC,MAAM,IAAI,IAAIK,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,IAAI,CAACwB,mBAAmB;IACxH,CAAC;IAAAiD,GAAA,EACD,SAAAA,IAAenO,KAAK,EAAE;MAClB,IAAI,CAACwL,QAAQ,CAAC4C,OAAO,CAAC/E,oBAAoB,EAAErJ,KAAK,CAAC;IACtD;EAAC;IAAAF,GAAA;IAAAE,KAAA,EACD,SAAAqO,0BAAA,EAA4B;MACxB,IAAI,CAACvC,kBAAkB,GAAG,KAAK;IACnC;IACA;AACJ;AACA;AACA;EAHI;IAAAhM,GAAA;IAAAE,KAAA,EAIA,SAAAmK,gBAAgBgB,UAAU,EAAEF,OAAO,EAAE;MACjC;MACA,IAAI,EAAE,IAAI,CAACoB,QAAQ,IAAI,IAAI,CAACJ,iBAAiB,CAAC,EAAE;QAC5C,IAAI,CAACjB,gBAAgB,GAAGC,OAAO;QAC/B,IAAI,CAACC,mBAAmB,GAAGC,UAAU;MACzC;MACA,IAAI,CAACd,kBAAkB,CAAC,IAAI,CAACc,UAAU,EAAE,IAAI,CAACb,UAAU,EAAE,CAAC;IAC/D;EAAC;IAAAxK,GAAA;IAAAE,KAAA,EACD,SAAAqK,mBAAmBc,UAAU,EAAEF,OAAO,EAAE;MACpC,IAAI,CAACE,UAAU,GAAGA,UAAU;MAC5B;MACA,IAAMmD,eAAe,GAAG,IAAI,CAAChE,UAAU,EAAE;MACzC,IAAI,CAACkB,QAAQ,CAAC4C,OAAO,CAAChF,oBAAoB,EAAE6B,OAAO,CAACuB,QAAQ,CAAC,EAAE,CAAC,CAAC;MACjE,IAAM+B,YAAY,GAAG,CAAC,CAAC,EAAExF,MAAM,CAACyF,eAAe,EAAEvD,OAAO,CAAC,KAAKqD,eAAe;MAC7E,IAAIC,YAAY,IAAI,CAAC,IAAI,CAACrE,gCAAgC,EAAE;QACxD,IAAI,CAACuC,IAAI,CAAC,cAAc,EAAE,IAAI,CAACnC,UAAU,EAAE,CAAC;QAC5C,IAAI,CAACJ,gCAAgC,GAAG,IAAI;MAChD;IACJ;EAAC;IAAApK,GAAA;IAAAE,KAAA;MAAA,IAAAyO,WAAA,GAAA1P,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAuI,QAAiB7M,IAAI,EAAEmL,OAAO,EAAE2B,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAE5D,OAAO;QAAA,IAAA6D,KAAA,EAAA5L,MAAA;QAAA,OAAA7D,mBAAA,GAAAyB,IAAA,UAAAiO,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAhI,IAAA,GAAAgI,QAAA,CAAAtK,IAAA;YAAA;cAAAsK,QAAA,CAAAtK,IAAA;cAAA,OACxC,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAAE,QAAA,CAAAjL,IAAA;cAAAiL,QAAA,CAAAtK,IAAA;cAAA,OACUoK,KAAK,CAACG,UAAU,CAACpN,IAAI,EAAEmL,OAAO,EAAE2B,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAE5D,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACuB,QAAQ,EAAE,CAAC,CAAC0C,OAAO;YAAA;cAArJhM,MAAM,GAAA8L,QAAA,CAAAjL,IAAA;cAAA,OAAAiL,QAAA,CAAA9K,MAAA,WACL,CAAC,CAAChB,MAAM,CAACA,MAAM;YAAA;YAAA;cAAA,OAAA8L,QAAA,CAAA7H,IAAA;UAAA;QAAA,GAAAuH,OAAA;MAAA,CACzB;MAAA,SAAAO,WAAAE,EAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA;QAAA,OAAAf,WAAA,CAAAgB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAT,UAAA;IAAA;EAAA;IAAAnP,GAAA;IAAAE,KAAA;MAAA,IAAA2P,iBAAA,GAAA5Q,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAyJ,SAAuB3E,OAAO,EAAE4E,OAAO,EAAEC,iBAAiB,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,cAAc;QAAA,IAAAvG,EAAA,EAAAC,EAAA,EAAAmF,KAAA,EAAAoB,gCAAA,EAAAC,GAAA;QAAA,OAAA9Q,mBAAA,GAAAyB,IAAA,UAAAsP,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAArJ,IAAA,GAAAqJ,SAAA,CAAA3L,IAAA;YAAA;cAAA,MAEvF,CAAC,CAAC,EAAEqE,MAAM,CAACyF,eAAe,EAAEvD,OAAO,CAAC,KAAK,IAAI,CAACX,UAAU,EAAE;gBAAA+F,SAAA,CAAA3L,IAAA;gBAAA;cAAA;cAAA,OAAA2L,SAAA,CAAAnM,MAAA,WACnD,KAAK;YAAA;cAAAmM,SAAA,CAAA3L,IAAA;cAAA,OAEI,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAAuB,SAAA,CAAAtM,IAAA;cACLmM,gCAAgC,GAAGpB,KAAK,CAACwB,sBAAsB,CAACrF,OAAO,CAACuB,QAAQ,EAAE,CAAC;cAAA,MACrF,CAAC,IAAI,CAAC+D,aAAa,EAAE,IAAI,CAACL,gCAAgC;gBAAAG,SAAA,CAAA3L,IAAA;gBAAA;cAAA;cAAA2L,SAAA,CAAA3L,IAAA;cAAA,OACpDoK,KAAK,CAAC0B,uBAAuB,EAAE,CAACtB,OAAO;YAAA;cAAAmB,SAAA,CAAA3L,IAAA;cAAA,OAE/BoK,KAAK,CAAC2B,gBAAgB,CAACxF,OAAO,CAACuB,QAAQ,EAAE,EAAEqD,OAAO,EAAEG,QAAQ,EAAEF,iBAAiB,EAAEC,SAAS,EAAEE,cAAc,CAAC,CAACf,OAAO;YAAA;cAA/HiB,GAAG,GAAAE,SAAA,CAAAtM,IAAA;cACT,IAAI,CAAC,CAAC2F,EAAE,GAAGyG,GAAG,CAACjN,MAAM,MAAM,IAAI,IAAIwG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACgH,UAAU,MAAM,IAAI,EAAE;gBACjF,IAAI,CAACrG,kBAAkB,CAACwF,OAAO,CAAC,CAAC,CAAC,EAAE5E,OAAO,CAAC;cAChD;cAAC,OAAAoF,SAAA,CAAAnM,MAAA,WACM,CAAC,CAACyF,EAAE,GAAGwG,GAAG,CAACjN,MAAM,MAAM,IAAI,IAAIyG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC+G,UAAU,MAAM,IAAI;YAAA;YAAA;cAAA,OAAAL,SAAA,CAAAlJ,IAAA;UAAA;QAAA,GAAAyI,QAAA;MAAA,CACzF;MAAA,SAAAa,iBAAAE,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;QAAA,OAAArB,iBAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAe,gBAAA;IAAA;EAAA;IAAA3Q,GAAA;IAAAE,KAAA;MAAA,IAAAiR,oBAAA,GAAAlS,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAA+K,SAA0BjG,OAAO;QAAA,IAAA6D,KAAA,EAAAqB,GAAA,EAAAgB,cAAA;QAAA,OAAA9R,mBAAA,GAAAyB,IAAA,UAAAsQ,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAArK,IAAA,GAAAqK,SAAA,CAAA3M,IAAA;YAAA;cAAA2M,SAAA,CAAA3M,IAAA;cAAA,OACT,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAAuC,SAAA,CAAAtN,IAAA;cAAAsN,SAAA,CAAA3M,IAAA;cAAA,OACOoK,KAAK,CAACwC,mBAAmB,CAACrG,OAAO,CAACuB,QAAQ,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC+E,eAAe,IAAIlN,SAAS,CAAC,CAAC6K,OAAO;YAAA;cAAtGiB,GAAG,GAAAkB,SAAA,CAAAtN,IAAA;cAAA,MAEL,CAAC,CAAC,EAAE+E,cAAc,CAAC0I,eAAe,EAAErB,GAAG,CAAC,IAAIA,GAAG,CAACsB,SAAS;gBAAAJ,SAAA,CAAA3M,IAAA;gBAAA;cAAA;cAAA,MACrDyL,GAAG,CAACsB,SAAS,KAAK/I,QAAQ,CAACgJ,kBAAkB,CAACC,QAAQ,CAACC,gBAAgB;gBAAAP,SAAA,CAAA3M,IAAA;gBAAA;cAAA;cAAA,MACjEgE,QAAQ,CAACmJ,cAAc,CAACF,QAAQ,CAACC,gBAAgB,CAAC3G,OAAO,CAAC;YAAA;cAAA,MAG1DvC,QAAQ,CAACmJ,cAAc,CAACF,QAAQ,CAACG,MAAM,CAAC;gBAC1CC,OAAO,EAAE5B,GAAG,CAAC6B,YAAY;gBACzBC,IAAI,EAAE9B,GAAG,CAACsB;cACd,CAAC,CAAC;YAAA;cAGJN,cAAc,GAAGhB,GAAG,CAACjN,MAAM;cACjC,IAAIiO,cAAc,CAACT,UAAU,IAAIS,cAAc,CAACe,MAAM,CAACvM,MAAM,GAAG,CAAC,EAAE;gBAC/D,IAAI,CAAC0E,kBAAkB,CAAC8G,cAAc,CAACe,MAAM,EAAEjH,OAAO,CAAC;cAC3D;YAAC;YAAA;cAAA,OAAAoG,SAAA,CAAAlK,IAAA;UAAA;QAAA,GAAA+J,QAAA;MAAA,CACJ;MAAA,SAAAI,oBAAAa,IAAA;QAAA,OAAAlB,oBAAA,CAAAxB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA4B,mBAAA;IAAA;EAAA;IAAAxR,GAAA;IAAAE,KAAA,EACD,SAAAuK,WAAW6H,OAAO,EAAEC,UAAU,EAAE;MAC5B,KAAK,IAAI,CAAC9E,eAAe,EAAE,CAACnK,IAAI,CAAC,UAAA0L,KAAK;QAAA,OAAIA,KAAK,CAACvE,UAAU,CAAC6H,OAAO,EAAEC,UAAU,CAAC;MAAA,EAAC;IACpF;IACA;EAAA;IAAAvS,GAAA;IAAAE,KAAA;MAAA,IAAAsS,OAAA,GAAAvT,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACA,SAAAoM,SAAA;QAAA,IAAA7I,EAAA;QAAA,OAAArK,mBAAA,GAAAyB,IAAA,UAAA0R,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAzL,IAAA,GAAAyL,SAAA,CAAA/N,IAAA;YAAA;cAEI,CAACgF,EAAE,GAAG,IAAI,CAACkC,UAAU,MAAM,IAAI,IAAIlC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACgJ,GAAG,CAACjK,kBAAkB,CAACkK,MAAM,CAACC,kBAAkB,EAAE;gBAC7GlQ,MAAM,EAAE,kBAAkB;gBAC1BmQ,gBAAgB,EAAE,IAAI,CAAC5I,UAAU,CAACtE,MAAM;gBACxCmN,aAAa,EAAE,IAAI,CAAC9I,MAAM,GACpBrB,SAAS,CAACoK,OAAO,CAACC,IAAI,CAAC,IAAI,CAAChJ,MAAM,CAACiJ,OAAO,CAACC,EAAE,CAAC,GAC9C7O;cACV,CAAC,CAAC;cAAC,MACC,IAAI,CAAC4F,UAAU,CAACtE,MAAM,GAAG,CAAC;gBAAA8M,SAAA,CAAA/N,IAAA;gBAAA;cAAA;cAAA,OAAA+N,SAAA,CAAAvO,MAAA,WAAArF,kBAAA,CACf,IAAI,CAACoL,UAAU;YAAA;cAAAwI,SAAA,CAAA/N,IAAA;cAAA,OAEjB,IAAI,CAACgG,IAAI,CAACxB,SAAS,CAACiK,aAAa,CAACC,mBAAmB,CAAC;YAAA;cAAA,OAAAX,SAAA,CAAAvO,MAAA,WAAAuO,SAAA,CAAA1O,IAAA;YAAA;YAAA;cAAA,OAAA0O,SAAA,CAAAtL,IAAA;UAAA;QAAA,GAAAoL,QAAA;MAAA,CACtE;MAAA,SAAA/H,OAAA;QAAA,OAAA8H,OAAA,CAAA7C,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAlF,MAAA;IAAA;EAAA;IAAA1K,GAAA;IAAAE,KAAA;MAAA,IAAAqT,MAAA,GAAAtU,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAmN,SAAA;QAAA,IAAAxE,KAAA;QAAA,OAAAzP,mBAAA,GAAAyB,IAAA,UAAAyS,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAxM,IAAA,GAAAwM,SAAA,CAAA9O,IAAA;YAAA;cAAA8O,SAAA,CAAA9O,IAAA;cAAA,OACwB,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAA0E,SAAA,CAAAzP,IAAA;cACX+K,KAAK,CAAC2E,cAAc,EAAE;YAAC;YAAA;cAAA,OAAAD,SAAA,CAAArM,IAAA;UAAA;QAAA,GAAAmM,QAAA;MAAA,CAC1B;MAAA,SAAA7I,MAAA;QAAA,OAAA4I,MAAA,CAAA5D,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAjF,KAAA;IAAA;EAAA;IAAA3K,GAAA;IAAAE,KAAA,EACD,SAAA0K,KAAKgJ,eAAe,EAAEC,gBAAgB,EAAE;MACpC;MACA,IAAI;QACA,IAAMzQ,MAAM,GAAG,IAAI,CAAC0Q,KAAK,CAACF,eAAe,EAAEC,gBAAgB,CAAC;QAC5D,IAAIzQ,MAAM,YAAYsD,OAAO,EAAE;UAC3B,OAAOtD,MAAM,CAAC6E,KAAK,CAAC,UAAAzE,KAAK,EAAI;YACzB,MAAM,CAAC,CAAC,EAAEoF,QAAQ,CAACmL,cAAc,EAAEvQ,KAAK,EAAEoQ,eAAe,CAAC;UAC9D,CAAC,CAAC;QACN;MACJ,CAAC,CACD,OAAOpQ,KAAK,EAAE;QACV,MAAM,CAAC,CAAC,EAAEoF,QAAQ,CAACmL,cAAc,EAAEvQ,KAAK,EAAEoQ,eAAe,CAAC;MAC9D;IACJ;EAAC;IAAA5T,GAAA;IAAAE,KAAA,EACD,SAAA4T,MAAMF,eAAe,EAAEC,gBAAgB,EAAE;MAAA,IAAAG,MAAA;MACrC,IAAI,OAAOJ,eAAe,KAAK,QAAQ,EAAE;QACrC,IAAMhR,MAAM,GAAGgR,eAAe;QAC9B,IAAMpG,MAAM,GAAGyG,KAAK,CAACC,OAAO,CAACL,gBAAgB,CAAC,GACxCA,gBAAgB,GAChBA,gBAAgB,KAAKtP,SAAS,GAC1B,CAACsP,gBAAgB,CAAC,GAClB,EAAE;QACZ,IAAM/I,OAAO,GAAG;UACZqJ,OAAO,EAAE,KAAK;UACdf,EAAE,EAAE,CAAC;UACLxQ,MAAM,EAANA,MAAM;UACN4K,MAAM,EAANA;QACJ,CAAC;QACD,OAAO,IAAI,CAAC4G,iBAAiB,CAACtJ,OAAO,CAAC,CAACxH,IAAI,CAAC,UAAA+M,GAAG;UAAA,OAAIA,GAAG,CAACjN,MAAM;QAAA,EAAC;MAClE;MACA;MACA,IAAI,OAAOyQ,gBAAgB,KAAK,UAAU,EAAE;QACxC,IAAM/I,SAAO,GAAG8I,eAAe;QAC/B,IAAMS,QAAQ,GAAGR,gBAAgB;QACjC,OAAO,IAAI,CAACS,UAAU,CAACxJ,SAAO,EAAEuJ,QAAQ,CAAC;MAC7C;MACA;MACA,IAAIJ,KAAK,CAACC,OAAO,CAACN,eAAe,CAAC,EAAE;QAChC,IAAMW,QAAQ,GAAGX,eAAe;QAChC,OAAOW,QAAQ,CAACtH,GAAG,CAAC,UAAAuH,CAAC;UAAA,OAAIR,MAAI,CAACS,YAAY,CAACD,CAAC,CAAC;QAAA,EAAC;MAClD;MACA;MACA,IAAME,GAAG,GAAGd,eAAe;MAC3B,OAAO,IAAI,CAACa,YAAY,CAACC,GAAG,CAAC;IACjC;EAAC;IAAA1U,GAAA;IAAAE,KAAA;MAAA,IAAAyU,WAAA,GAAA1V,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAuO,SAAgB9J,OAAO,EAAEuJ,QAAQ;QAAA,OAAA9U,mBAAA,GAAAyB,IAAA,UAAA6T,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA5N,IAAA,GAAA4N,SAAA,CAAAlQ,IAAA;YAAA;cAAAkQ,SAAA,CAAA5N,IAAA;cAAA,OAAA4N,SAAA,CAAA1Q,MAAA,WAElB,IAAI,CAACkQ,UAAU,CAACxJ,OAAO,EAAEuJ,QAAQ,CAAC,CAACpM,KAAK,CAAC,UAAAzE,KAAK,EAAI;gBACrD,MAAM,CAAC,CAAC,EAAEoF,QAAQ,CAACmL,cAAc,EAAEvQ,KAAK,EAAEsH,OAAO,CAAC;cACtD,CAAC,CAAC;YAAA;cAAAgK,SAAA,CAAA5N,IAAA;cAAA4N,SAAA,CAAAC,EAAA,GAAAD,SAAA;cAAA,OAAAA,SAAA,CAAA1Q,MAAA,WAGKsC,OAAO,CAACxD,MAAM,CAAC,CAAC,CAAC,EAAE0F,QAAQ,CAACmL,cAAc,EAAAe,SAAA,CAAAC,EAAA,EAASjK,OAAO,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAgK,SAAA,CAAAzN,IAAA;UAAA;QAAA,GAAAuN,QAAA;MAAA,CAE1E;MAAA,SAAA/J,UAAAmK,IAAA,EAAAC,IAAA;QAAA,OAAAN,WAAA,CAAAhF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA/E,SAAA;IAAA;EAAA;IAAA7K,GAAA;IAAAE,KAAA;MAAA,IAAAgV,WAAA,GAAAjW,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAA8O,SAAiBrK,OAAO,EAAEuJ,QAAQ;QAAA,IAAAe,OAAA,EAAAC,EAAA;QAAA,OAAA9V,mBAAA,GAAAyB,IAAA,UAAAsU,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAArO,IAAA,GAAAqO,SAAA,CAAA3Q,IAAA;YAAA;cAAA,MAC1B,OAAOyP,QAAQ,KAAK,UAAU;gBAAAkB,SAAA,CAAA3Q,IAAA;gBAAA;cAAA;cAAA,MACxB,IAAIhB,KAAK,CAAC,sBAAsB,CAAC;YAAA;cAAA,KAGvCqQ,KAAK,CAACC,OAAO,CAACpJ,OAAO,CAAC;gBAAAyK,SAAA,CAAA3Q,IAAA;gBAAA;cAAA;cAChBwQ,OAAO,GAAGf,QAAQ;cACxB,IAAI,CAACmB,0BAA0B,CAAC1K,OAAO,CAAC,CACnCxH,IAAI,CAAC,UAAAmS,SAAS;gBAAA,OAAIL,OAAO,CAAC,IAAI,EAAEK,SAAS,CAAC;cAAA,EAAC,CAC3CxN,KAAK,CAAC,UAAAlH,GAAG;gBAAA,OAAIqU,OAAO,CAACrU,GAAG,EAAE,IAAI,CAAC;cAAA,EAAC;cAAC,OAAAwU,SAAA,CAAAnR,MAAA;YAAA;cAG1C;cACMiR,EAAE,GAAGhB,QAAQ;cAAA,OAAAkB,SAAA,CAAAnR,MAAA,WACZ,IAAI,CAACgQ,iBAAiB,CAACtJ,OAAO,CAAC,CACjCxH,IAAI,CAAC,UAAAoS,QAAQ;gBAAA,OAAIL,EAAE,CAAC,IAAI,EAAEK,QAAQ,CAAC;cAAA,EAAC,CACpCzN,KAAK,CAAC,UAAAlH,GAAG;gBAAA,OAAIsU,EAAE,CAACtU,GAAG,EAAE,IAAI,CAAC;cAAA,EAAC;YAAA;YAAA;cAAA,OAAAwU,SAAA,CAAAlO,IAAA;UAAA;QAAA,GAAA8N,QAAA;MAAA,CACnC;MAAA,SAAAb,WAAAqB,IAAA,EAAAC,IAAA;QAAA,OAAAV,WAAA,CAAAvF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA0E,UAAA;IAAA;EAAA;IAAAtU,GAAA;IAAAE,KAAA;MAAA,IAAA2V,SAAA,GAAA5W,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAyP,SAAcC,IAAI;QAAA,OAAAxW,mBAAA,GAAAyB,IAAA,UAAAgV,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAA/O,IAAA,GAAA+O,SAAA,CAAArR,IAAA;YAAA;cAAAqR,SAAA,CAAA/O,IAAA;cAAA,OAAA+O,SAAA,CAAA7R,MAAA,WAEH,IAAI,CAAC8R,QAAQ,CAACH,IAAI,CAAC,CAAC9N,KAAK,CAAC,UAAAzE,KAAK,EAAI;gBACtC,MAAM,CAAC,CAAC,EAAEoF,QAAQ,CAACmL,cAAc,EAAEvQ,KAAK,EAAEuS,IAAI,CAACnT,MAAM,CAAC;cAC1D,CAAC,CAAC;YAAA;cAAAqT,SAAA,CAAA/O,IAAA;cAAA+O,SAAA,CAAAlB,EAAA,GAAAkB,SAAA;cAAA,OAAAA,SAAA,CAAA7R,MAAA,WAGKsC,OAAO,CAACxD,MAAM,CAAC,CAAC,CAAC,EAAE0F,QAAQ,CAACmL,cAAc,EAAAkC,SAAA,CAAAlB,EAAA,EAASgB,IAAI,CAACnT,MAAM,CAAC,CAAC;YAAA;YAAA;cAAA,OAAAqT,SAAA,CAAA5O,IAAA;UAAA;QAAA,GAAAyO,QAAA;MAAA,CAE9E;MAAA,SAAAhL,QAAAqL,IAAA;QAAA,OAAAN,SAAA,CAAAlG,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA9E,OAAA;IAAA;EAAA;IAAA9K,GAAA;IAAAE,KAAA;MAAA,IAAAkW,SAAA,GAAAnX,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAgQ,SAAeN,IAAI;QAAA,IAAAnT,MAAA,EAAA4K,MAAA,EAAA8I,SAAA,EAAAlD,EAAA,EAAAhQ,MAAA;QAAA,OAAA7D,mBAAA,GAAAyB,IAAA,UAAAuV,UAAAC,SAAA;UAAA,kBAAAA,SAAA,CAAAtP,IAAA,GAAAsP,SAAA,CAAA5R,IAAA;YAAA;cAAA,MACX,CAACmR,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,IAAI9B,KAAK,CAACC,OAAO,CAAC6B,IAAI,CAAC;gBAAAS,SAAA,CAAA5R,IAAA;gBAAA;cAAA;cAAA,MAClDgE,QAAQ,CAACmJ,cAAc,CAAC0E,GAAG,CAACC,cAAc,CAAC;gBAC7CzE,OAAO,EAAE,gDAAgD;gBACzD1E,IAAI,EAAEwI;cACV,CAAC,CAAC;YAAA;cAEEnT,MAAM,GAAamT,IAAI,CAAvBnT,MAAM,EAAE4K,MAAM,GAAKuI,IAAI,CAAfvI,MAAM;cAAA,MAClB,OAAO5K,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACiD,MAAM,KAAK,CAAC;gBAAA2Q,SAAA,CAAA5R,IAAA;gBAAA;cAAA;cAAA,MAC3CgE,QAAQ,CAACmJ,cAAc,CAAC0E,GAAG,CAACC,cAAc,CAAC;gBAC7CzE,OAAO,EAAE,2CAA2C;gBACpD1E,IAAI,EAAEwI;cACV,CAAC,CAAC;YAAA;cAAA,MAEFvI,MAAM,KAAKjJ,SAAS,IACpB,CAAC0P,KAAK,CAACC,OAAO,CAAC1G,MAAM,CAAC,KACrB,OAAOA,MAAM,KAAK,QAAQ,IAAIA,MAAM,KAAK,IAAI,CAAC;gBAAAgJ,SAAA,CAAA5R,IAAA;gBAAA;cAAA;cAAA,MACzCgE,QAAQ,CAACmJ,cAAc,CAAC0E,GAAG,CAACC,cAAc,CAAC;gBAC7CzE,OAAO,EAAE,uDAAuD;gBAChE1E,IAAI,EAAEwI;cACV,CAAC,CAAC;YAAA;cAEAO,SAAS,GAAG9I,MAAM,KAAKjJ,SAAS,GAAG,EAAE,GAAGiJ,MAAM,EACpD;cACM4F,EAAE,GAAG,IAAI,CAACxH,kBAAkB,CAAC+K,aAAa,EAAE;cAAAH,SAAA,CAAA5R,IAAA;cAAA,OAC7B,IAAI,CAACwP,iBAAiB,CAAC;gBACxCxR,MAAM,EAANA,MAAM;gBACN4K,MAAM,EAAE8I,SAAS;gBACjBnC,OAAO,EAAE,KAAK;gBACdf,EAAE,EAAFA;cACJ,CAAC,CAAC;YAAA;cALIhQ,MAAM,GAAAoT,SAAA,CAAAvS,IAAA;cAAA,OAAAuS,SAAA,CAAApS,MAAA,WAMLhB,MAAM,CAACA,MAAM;YAAA;YAAA;cAAA,OAAAoT,SAAA,CAAAnP,IAAA;UAAA;QAAA,GAAAgP,QAAA;MAAA,CACvB;MAAA,SAAAH,SAAAU,IAAA;QAAA,OAAAR,SAAA,CAAAzG,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAsG,QAAA;IAAA;EAAA;IAAAlW,GAAA;IAAAE,KAAA;MAAA,IAAA2W,WAAA,GAAA5X,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAyQ,UAAiBC,KAAK;QAAA,IAAAnN,EAAA,EAAAoF,KAAA,EAAAqB,GAAA;QAAA,OAAA9Q,mBAAA,GAAAyB,IAAA,UAAAgW,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA/P,IAAA,GAAA+P,UAAA,CAAArS,IAAA;YAAA;cAAAqS,UAAA,CAAArS,IAAA;cAAA,OAEE,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAAiI,UAAA,CAAAhT,IAAA;cAAAgT,UAAA,CAAArS,IAAA;cAAA,OACOoK,KAAK,CAAChE,UAAU,CAAC,CAAC,CAAC,EAAE/B,MAAM,CAACiO,kBAAkB,EAAEH,KAAK,CAAC,CAAC,CAAC3H,OAAO;YAAA;cAA3EiB,GAAG,GAAA4G,UAAA,CAAAhT,IAAA;cAAA,MACL,OAAOoM,GAAG,CAACjN,MAAM,KAAK,QAAQ;gBAAA6T,UAAA,CAAArS,IAAA;gBAAA;cAAA;cAAA,MACxB,CAAC,CAAC,EAAEgE,QAAQ,CAACmL,cAAc,EAAE,CAACnK,EAAE,GAAGyG,GAAG,CAAC6B,YAAY,MAAM,IAAI,IAAItI,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,yBAAyB,EAAEb,YAAY,CAACoO,UAAU,CAACnM,UAAU,CAAC;YAAA;cAAA,OAAAiM,UAAA,CAAA7S,MAAA,WAEvJiM,GAAG,CAACjN,MAAM;YAAA;YAAA;cAAA,OAAA6T,UAAA,CAAA5P,IAAA;UAAA;QAAA,GAAAyP,SAAA;MAAA,CACpB;MAAA,SAAA9L,WAAAoM,IAAA;QAAA,OAAAP,WAAA,CAAAlH,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA5E,UAAA;IAAA;EAAA;IAAAhL,GAAA;IAAAE,KAAA;MAAA,IAAAmX,eAAA,GAAApY,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAiR,UAAqB/J,IAAI,EAAES,MAAM;QAAA,IAAApE,EAAA,EAAAoF,KAAA,EAAAqB,GAAA;QAAA,OAAA9Q,mBAAA,GAAAyB,IAAA,UAAAuW,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAtQ,IAAA,GAAAsQ,UAAA,CAAA5S,IAAA;YAAA;cAAA4S,UAAA,CAAA5S,IAAA;cAAA,OAET,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAAwI,UAAA,CAAAvT,IAAA;cAAAuT,UAAA,CAAA5S,IAAA;cAAA,OACOoK,KAAK,CAAC/D,cAAc,CAACsC,IAAI,EAAES,MAAM,CAAC,CAACoB,OAAO;YAAA;cAAtDiB,GAAG,GAAAmH,UAAA,CAAAvT,IAAA;cAAA,MACL,OAAOoM,GAAG,CAACjN,MAAM,KAAK,QAAQ;gBAAAoU,UAAA,CAAA5S,IAAA;gBAAA;cAAA;cAAA,MACxB,CAAC,CAAC,EAAEgE,QAAQ,CAACmL,cAAc,EAAE,CAACnK,EAAE,GAAGyG,GAAG,CAAC6B,YAAY,MAAM,IAAI,IAAItI,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,yBAAyB,EAAEb,YAAY,CAACoO,UAAU,CAACM,OAAO,CAAC;YAAA;cAAA,OAAAD,UAAA,CAAApT,MAAA,WAEpJiM,GAAG,CAACjN,MAAM;YAAA;YAAA;cAAA,OAAAoU,UAAA,CAAAnQ,IAAA;UAAA;QAAA,GAAAiQ,SAAA;MAAA,CACpB;MAAA,SAAArM,eAAAyM,IAAA,EAAAC,IAAA;QAAA,OAAAN,eAAA,CAAA1H,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA3E,cAAA;IAAA;EAAA;IAAAjL,GAAA;IAAAE,KAAA;MAAA,IAAA0X,eAAA,GAAA3Y,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAwR,UAAqBC,eAAe;QAAA,IAAAlO,EAAA,EAAAoF,KAAA,EAAAqB,GAAA;QAAA,OAAA9Q,mBAAA,GAAAyB,IAAA,UAAA+W,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA9Q,IAAA,GAAA8Q,UAAA,CAAApT,IAAA;YAAA;cAAAoT,UAAA,CAAApT,IAAA;cAAA,OAEZ,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAAgJ,UAAA,CAAA/T,IAAA;cAAA+T,UAAA,CAAApT,IAAA;cAAA,OACOoK,KAAK,CAACiJ,cAAc,CAACH,eAAe,CAAC,CAAC1I,OAAO;YAAA;cAAzDiB,GAAG,GAAA2H,UAAA,CAAA/T,IAAA;cAAA,MACL,OAAOoM,GAAG,CAACjN,MAAM,KAAK,QAAQ;gBAAA4U,UAAA,CAAApT,IAAA;gBAAA;cAAA;cAAA,MACxB,CAAC,CAAC,EAAEgE,QAAQ,CAACmL,cAAc,EAAE,CAACnK,EAAE,GAAGyG,GAAG,CAAC6B,YAAY,MAAM,IAAI,IAAItI,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,yBAAyB,EAAEb,YAAY,CAACoO,UAAU,CAACc,cAAc,CAAC;YAAA;cAAA,OAAAD,UAAA,CAAA5T,MAAA,WAE3JiM,GAAG,CAACjN,MAAM;YAAA;YAAA;cAAA,OAAA4U,UAAA,CAAA3Q,IAAA;UAAA;QAAA,GAAAwQ,SAAA;MAAA,CACpB;MAAA,SAAAI,eAAAC,IAAA;QAAA,OAAAN,eAAA,CAAAjI,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAqI,cAAA;IAAA;EAAA;IAAAjY,GAAA;IAAAE,KAAA,EACD,SAAAiY,sBAAA,EAAwB;MACpB,OAAO,KAAK;IAChB;EAAC;IAAAnY,GAAA;IAAAE,KAAA,EACD,SAAAkY,UAAA,EAAY;MACR,MAAM,IAAIxU,KAAK,CAAC,iCAAiC,CAAC;IACtD;EAAC;IAAA5D,GAAA;IAAAE,KAAA,EACD,SAAAmY,YAAA,EAAc;MACV,MAAM,IAAIzU,KAAK,CAAC,iCAAiC,CAAC;IACtD;EAAC;IAAA5D,GAAA;IAAAE,KAAA,EACD,SAAAoY,WAAA,EAAa;MACT,OAAO,IAAI;IACf;EAAC;IAAAtY,GAAA;IAAAE,KAAA,EACD,SAAAuU,aAAa3J,OAAO,EAAE;MAClB,IAAM4K,QAAQ,GAAG;QACbvB,OAAO,EAAE,KAAK;QACdf,EAAE,EAAEtI,OAAO,CAACsI;MAChB,CAAC;MACD,IAAQxQ,MAAM,GAAKkI,OAAO,CAAlBlI,MAAM;MACd8S,QAAQ,CAACtS,MAAM,GAAG,IAAI,CAACmV,yBAAyB,CAACzN,OAAO,CAAC;MACzD,IAAI4K,QAAQ,CAACtS,MAAM,KAAKmB,SAAS,EAAE;QAC/B,MAAM,IAAIX,KAAK,CAAC,4CAAA4U,MAAA,CAA4C5V,MAAM,0FAAA4V,MAAA,CACH5V,MAAM,MAAG,oBACnD,CAAC;MAC1B;MACA,OAAO8S,QAAQ;IACnB;EAAC;IAAA1V,GAAA;IAAAE,KAAA,EACD,SAAA6K,cAAcgC,SAAS,EAAE0L,YAAY,EAAE;MACnC,IAAI,CAACxE,KAAK,CAACC,OAAO,CAACnH,SAAS,CAAC,EAAE;QAC3B,MAAM,IAAInJ,KAAK,CAAC,2BAA2B,CAAC;MAChD;MACA,IAAM8U,YAAY,GAAG3L,SAAS,CAACE,GAAG,CAAC,UAAAC,OAAO;QAAA,OAAI,CAAC,CAAC,EAAEjE,MAAM,CAACkE,mBAAmB,EAAED,OAAO,CAAC;MAAA,EAAC;MACvF,IAAIyL,IAAI,CAACC,SAAS,CAACF,YAAY,CAAC,KAAKC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACzO,UAAU,CAAC,EAAE;QAClE;MACJ;MACA,IAAI,IAAI,CAACA,UAAU,CAACtE,MAAM,GAAG,CAAC,IAC1B,IAAI,CAACyG,wBAAwB,KAAK,KAAK,IACvC,CAACmM,YAAY,EAAE;QACf;AACZ;AACA;AACA;QACY;MACJ;MACA,IAAI,CAACtO,UAAU,GAAGuO,YAAY;MAC9B,IAAI,CAAC/L,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAACxC,UAAU,CAAC;MAC7C,IAAI,CAACuB,QAAQ,CAAC4C,OAAO,CAACxF,wBAAwB,CAACgE,2BAA2B,EAAE4L,YAAY,CAACG,IAAI,CAAC,GAAG,CAAC,CAAC;IACvG;EAAC;IAAA7Y,GAAA;IAAAE,KAAA,EACD,SAAAkU,kBAAkBtJ,OAAO,EAAE;MAAA,IAAAgO,MAAA;MACvB,OAAO,IAAIpS,OAAO,CAAC,UAACzD,OAAO,EAAEC,MAAM,EAAK;QACpC,IAAI;UACA,IAAM6V,UAAU,GAAGD,MAAI,CAACP,yBAAyB,CAACzN,OAAO,CAAC;UAC1D,IAAIiO,UAAU,KAAKxU,SAAS,EAAE;YAC1B,OAAOtB,OAAO,CAAC;cACXkR,OAAO,EAAE,KAAK;cACdf,EAAE,EAAEtI,OAAO,CAACsI,EAAE;cACdhQ,MAAM,EAAE2V;YACZ,CAAC,CAAC;UACN;UACA,IAAMC,aAAa,GAAGF,MAAI,CAACG,gCAAgC,CAACnO,OAAO,CAAC;UACpE,IAAIkO,aAAa,KAAKzU,SAAS,EAAE;YAC7ByU,aAAa,CACR1V,IAAI,CAAC,UAAA+M,GAAG;cAAA,OAAIpN,OAAO,CAACvD,MAAM,CAACwZ,MAAM,CAACxZ,MAAM,CAACwZ,MAAM,CAAC,CAAC,CAAC,EAAE7I,GAAG,CAAC,EAAE;gBAAE+C,EAAE,EAAEtI,OAAO,CAACsI;cAAG,CAAC,CAAC,CAAC;YAAA,EAAC,CAC/EnL,KAAK,CAAC,UAAAlH,GAAG;cAAA,OAAImC,MAAM,CAACnC,GAAG,CAAC;YAAA,EAAC;YAC9B;UACJ;UACA,IAAMoY,mBAAmB,GAAGL,MAAI,CAACM,0BAA0B,CAACtO,OAAO,CAAC;UACpE,IAAIqO,mBAAmB,KAAK5U,SAAS,EAAE;YACnC4U,mBAAmB,CACd7V,IAAI,CAAC,UAAA+M,GAAG;cAAA,OAAIpN,OAAO,CAAC;gBACrBkR,OAAO,EAAE,KAAK;gBACdf,EAAE,EAAEtI,OAAO,CAACsI,EAAE;gBACdhQ,MAAM,EAAEiN,GAAG,CAACjN;cAChB,CAAC,CAAC;YAAA,EAAC,CACE6E,KAAK,CAAC,UAAAlH,GAAG;cAAA,OAAImC,MAAM,CAACnC,GAAG,CAAC;YAAA,EAAC;YAC9B;UACJ;QACJ,CAAC,CACD,OAAOA,GAAG,EAAE;UACR,OAAOmC,MAAM,CAACnC,GAAG,CAAC;QACtB;QACA+X,MAAI,CAACO,0BAA0B,CAACvO,OAAO,CAAC,CACnCxH,IAAI,CAAC,UAAA+M,GAAG;UAAA,OAAIA,GAAG,IAAIpN,OAAO,CAACvD,MAAM,CAACwZ,MAAM,CAACxZ,MAAM,CAACwZ,MAAM,CAAC,CAAC,CAAC,EAAE7I,GAAG,CAAC,EAAE;YAAE+C,EAAE,EAAEtI,OAAO,CAACsI;UAAG,CAAC,CAAC,CAAC;QAAA,EAAC,CACtFnL,KAAK,CAAC,UAAAlH,GAAG;UAAA,OAAImC,MAAM,CAACnC,GAAG,CAAC;QAAA,EAAC;MAClC,CAAC,CAAC;IACN;EAAC;IAAAf,GAAA;IAAAE,KAAA,EACD,SAAAsV,2BAA2BjB,QAAQ,EAAE;MAAA,IAAA+E,MAAA;MACjC,OAAO5S,OAAO,CAAC6S,GAAG,CAAChF,QAAQ,CAACtH,GAAG,CAAC,UAAAuH,CAAC;QAAA,OAAI8E,MAAI,CAAClF,iBAAiB,CAACI,CAAC,CAAC;MAAA,EAAC,CAAC;IACpE;EAAC;IAAAxU,GAAA;IAAAE,KAAA,EACD,SAAAqY,0BAA0BzN,OAAO,EAAE;MAC/B,IAAQlI,MAAM,GAAKkI,OAAO,CAAlBlI,MAAM;MACd,IAAM4K,MAAM,GAAG1C,OAAO,CAAC0C,MAAM,IAAI,EAAE;MACnC,QAAQ5K,MAAM;QACV,KAAKwG,SAAS,CAACiK,aAAa,CAACmG,YAAY;UACrC,OAAO,IAAI,CAACC,aAAa,EAAE;QAC/B,KAAKrQ,SAAS,CAACiK,aAAa,CAACqG,YAAY;UACrC,OAAO,IAAI,CAACC,aAAa,EAAE;QAC/B,KAAKvQ,SAAS,CAACiK,aAAa,CAACuG,mBAAmB;UAC5C,OAAO,IAAI,CAACC,oBAAoB,CAACrM,MAAM,CAAC;QAC5C,KAAKpE,SAAS,CAACiK,aAAa,CAACyG,WAAW;UACpC,OAAO,IAAI,CAACC,YAAY,EAAE;QAC9B,KAAK3Q,SAAS,CAACiK,aAAa,CAAC2G,WAAW;UACpC,OAAO,IAAI,CAACC,YAAY,EAAE;QAC9B;UACI,OAAO1V,SAAS;MAAC;IAE7B;EAAC;IAAAvE,GAAA;IAAAE,KAAA;MAAA,IAAAga,2BAAA,GAAAjb,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAA8T,UAAiCrP,OAAO;QAAA,IAAAlI,MAAA,EAAA4K,MAAA,EAAAwB,KAAA;QAAA,OAAAzP,mBAAA,GAAAyB,IAAA,UAAAoZ,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAnT,IAAA,GAAAmT,UAAA,CAAAzV,IAAA;YAAA;cAC5BhC,MAAM,GAAKkI,OAAO,CAAlBlI,MAAM;cACR4K,MAAM,GAAG1C,OAAO,CAAC0C,MAAM,IAAI,EAAE;cAAA6M,UAAA,CAAAtF,EAAA,GAC3BnS,MAAM;cAAAyX,UAAA,CAAAzV,IAAA,GAAAyV,UAAA,CAAAtF,EAAA,KACL3L,SAAS,CAACiK,aAAa,CAACC,mBAAmB,OAAA+G,UAAA,CAAAtF,EAAA,KAE3C3L,SAAS,CAACiK,aAAa,CAACiH,QAAQ,OAAAD,UAAA,CAAAtF,EAAA,KAEhC3L,SAAS,CAACiK,aAAa,CAACkH,aAAa,OAAAF,UAAA,CAAAtF,EAAA,KAErC3L,SAAS,CAACiK,aAAa,CAACmH,aAAa,OAAAH,UAAA,CAAAtF,EAAA,KAErC3L,SAAS,CAACiK,aAAa,CAACoH,kBAAkB,OAAAJ,UAAA,CAAAtF,EAAA,KAE1C3L,SAAS,CAACiK,aAAa,CAACqH,mBAAmB,QAAAL,UAAA,CAAAtF,EAAA,KAE3C3L,SAAS,CAACiK,aAAa,CAACsH,sBAAsB,QAAAN,UAAA,CAAAtF,EAAA,KAE9C3L,SAAS,CAACiK,aAAa,CAACuH,mBAAmB,QAAAP,UAAA,CAAAtF,EAAA,KAE3C3L,SAAS,CAACiK,aAAa,CAACwH,oBAAoB,QAAAR,UAAA,CAAAtF,EAAA,KAE5C3L,SAAS,CAACiK,aAAa,CAACyH,oBAAoB,QAAAT,UAAA,CAAAtF,EAAA,KAE5C3L,SAAS,CAACiK,aAAa,CAAC0H,oBAAoB,QAAAV,UAAA,CAAAtF,EAAA,KAE5C3L,SAAS,CAACiK,aAAa,CAAC2H,oBAAoB,QAAAX,UAAA,CAAAtF,EAAA,KAC5C3L,SAAS,CAACiK,aAAa,CAAC4H,iBAAiB,QAAAZ,UAAA,CAAAtF,EAAA,KAEzC3L,SAAS,CAACiK,aAAa,CAAC6H,kBAAkB,QAAAb,UAAA,CAAAtF,EAAA,KAE1C3L,SAAS,CAACiK,aAAa,CAAC8H,uBAAuB,QAAAd,UAAA,CAAAtF,EAAA,KAE/C3L,SAAS,CAACiK,aAAa,CAAC+H,0BAA0B,QAAAf,UAAA,CAAAtF,EAAA,KAElD3L,SAAS,CAACiK,aAAa,CAACgI,iBAAiB;cAAA;YAAA;cAAA,OAAAhB,UAAA,CAAAjW,MAAA,WA9BnC,IAAI,CAACkX,oBAAoB,EAAE;YAAA;cAAA,OAAAjB,UAAA,CAAAjW,MAAA,WAE3B,IAAI,CAACmX,SAAS,CAAC/N,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAEtB,IAAI,CAACoX,cAAc,CAAChO,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAE3B,IAAI,CAACqX,cAAc,CAACjO,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAE3B,IAAI,CAACsX,mBAAmB,CAAClO,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAEhC,IAAI,CAACuX,oBAAoB,CAACnO,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAEjC,IAAI,CAACwX,uBAAuB,CAACpO,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAEpC,IAAI,CAACyX,oBAAoB,CAACrO,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAEjC,IAAI,CAAC0X,qBAAqB,CAACtO,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAElC,IAAI,CAAC2X,4BAA4B,EAAE;YAAA;cAAA,OAAA1B,UAAA,CAAAjW,MAAA,WAEnC,IAAI,CAAC4X,qBAAqB,CAACxO,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAGlC,IAAI,CAAC6X,qBAAqB,CAACzO,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAElC,IAAI,CAAC8X,mBAAmB,CAAC1O,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAEhC,IAAI,CAAC+X,wBAAwB,CAAC3O,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAErC,IAAI,CAACgY,2BAA2B,CAAC5O,MAAM,CAAC;YAAA;cAAA,OAAA6M,UAAA,CAAAjW,MAAA,WAExC,IAAI,CAACiY,kBAAkB,CAAC7O,MAAM,CAAC;YAAA;cAAA6M,UAAA,CAAAzV,IAAA;cAAA,OAE1B,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAAqL,UAAA,CAAApW,IAAA;cAAA,OAAAoW,UAAA,CAAAjW,MAAA,WACJ4K,KAAK,CAACsN,0BAA0B,CAACxR,OAAO,EAAE,IAAI,CAACO,UAAU,CAAC;YAAA;YAAA;cAAA,OAAAgP,UAAA,CAAAhT,IAAA;UAAA;QAAA,GAAA8S,SAAA;MAAA,CACpE;MAAA,SAAAd,2BAAAkD,IAAA;QAAA,OAAArC,2BAAA,CAAAvK,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAyJ,0BAAA;IAAA;EAAA;IAAArZ,GAAA;IAAAE,KAAA,EACD,SAAA+Y,iCAAiCnO,OAAO,EAAE;MACtC,IAAQlI,MAAM,GAAKkI,OAAO,CAAlBlI,MAAM;MACd,IAAM4K,MAAM,GAAG1C,OAAO,CAAC0C,MAAM,IAAI,EAAE;MACnC,QAAQ5K,MAAM;QACV,KAAKwG,SAAS,CAACiK,aAAa,CAACmJ,aAAa;UACtC,OAAO,IAAI,CAACC,cAAc,CAACjP,MAAM,CAAC;QACtC,KAAKpE,SAAS,CAACiK,aAAa,CAACqJ,kBAAkB;UAC3C,OAAO,IAAI,CAACC,mBAAmB,EAAE;QACrC,KAAKvT,SAAS,CAACiK,aAAa,CAACuJ,+BAA+B;UACxD,OAAO,IAAI,CAACC,gCAAgC,EAAE;QAClD,KAAKzT,SAAS,CAACiK,aAAa,CAACyJ,oBAAoB;UAC7C,OAAO,IAAI,CAACC,qBAAqB,CAACvP,MAAM,CAAC;QAC7C,KAAKpE,SAAS,CAACiK,aAAa,CAAC2J,iBAAiB;UAC1C,OAAO,IAAI,CAACC,kBAAkB,CAACzP,MAAM,CAAC;MAAC;MAE/C,OAAOjJ,SAAS;IACpB;EAAC;IAAAvE,GAAA;IAAAE,KAAA,EACD,SAAAkZ,2BAA2BtO,OAAO,EAAE;MAChC,QAAQA,OAAO,CAAClI,MAAM;QAClB,KAAKwG,SAAS,CAACiK,aAAa,CAAC6J,aAAa;QAC1C,KAAK9T,SAAS,CAACiK,aAAa,CAAC8J,eAAe;UACxC,OAAO,IAAI,CAACnT,oBAAoB,CAACoT,aAAa,CAACtS,OAAO,CAAC;MAAC;MAEhE,OAAOvG,SAAS;IACpB;EAAC;IAAAvE,GAAA;IAAAE,KAAA,EACD,SAAAmd,gBAAgBC,aAAa,EAAE;MAC3B,IAAI;QACA,IAAMC,UAAU,GAAG,CAAC,CAAC,EAAEtU,MAAM,CAACkE,mBAAmB,EAAEmQ,aAAa,CAAC;QACjE,IAAME,kBAAkB,GAAG,IAAI,CAACrT,UAAU,CAAC8C,GAAG,CAAC,UAAAC,OAAO;UAAA,OAAI,CAAC,CAAC,EAAEjE,MAAM,CAACkE,mBAAmB,EAAED,OAAO,CAAC;QAAA,EAAC;QACnG,OAAOsQ,kBAAkB,CAACC,QAAQ,CAACF,UAAU,CAAC;MAClD,CAAC,CACD,OAAO3T,EAAE,EAAE,CAAE;MACb,OAAO,KAAK;IAChB;EAAC;IAAA5J,GAAA;IAAAE,KAAA,EACD,SAAAwd,oBAAoBJ,aAAa,EAAE;MAC/B,IAAI1T,EAAE;MACN,IAAI,CAAC,IAAI,CAACyT,eAAe,CAACC,aAAa,CAAC,EAAE;QACtC,CAAC1T,EAAE,GAAG,IAAI,CAACkC,UAAU,MAAM,IAAI,IAAIlC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACgJ,GAAG,CAACjK,kBAAkB,CAACkK,MAAM,CAAC8K,2BAA2B,CAAC;QACzH,MAAM,IAAI/Z,KAAK,CAAC,0BAA0B,CAAC;MAC/C;IACJ;EAAC;IAAA5D,GAAA;IAAAE,KAAA,EACD,SAAA0d,0BAA0BC,EAAE,EAAE;MAC1B,IAAMC,WAAW,GAAGD,EAAE,CAACE,IAAI,GACrB,CAAC,CAAC,EAAE9U,MAAM,CAACkE,mBAAmB,EAAE0Q,EAAE,CAACE,IAAI,CAAC,GACxC,IAAI,CAACtM,eAAe;MAC1B,IAAI,CAACqM,WAAW,EAAE;QACd,MAAM,IAAIla,KAAK,CAAC,iCAAiC,CAAC;MACtD;MACA,IAAI,CAAC8Z,mBAAmB,CAACI,WAAW,CAAC;MACrC,IAAME,SAAS,GAAGH,EAAE,CAACI,EAAE,GAAG,CAAC,CAAC,EAAEhV,MAAM,CAACkE,mBAAmB,EAAE0Q,EAAE,CAACI,EAAE,CAAC,GAAG,IAAI;MACvE,IAAMC,QAAQ,GAAGL,EAAE,CAAC3d,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE+I,MAAM,CAACkV,QAAQ,EAAEN,EAAE,CAAC3d,KAAK,CAAC,GAAG,IAAIwI,OAAO,CAAC0V,OAAO,CAAC,CAAC,CAAC;MAC3F,IAAM7Q,IAAI,GAAGsQ,EAAE,CAACtQ,IAAI,GAAG,CAAC,CAAC,EAAEtE,MAAM,CAACoV,YAAY,EAAER,EAAE,CAACtQ,IAAI,CAAC,GAAG+Q,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC1E,IAAMC,KAAK,GAAGX,EAAE,CAACW,KAAK,IAAI,IAAI,GAAG,CAAC,CAAC,EAAEvV,MAAM,CAACyF,eAAe,EAAEmP,EAAE,CAACW,KAAK,CAAC,GAAG,IAAI;MAC7E,IAAMC,aAAa,GAAGZ,EAAE,CAACa,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC,EAAEzV,MAAM,CAACkV,QAAQ,EAAEN,EAAE,CAACa,QAAQ,CAAC,GAAG,IAAI;MACpF,IAAMC,YAAY,GAAGd,EAAE,CAACc,YAAY,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE1V,MAAM,CAACkV,QAAQ,EAAEN,EAAE,CAACc,YAAY,CAAC,GAAG,IAAI;MAC3F,IAAMC,oBAAoB,GAAGf,EAAE,CAACe,oBAAoB,IAAI,IAAI,GACtD,CAAC,CAAC,EAAE3V,MAAM,CAACkV,QAAQ,EAAEN,EAAE,CAACe,oBAAoB,CAAC,GAC7C,IAAI;MACV,IAAMC,QAAQ,GAAGhB,EAAE,CAACiB,GAAG,IAAI,IAAI,GAAG,CAAC,CAAC,EAAE7V,MAAM,CAACkV,QAAQ,EAAEN,EAAE,CAACiB,GAAG,CAAC,GAAG,IAAI;MACrE,IAAM3T,OAAO,GAAG,IAAI,CAACX,UAAU,EAAE;MACjC,OAAO;QACHsT,WAAW,EAAXA,WAAW;QACXE,SAAS,EAATA,SAAS;QACTE,QAAQ,EAARA,QAAQ;QACR3Q,IAAI,EAAJA,IAAI;QACJiR,KAAK,EAALA,KAAK;QACLC,aAAa,EAAbA,aAAa;QACbE,YAAY,EAAZA,YAAY;QACZC,oBAAoB,EAApBA,oBAAoB;QACpBC,QAAQ,EAARA,QAAQ;QACR1T,OAAO,EAAPA;MACJ,CAAC;IACL;EAAC;IAAAnL,GAAA;IAAAE,KAAA,EACD,SAAAuQ,cAAA,EAAgB;MACZ,OAAO,IAAI,CAACtG,UAAU,CAACtE,MAAM,GAAG,CAAC;IACrC;EAAC;IAAA7F,GAAA;IAAAE,KAAA,EACD,SAAA6e,sBAAA,EAAwB;MACpB,IAAI,CAAC,IAAI,CAACtO,aAAa,EAAE,EAAE;QACvB,MAAM7H,QAAQ,CAACmJ,cAAc,CAACF,QAAQ,CAACmN,YAAY,CAAC,CAAC,CAAC,CAAC;MAC3D;IACJ;EAAC;IAAAhf,GAAA;IAAAE,KAAA,EACD,SAAA6b,6BAAA,EAA+B;MAC3B,MAAMnT,QAAQ,CAACmJ,cAAc,CAACF,QAAQ,CAACoN,iBAAiB,CAAC,CAAC,CAAC,CAAC;IAChE;EAAC;IAAAjf,GAAA;IAAAE,KAAA;MAAA,IAAAgf,qBAAA,GAAAjgB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAA8Y,UAA2BlN,OAAO,EAAE/E,OAAO,EAAEkS,SAAS,EAAEC,aAAa;QAAA,IAAArQ,KAAA,EAAAqB,GAAA;QAAA,OAAA9Q,mBAAA,GAAAyB,IAAA,UAAAse,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAArY,IAAA,GAAAqY,UAAA,CAAA3a,IAAA;YAAA;cACjE,IAAI,CAAC8Y,mBAAmB,CAACxQ,OAAO,CAAC;cAACqS,UAAA,CAAArY,IAAA;cAAAqY,UAAA,CAAA3a,IAAA;cAAA,OAEV,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAAuQ,UAAA,CAAAtb,IAAA;cAAAsb,UAAA,CAAA3a,IAAA;cAAA,OACOoK,KAAK,CAACwQ,mBAAmB,CAACvN,OAAO,EAAE/E,OAAO,EAAEkS,SAAS,EAAEC,aAAa,CAAC,CAACjQ,OAAO;YAAA;cAAzFiB,GAAG,GAAAkP,UAAA,CAAAtb,IAAA;cAAA,OAAAsb,UAAA,CAAAnb,MAAA,WACF;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAAEiN,GAAG,CAACjN;cAAO,CAAC;YAAA;cAAAmc,UAAA,CAAArY,IAAA;cAAAqY,UAAA,CAAAxK,EAAA,GAAAwK,UAAA;cAAA,MAGhD,OAAOA,UAAA,CAAAxK,EAAA,CAAI9C,OAAO,KAAK,QAAQ,IAC/BsN,UAAA,CAAAxK,EAAA,CAAI9C,OAAO,CAAC8E,KAAK,CAAC,oBAAoB,CAAC;gBAAAwI,UAAA,CAAA3a,IAAA;gBAAA;cAAA;cAAA,MACjCgE,QAAQ,CAACmJ,cAAc,CAACF,QAAQ,CAAC4N,mBAAmB,CAAC,+BAA+B,CAAC;YAAA;cAAA,MAAAF,UAAA,CAAAxK,EAAA;YAAA;YAAA;cAAA,OAAAwK,UAAA,CAAAlY,IAAA;UAAA;QAAA,GAAA8X,SAAA;MAAA,CAItG;MAAA,SAAAO,qBAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;QAAA,OAAAZ,qBAAA,CAAAvP,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA8P,oBAAA;IAAA;EAAA;IAAA1f,GAAA;IAAAE,KAAA;MAAA,IAAA6f,kCAAA,GAAA9gB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAA2Z,UAAwC/N,OAAO,EAAEgO,SAAS,EAAEb,SAAS;QAAA,IAAApQ,KAAA,EAAAqB,GAAA;QAAA,OAAA9Q,mBAAA,GAAAyB,IAAA,UAAAkf,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAjZ,IAAA,GAAAiZ,UAAA,CAAAvb,IAAA;YAAA;cAAAub,UAAA,CAAAvb,IAAA;cAAA,OAC7C,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAAmR,UAAA,CAAAlc,IAAA;cAAAkc,UAAA,CAAAvb,IAAA;cAAA,OACOoK,KAAK,CAACoR,gCAAgC,CAACnO,OAAO,EAAEgO,SAAS,EAAEb,SAAS,CAAC,CAAChQ,OAAO;YAAA;cAAzFiB,GAAG,GAAA8P,UAAA,CAAAlc,IAAA;cAAA,OAAAkc,UAAA,CAAA/b,MAAA,WACF;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAAEiN,GAAG,CAACjN;cAAO,CAAC;YAAA;YAAA;cAAA,OAAA+c,UAAA,CAAA9Y,IAAA;UAAA;QAAA,GAAA2Y,SAAA;MAAA,CACvD;MAAA,SAAAK,kCAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;QAAA,OAAAT,kCAAA,CAAApQ,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAyQ,iCAAA;IAAA;EAAA;IAAArgB,GAAA;IAAAE,KAAA,EACD,SAAAuZ,cAAA,EAAgB;MACZ,OAAA1a,kBAAA,CAAW,IAAI,CAACoL,UAAU;IAC9B;EAAC;IAAAnK,GAAA;IAAAE,KAAA,EACD,SAAAyZ,cAAA,EAAgB;MACZ,OAAO,IAAI,CAAClI,eAAe,IAAI,IAAI;IACvC;EAAC;IAAAzR,GAAA;IAAAE,KAAA,EACD,SAAA6Z,aAAA,EAAe;MACX,OAAO,IAAI,CAACvP,UAAU,EAAE,CAACkC,QAAQ,CAAC,EAAE,CAAC;IACzC;EAAC;IAAA1M,GAAA;IAAAE,KAAA,EACD,SAAA+Z,aAAA,EAAe;MACX,OAAO,CAAC,CAAC,EAAEhR,MAAM,CAACwX,sBAAsB,EAAE,IAAI,CAACjW,UAAU,EAAE,CAAC;IAChE;EAAC;IAAAxK,GAAA;IAAAE,KAAA,EACD,SAAAsK,WAAA,EAAa;MACT,IAAMgC,UAAU,GAAG,IAAI,CAACd,QAAQ,CAACmB,OAAO,CAACvD,oBAAoB,CAAC;MAC9D,IAAI,CAACkD,UAAU,EAAE;QACb,OAAO,CAAC,CAAC,EAAEvD,MAAM,CAACyF,eAAe,EAAE,IAAI,CAACxD,gBAAgB,CAAC;MAC7D;MACA,IAAMC,OAAO,GAAGuV,QAAQ,CAAClU,UAAU,EAAE,EAAE,CAAC;MACxC,OAAO,CAAC,CAAC,EAAEvD,MAAM,CAACyF,eAAe,EAAEvD,OAAO,CAAC;IAC/C;EAAC;IAAAnL,GAAA;IAAAE,KAAA;MAAA,IAAAygB,qBAAA,GAAA1hB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAua,UAAA;QAAA,IAAAhX,EAAA,EAAAyG,GAAA,EAAArB,KAAA;QAAA,OAAAzP,mBAAA,GAAAyB,IAAA,UAAA6f,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA5Z,IAAA,GAAA4Z,UAAA,CAAAlc,IAAA;YAAA;cAEI,CAACgF,EAAE,GAAG,IAAI,CAACkC,UAAU,MAAM,IAAI,IAAIlC,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAACgJ,GAAG,CAACjK,kBAAkB,CAACkK,MAAM,CAACC,kBAAkB,EAAE;gBAC7GlQ,MAAM,EAAE,gCAAgC;gBACxCmQ,gBAAgB,EAAE,IAAI,CAAC5I,UAAU,CAACtE,MAAM;gBACxCmN,aAAa,EAAE,IAAI,CAAC9I,MAAM,GACpBrB,SAAS,CAACoK,OAAO,CAACC,IAAI,CAAC,IAAI,CAAChJ,MAAM,CAACiJ,OAAO,CAACC,EAAE,CAAC,GAC9C7O;cACV,CAAC,CAAC;cAAC,MACC,IAAI,CAAC4F,UAAU,CAACtE,MAAM,GAAG,CAAC;gBAAAib,UAAA,CAAAlc,IAAA;gBAAA;cAAA;cAAA,OAAAkc,UAAA,CAAA1c,MAAA,WACnBsC,OAAO,CAACzD,OAAO,CAAC;gBACnBkR,OAAO,EAAE,KAAK;gBACdf,EAAE,EAAE,CAAC;gBACLhQ,MAAM,EAAE,IAAI,CAAC+G;cACjB,CAAC,CAAC;YAAA;cAAA2W,UAAA,CAAA5Z,IAAA;cAAA4Z,UAAA,CAAAlc,IAAA;cAAA,OAIkB,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAA8R,UAAA,CAAA7c,IAAA;cAAA6c,UAAA,CAAAlc,IAAA;cAAA,OACCoK,KAAK,CAAC0B,uBAAuB,EAAE,CAACtB,OAAO;YAAA;cAAnDiB,GAAG,GAAAyQ,UAAA,CAAA7c,IAAA;cAAA6c,UAAA,CAAAlc,IAAA;cAAA;YAAA;cAAAkc,UAAA,CAAA5Z,IAAA;cAAA4Z,UAAA,CAAA/L,EAAA,GAAA+L,UAAA;cAAA,MAGC,OAAOA,UAAA,CAAA/L,EAAA,CAAI9C,OAAO,KAAK,QAAQ,IAC/B6O,UAAA,CAAA/L,EAAA,CAAI9C,OAAO,CAAC8E,KAAK,CAAC,oBAAoB,CAAC;gBAAA+J,UAAA,CAAAlc,IAAA;gBAAA;cAAA;cAAA,MACjCgE,QAAQ,CAACmJ,cAAc,CAACF,QAAQ,CAAC4N,mBAAmB,CAAC,mCAAmC,CAAC;YAAA;cAAA,MAAAqB,UAAA,CAAA/L,EAAA;YAAA;cAAA,IAIlG1E,GAAG,CAACjN,MAAM;gBAAA0d,UAAA,CAAAlc,IAAA;gBAAA;cAAA;cAAA,MACL,IAAIhB,KAAK,CAAC,4BAA4B,CAAC;YAAA;cAEjD,IAAI,CAACmH,aAAa,CAACsF,GAAG,CAACjN,MAAM,CAAC;cAAC,IACzB,IAAI,CAACmJ,QAAQ,IAAI,IAAI,CAACJ,iBAAiB;gBAAA2U,UAAA,CAAAlc,IAAA;gBAAA;cAAA;cAAAkc,UAAA,CAAAlc,IAAA;cAAA,OACnC,IAAI,CAAC4M,mBAAmB,CAAC,IAAI,CAAChH,UAAU,EAAE,CAAC;YAAA;cAAA,OAAAsW,UAAA,CAAA1c,MAAA,WAE9C;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAAE,IAAI,CAAC+G;cAAW,CAAC;YAAA;YAAA;cAAA,OAAA2W,UAAA,CAAAzZ,IAAA;UAAA;QAAA,GAAAuZ,SAAA;MAAA,CAC5D;MAAA,SAAAtF,qBAAA;QAAA,OAAAqF,qBAAA,CAAAhR,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA0L,oBAAA;IAAA;EAAA;IAAAtb,GAAA;IAAAE,KAAA,EACD,SAAAqb,UAAU/N,MAAM,EAAE;MACd,IAAI,CAACuR,qBAAqB,EAAE;MAC5B,IAAM7R,OAAO,GAAG,CAAC,CAAC,EAAEjE,MAAM,CAACkE,mBAAmB,EAAEK,MAAM,CAAC,CAAC,CAAC,CAAC;MAC1D,IAAMyE,OAAO,GAAG,CAAC,CAAC,EAAEhJ,MAAM,CAACoV,YAAY,EAAE7Q,MAAM,CAAC,CAAC,CAAC,CAAC;MACnD,OAAO,IAAI,CAACkS,oBAAoB,CAACzN,OAAO,EAAE/E,OAAO,EAAE,KAAK,CAAC;IAC7D;EAAC;IAAAlN,GAAA;IAAAE,KAAA,EACD,SAAAsb,eAAehO,MAAM,EAAE;MACnB,IAAMyE,OAAO,GAAG,CAAC,CAAC,EAAEhJ,MAAM,CAACoV,YAAY,EAAE7Q,MAAM,CAAC,CAAC,CAAC,CAAC;MACnD,IAAMyS,SAAS,GAAG,CAAC,CAAC,EAAEhX,MAAM,CAACoV,YAAY,EAAE7Q,MAAM,CAAC,CAAC,CAAC,CAAC;MACrD,OAAO,IAAI,CAAC6S,iCAAiC,CAACpO,OAAO,EAAEgO,SAAS,EAAE,KAAK,CAAC;IAC5E;EAAC;IAAAjgB,GAAA;IAAAE,KAAA,EACD,SAAAub,eAAejO,MAAM,EAAE;MACnB,IAAI,CAACuR,qBAAqB,EAAE;MAC5B,IAAM9M,OAAO,GAAG,CAAC,CAAC,EAAEhJ,MAAM,CAACoV,YAAY,EAAE7Q,MAAM,CAAC,CAAC,CAAC,CAAC;MACnD,IAAMN,OAAO,GAAG,CAAC,CAAC,EAAEjE,MAAM,CAACkE,mBAAmB,EAAEK,MAAM,CAAC,CAAC,CAAC,CAAC;MAC1D,OAAO,IAAI,CAACkS,oBAAoB,CAACzN,OAAO,EAAE/E,OAAO,EAAE,IAAI,CAAC;IAC5D;EAAC;IAAAlN,GAAA;IAAAE,KAAA,EACD,SAAAwb,oBAAoBlO,MAAM,EAAE;MACxB,IAAMyE,OAAO,GAAG,CAAC,CAAC,EAAEhJ,MAAM,CAACoV,YAAY,EAAE7Q,MAAM,CAAC,CAAC,CAAC,CAAC;MACnD,IAAMyS,SAAS,GAAG,CAAC,CAAC,EAAEhX,MAAM,CAACoV,YAAY,EAAE7Q,MAAM,CAAC,CAAC,CAAC,CAAC;MACrD,OAAO,IAAI,CAAC6S,iCAAiC,CAACpO,OAAO,EAAEgO,SAAS,EAAE,IAAI,CAAC;IAC3E;EAAC;IAAAjgB,GAAA;IAAAE,KAAA;MAAA,IAAA6gB,qBAAA,GAAA9hB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAA2a,UAA2BxT,MAAM;QAAA,IAAAqQ,EAAA,EAAA7O,KAAA,EAAAqB,GAAA;QAAA,OAAA9Q,mBAAA,GAAAyB,IAAA,UAAAigB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAha,IAAA,GAAAga,UAAA,CAAAtc,IAAA;YAAA;cAC7B,IAAI,CAACma,qBAAqB,EAAE;cACtBlB,EAAE,GAAG,IAAI,CAACD,yBAAyB,CAACpQ,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;cAAA0T,UAAA,CAAAha,IAAA;cAAAga,UAAA,CAAAtc,IAAA;cAAA,OAElC,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAAkS,UAAA,CAAAjd,IAAA;cAAAid,UAAA,CAAAtc,IAAA;cAAA,OACOoK,KAAK,CAACmS,uBAAuB,CAACtD,EAAE,CAAC,CAACzO,OAAO;YAAA;cAArDiB,GAAG,GAAA6Q,UAAA,CAAAjd,IAAA;cAAA,OAAAid,UAAA,CAAA9c,MAAA,WACF;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAAEiN,GAAG,CAACjN;cAAO,CAAC;YAAA;cAAA8d,UAAA,CAAAha,IAAA;cAAAga,UAAA,CAAAnM,EAAA,GAAAmM,UAAA;cAAA,MAGhD,OAAOA,UAAA,CAAAnM,EAAA,CAAI9C,OAAO,KAAK,QAAQ,IAC/BiP,UAAA,CAAAnM,EAAA,CAAI9C,OAAO,CAAC8E,KAAK,CAAC,oBAAoB,CAAC;gBAAAmK,UAAA,CAAAtc,IAAA;gBAAA;cAAA;cAAA,MACjCgE,QAAQ,CAACmJ,cAAc,CAACF,QAAQ,CAAC4N,mBAAmB,CAAC,mCAAmC,CAAC;YAAA;cAAA,MAAAyB,UAAA,CAAAnM,EAAA;YAAA;YAAA;cAAA,OAAAmM,UAAA,CAAA7Z,IAAA;UAAA;QAAA,GAAA2Z,SAAA;MAAA,CAI1G;MAAA,SAAArF,qBAAAyF,IAAA;QAAA,OAAAL,qBAAA,CAAApR,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA+L,oBAAA;IAAA;EAAA;IAAA3b,GAAA;IAAAE,KAAA;MAAA,IAAAmhB,wBAAA,GAAApiB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAib,UAA8B9T,MAAM;QAAA,IAAA+T,iBAAA,EAAAvS,KAAA,EAAAqB,GAAA;QAAA,OAAA9Q,mBAAA,GAAAyB,IAAA,UAAAwgB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAva,IAAA,GAAAua,UAAA,CAAA7c,IAAA;YAAA;cAC1B2c,iBAAiB,GAAG,CAAC,CAAC,EAAEtY,MAAM,CAACoV,YAAY,EAAE7Q,MAAM,CAAC,CAAC,CAAC,CAAC;cAAAiU,UAAA,CAAA7c,IAAA;cAAA,OACzC,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAAyS,UAAA,CAAAxd,IAAA;cAAAwd,UAAA,CAAA7c,IAAA;cAAA,OACOoK,KAAK,CAAC0S,yBAAyB,CAACH,iBAAiB,EAAE,IAAI,CAAC/W,UAAU,EAAE,CAAC,CAAC4E,OAAO;YAAA;cAAzFiB,GAAG,GAAAoR,UAAA,CAAAxd,IAAA;cAAA,OAAAwd,UAAA,CAAArd,MAAA,WACF;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAAEiN,GAAG,CAACjN;cAAO,CAAC;YAAA;YAAA;cAAA,OAAAqe,UAAA,CAAApa,IAAA;UAAA;QAAA,GAAAia,SAAA;MAAA,CACvD;MAAA,SAAA1F,wBAAA+F,IAAA;QAAA,OAAAN,wBAAA,CAAA1R,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAgM,uBAAA;IAAA;EAAA;IAAA5b,GAAA;IAAAE,KAAA;MAAA,IAAA0hB,qBAAA,GAAA3iB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAwb,UAA2BrU,MAAM;QAAA,IAAAqQ,EAAA,EAAA7O,KAAA,EAAAqB,GAAA;QAAA,OAAA9Q,mBAAA,GAAAyB,IAAA,UAAA8gB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA7a,IAAA,GAAA6a,UAAA,CAAAnd,IAAA;YAAA;cAC7B,IAAI,CAACma,qBAAqB,EAAE;cACtBlB,EAAE,GAAG,IAAI,CAACD,yBAAyB,CAACpQ,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;cAAAuU,UAAA,CAAA7a,IAAA;cAAA6a,UAAA,CAAAnd,IAAA;cAAA,OAElC,IAAI,CAAC6I,eAAe,EAAE;YAAA;cAApCuB,KAAK,GAAA+S,UAAA,CAAA9d,IAAA;cAAA8d,UAAA,CAAAnd,IAAA;cAAA,OACOoK,KAAK,CAACgT,gCAAgC,CAACnE,EAAE,CAAC,CAACzO,OAAO;YAAA;cAA9DiB,GAAG,GAAA0R,UAAA,CAAA9d,IAAA;cAAA,OAAA8d,UAAA,CAAA3d,MAAA,WACF;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAAEiN,GAAG,CAACjN;cAAO,CAAC;YAAA;cAAA2e,UAAA,CAAA7a,IAAA;cAAA6a,UAAA,CAAAhN,EAAA,GAAAgN,UAAA;cAAA,MAGhD,OAAOA,UAAA,CAAAhN,EAAA,CAAI9C,OAAO,KAAK,QAAQ,IAC/B8P,UAAA,CAAAhN,EAAA,CAAI9C,OAAO,CAAC8E,KAAK,CAAC,oBAAoB,CAAC;gBAAAgL,UAAA,CAAAnd,IAAA;gBAAA;cAAA;cAAA,MACjCgE,QAAQ,CAACmJ,cAAc,CAACF,QAAQ,CAAC4N,mBAAmB,CAAC,mCAAmC,CAAC;YAAA;cAAA,MAAAsC,UAAA,CAAAhN,EAAA;YAAA;YAAA;cAAA,OAAAgN,UAAA,CAAA1a,IAAA;UAAA;QAAA,GAAAwa,SAAA;MAAA,CAI1G;MAAA,SAAAhG,qBAAAoG,IAAA;QAAA,OAAAL,qBAAA,CAAAjS,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAiM,oBAAA;IAAA;EAAA;IAAA7b,GAAA;IAAAE,KAAA;MAAA,IAAAgiB,oBAAA,GAAAjjB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAA8b,UAA4B3U,MAAM;QAAA,IAAA4U,SAAA,EAAAlV,OAAA,EAAA+E,OAAA,EAAAoQ,aAAA;QAAA,OAAA9iB,mBAAA,GAAAyB,IAAA,UAAAshB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAArb,IAAA,GAAAqb,UAAA,CAAA3d,IAAA;YAAA;cAC9B,IAAI,CAACma,qBAAqB,EAAE;cACtBqD,SAAS,GAAG,CAAC,CAAC,EAAEnZ,MAAM,CAACuZ,sBAAsB,EAAEhV,MAAM,CAAC,CAAC,CAAC,CAAC;cACzDN,OAAO,GAAG,CAAC,CAAC,EAAEjE,MAAM,CAACkE,mBAAmB,EAAEK,MAAM,CAAC,CAAC,CAAC,CAAC;cAC1D,IAAI,CAACkQ,mBAAmB,CAACxQ,OAAO,CAAC;cAC3B+E,OAAO,GAAG/I,iBAAiB,CAACkV,OAAO,CAACqE,0BAA0B,CAAC;gBAAElV,IAAI,EAAE6U;cAAU,CAAC,CAAC;cACnFC,aAAa,GAAG1J,IAAI,CAACC,SAAS,CAACwJ,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;cAAA,OAAAG,UAAA,CAAAne,MAAA,WACjD,IAAI,CAACsb,oBAAoB,CAACzN,OAAO,EAAE/E,OAAO,EAAE,KAAK,EAAEmV,aAAa,CAAC;YAAA;YAAA;cAAA,OAAAE,UAAA,CAAAlb,IAAA;UAAA;QAAA,GAAA8a,SAAA;MAAA,CAC3E;MAAA,SAAArG,sBAAA4G,IAAA;QAAA,OAAAR,oBAAA,CAAAvS,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAkM,qBAAA;IAAA;EAAA;IAAA9b,GAAA;IAAAE,KAAA;MAAA,IAAAyiB,qBAAA,GAAA1jB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAuc,UAA4BpV,MAAM;QAAA,IAAAN,OAAA,EAAAkV,SAAA,EAAAnQ,OAAA,EAAAoQ,aAAA;QAAA,OAAA9iB,mBAAA,GAAAyB,IAAA,UAAA6hB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA5b,IAAA,GAAA4b,UAAA,CAAAle,IAAA;YAAA;cAC9B,IAAI,CAACma,qBAAqB,EAAE;cACtB7R,OAAO,GAAG,CAAC,CAAC,EAAEjE,MAAM,CAACkE,mBAAmB,EAAEK,MAAM,CAAC,CAAC,CAAC,CAAC;cACpD4U,SAAS,GAAG,CAAC,CAAC,EAAEnZ,MAAM,CAACuZ,sBAAsB,EAAEhV,MAAM,CAAC,CAAC,CAAC,CAAC;cAC/D,IAAI,CAACkQ,mBAAmB,CAACxQ,OAAO,CAAC;cAC3B+E,OAAO,GAAG/I,iBAAiB,CAACkV,OAAO,CAAC2E,uBAAuB,CAAC;gBAAExV,IAAI,EAAE6U;cAAU,CAAC,CAAC;cAChFC,aAAa,GAAG1J,IAAI,CAACC,SAAS,CAACwJ,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;cAAA,OAAAU,UAAA,CAAA1e,MAAA,WACjD,IAAI,CAACsb,oBAAoB,CAACzN,OAAO,EAAE/E,OAAO,EAAE,KAAK,EAAEmV,aAAa,CAAC;YAAA;YAAA;cAAA,OAAAS,UAAA,CAAAzb,IAAA;UAAA;QAAA,GAAAub,SAAA;MAAA,CAC3E;MAAA,SAAA5G,sBAAAgH,IAAA;QAAA,OAAAL,qBAAA,CAAAhT,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAoM,qBAAA;IAAA;EAAA;IAAAhc,GAAA;IAAAE,KAAA;MAAA,IAAA+iB,qBAAA,GAAAhkB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAA6c,UAA4B1V,MAAM;QAAA,IAAAN,OAAA,EAAAkV,SAAA,EAAAnQ,OAAA,EAAAoQ,aAAA;QAAA,OAAA9iB,mBAAA,GAAAyB,IAAA,UAAAmiB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAlc,IAAA,GAAAkc,UAAA,CAAAxe,IAAA;YAAA;cAC9B,IAAI,CAACma,qBAAqB,EAAE;cACtB7R,OAAO,GAAG,CAAC,CAAC,EAAEjE,MAAM,CAACkE,mBAAmB,EAAEK,MAAM,CAAC,CAAC,CAAC,CAAC;cACpD4U,SAAS,GAAG,CAAC,CAAC,EAAEnZ,MAAM,CAACuZ,sBAAsB,EAAEhV,MAAM,CAAC,CAAC,CAAC,CAAC;cAC/D,IAAI,CAACkQ,mBAAmB,CAACxQ,OAAO,CAAC;cAC3B+E,OAAO,GAAG/I,iBAAiB,CAACkV,OAAO,CAACiF,uBAAuB,CAAC;gBAAE9V,IAAI,EAAE6U;cAAU,CAAC,CAAC;cAChFC,aAAa,GAAG1J,IAAI,CAACC,SAAS,CAACwJ,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;cAAA,OAAAgB,UAAA,CAAAhf,MAAA,WACjD,IAAI,CAACsb,oBAAoB,CAACzN,OAAO,EAAE/E,OAAO,EAAE,KAAK,EAAEmV,aAAa,CAAC;YAAA;YAAA;cAAA,OAAAe,UAAA,CAAA/b,IAAA;UAAA;QAAA,GAAA6b,SAAA;MAAA,CAC3E;MAAA,SAAAjH,sBAAAqH,IAAA;QAAA,OAAAL,qBAAA,CAAAtT,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAqM,qBAAA;IAAA,IACD;EAAA;IAAAjc,GAAA;IAAAE,KAAA;MAAA,IAAAqjB,oBAAA,GAAAtkB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACA,SAAAmd,UAA0BhW,MAAM;QAAA,IAAAQ,MAAA,EAAAT,IAAA,EAAAnK,MAAA;QAAA,OAAA7D,mBAAA,GAAAyB,IAAA,UAAAyiB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAxc,IAAA,GAAAwc,UAAA,CAAA9e,IAAA;YAAA;cACtBoJ,MAAM,GAAGR,MAAM,CAAC,CAAC,CAAC;cAClBD,IAAI,GAAGC,MAAM,CAAC,CAAC,CAAC;cAAA,MAClB,OAAOD,IAAI,KAAK,QAAQ;gBAAAmW,UAAA,CAAA9e,IAAA;gBAAA;cAAA;cAAA,MAClB,IAAIhB,KAAK,CAAC,4BAA4B,CAAC;YAAA;cAAA,MAE7C,OAAOoK,MAAM,KAAK,QAAQ,IAAIA,MAAM,KAAK,IAAI;gBAAA0V,UAAA,CAAA9e,IAAA;gBAAA;cAAA;cAAA,MACvC,IAAIhB,KAAK,CAAC,6BAA6B,CAAC;YAAA;cAAA8f,UAAA,CAAA9e,IAAA;cAAA,OAE7B,IAAI,CAACqG,cAAc,CAAC+C,MAAM,EAAET,IAAI,CAAC;YAAA;cAAhDnK,MAAM,GAAAsgB,UAAA,CAAAzf,IAAA;cAAA,OAAAyf,UAAA,CAAAtf,MAAA,WACL;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAANA;cAAO,CAAC;YAAA;YAAA;cAAA,OAAAsgB,UAAA,CAAArc,IAAA;UAAA;QAAA,GAAAmc,SAAA;MAAA,CAC3C;MAAA,SAAAtH,oBAAAyH,IAAA;QAAA,OAAAJ,oBAAA,CAAA5T,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAsM,mBAAA;IAAA;EAAA;IAAAlc,GAAA;IAAAE,KAAA;MAAA,IAAA0jB,yBAAA,GAAA3kB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAwd,UAA+BrW,MAAM;QAAA,IAAA5D,EAAA,EAAAC,EAAA,EAAAia,EAAA,EAAAC,EAAA,EAAAjZ,OAAA,EAAAkZ,aAAA,EAAAC,OAAA;QAAA,OAAA1kB,mBAAA,GAAAyB,IAAA,UAAAkjB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAjd,IAAA,GAAAid,UAAA,CAAAvf,IAAA;YAAA;cAE3BkG,OAAO,GAAG0C,MAAM,CAAC,CAAC,CAAC;cAAA,MACrB,CAAC,CAAC5D,EAAE,GAAGkB,OAAO,CAACiF,OAAO,MAAM,IAAI,IAAInG,EAAE,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,EAAE,CAAC/D,MAAM,MAAM,CAAC;gBAAAse,UAAA,CAAAvf,IAAA;gBAAA;cAAA;cAAA,OAAAuf,UAAA,CAAA/f,MAAA,WACtE;gBACH+P,OAAO,EAAE,KAAK;gBACdf,EAAE,EAAE,CAAC;gBACL5P,KAAK,EAAE;kBAAE2O,IAAI,EAAE,CAAC;kBAAEF,OAAO;gBAAqC;cAClE,CAAC;YAAA;cAAA,MAED,CAACnH,OAAO,CAACmF,SAAS,IAAInF,OAAO,CAACmF,SAAS,CAACmU,IAAI,EAAE,KAAK,EAAE;gBAAAD,UAAA,CAAAvf,IAAA;gBAAA;cAAA;cAAA,MAC/CgE,QAAQ,CAACmJ,cAAc,CAAC0E,GAAG,CAAC4N,aAAa,CAAC,+BAA+B,CAAC;YAAA;cAAA,IAE/EvZ,OAAO,CAACqF,cAAc;gBAAAgU,UAAA,CAAAvf,IAAA;gBAAA;cAAA;cAAA,MACjBgE,QAAQ,CAACmJ,cAAc,CAAC0E,GAAG,CAAC4N,aAAa,CAAC,oCAAoC,CAAC;YAAA;cAEnFL,aAAa,GAAGtD,QAAQ,CAAC5V,OAAO,CAACK,OAAO,EAAE,EAAE,CAAC;cAAAgZ,UAAA,CAAAvf,IAAA;cAAA,OAC7B,IAAI,CAAC+L,gBAAgB,CAACqT,aAAa,EAAE,CAACna,EAAE,GAAGiB,OAAO,CAACiF,OAAO,MAAM,IAAI,IAAIlG,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE,EAAE,CAACia,EAAE,GAAGhZ,OAAO,CAACkF,iBAAiB,MAAM,IAAI,IAAI8T,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE,EAAEhZ,OAAO,CAACmF,SAAS,EAAE,CAAC8T,EAAE,GAAGjZ,OAAO,CAACoF,QAAQ,MAAM,IAAI,IAAI6T,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,EAAE,EAAEjZ,OAAO,CAACqF,cAAc,CAAC;YAAA;cAA9R8T,OAAO,GAAAE,UAAA,CAAAlgB,IAAA;cAAA,KACTggB,OAAO;gBAAAE,UAAA,CAAAvf,IAAA;gBAAA;cAAA;cAAA,OAAAuf,UAAA,CAAA/f,MAAA,WACA;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAAE;cAAK,CAAC;YAAA;cAAA,OAAA+gB,UAAA,CAAA/f,MAAA,WAGvC;gBACH+P,OAAO,EAAE,KAAK;gBACdf,EAAE,EAAE,CAAC;gBACL5P,KAAK,EAAE;kBAAE2O,IAAI,EAAE,CAAC;kBAAEF,OAAO;gBAAiC;cAC9D,CAAC;YAAA;YAAA;cAAA,OAAAkS,UAAA,CAAA9c,IAAA;UAAA;QAAA,GAAAwc,SAAA;MAAA,CAER;MAAA,SAAA1H,yBAAAmI,IAAA;QAAA,OAAAV,yBAAA,CAAAjU,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAuM,wBAAA;IAAA;EAAA;IAAAnc,GAAA;IAAAE,KAAA;MAAA,IAAAqkB,4BAAA,GAAAtlB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAme,UAAkChX,MAAM;QAAA,IAAA1C,OAAA;QAAA,OAAAvL,mBAAA,GAAAyB,IAAA,UAAAyjB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAxd,IAAA,GAAAwd,UAAA,CAAA9f,IAAA;YAAA;cAC9BkG,OAAO,GAAG0C,MAAM,CAAC,CAAC,CAAC;cAAAkX,UAAA,CAAA9f,IAAA;cAAA,OACnB,IAAI,CAAC4M,mBAAmB,CAACkP,QAAQ,CAAC5V,OAAO,CAACK,OAAO,EAAE,EAAE,CAAC,CAAC;YAAA;cAAA,OAAAuZ,UAAA,CAAAtgB,MAAA,WACtD;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAAE;cAAK,CAAC;YAAA;YAAA;cAAA,OAAAshB,UAAA,CAAArd,IAAA;UAAA;QAAA,GAAAmd,SAAA;MAAA,CACjD;MAAA,SAAApI,4BAAAuI,IAAA;QAAA,OAAAJ,4BAAA,CAAA5U,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAwM,2BAAA;IAAA;EAAA;IAAApc,GAAA;IAAAE,KAAA;MAAA,IAAA0kB,mBAAA,GAAA3lB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAwe,UAAyBrX,MAAM;QAAA,IAAA1C,OAAA,EAAAK,OAAA,EAAA2Z,gBAAA,EAAA5X,OAAA,EAAA2B,MAAA,EAAAE,KAAA,EAAAD,QAAA,EAAAuB,GAAA;QAAA,OAAA9Q,mBAAA,GAAAyB,IAAA,UAAA+jB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA9d,IAAA,GAAA8d,UAAA,CAAApgB,IAAA;YAAA;cACrBkG,OAAO,GAAImJ,KAAK,CAACC,OAAO,CAAC1G,MAAM,CAAC,GAAGA,MAAM,CAAC,CAAC,CAAC,GAAGA,MAAM;cAAA,IACtD1C,OAAO,CAAC/I,IAAI;gBAAAijB,UAAA,CAAApgB,IAAA;gBAAA;cAAA;cAAA,MACPgE,QAAQ,CAACmJ,cAAc,CAAC0E,GAAG,CAAC4N,aAAa,CAAC,kBAAkB,CAAC;YAAA;cAAA,MAEnE,CAACvZ,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAAC/I,IAAI,MAAM,OAAO;gBAAAijB,UAAA,CAAApgB,IAAA;gBAAA;cAAA;cAAA,MACtEgE,QAAQ,CAACmJ,cAAc,CAAC0E,GAAG,CAAC4N,aAAa,mBAAA7L,MAAA,CAAmB1N,OAAO,CAAC/I,IAAI,wBAAqB;YAAA;cAAA,IAEjG+I,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACpB,OAAO;gBAAAsb,UAAA,CAAApgB,IAAA;gBAAA;cAAA;cAAA,MAC7DgE,QAAQ,CAACmJ,cAAc,CAAC0E,GAAG,CAAC4N,aAAa,CAAC,sBAAsB,CAAC;YAAA;cAAA,IAErEvZ,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACpB,OAAO,CAACwD,OAAO;gBAAA8X,UAAA,CAAApgB,IAAA;gBAAA;cAAA;cAAA,MACrEgE,QAAQ,CAACmJ,cAAc,CAAC0E,GAAG,CAAC4N,aAAa,CAAC,qBAAqB,CAAC;YAAA;cAEpElZ,OAAO,GAAG,IAAI,CAACX,UAAU,EAAE;cAAAsa,gBAAA,GACYha,OAAO,CAACpB,OAAO,EAApDwD,OAAO,GAAA4X,gBAAA,CAAP5X,OAAO,EAAE2B,MAAM,GAAAiW,gBAAA,CAANjW,MAAM,EAAEE,KAAK,GAAA+V,gBAAA,CAAL/V,KAAK,EAAED,QAAQ,GAAAgW,gBAAA,CAARhW,QAAQ;cAAAkW,UAAA,CAAApgB,IAAA;cAAA,OACtB,IAAI,CAACuK,UAAU,CAACrE,OAAO,CAAC/I,IAAI,EAAEmL,OAAO,EAAE2B,MAAM,EAAEC,QAAQ,EAAEC,KAAK,EAAE5D,OAAO,CAAC;YAAA;cAApFkF,GAAG,GAAA2U,UAAA,CAAA/gB,IAAA;cAAA,OAAA+gB,UAAA,CAAA5gB,MAAA,WACF;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAAEiN;cAAI,CAAC;YAAA;YAAA;cAAA,OAAA2U,UAAA,CAAA3d,IAAA;UAAA;QAAA,GAAAwd,SAAA;MAAA,CAChD;MAAA,SAAAxI,mBAAA4I,IAAA;QAAA,OAAAL,mBAAA,CAAAjV,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAyM,kBAAA;IAAA;EAAA;IAAArc,GAAA;IAAAE,KAAA,EACD,SAAA2Z,qBAAqBrM,MAAM,EAAE;MACzB,IAAM0X,QAAQ,GAAG,CAAC,CAAC,EAAEjc,MAAM,CAACkc,eAAe,EAAE3X,MAAM,CAAC,CAAC,CAAC,CAAC;MACvD,OAAO,IAAI,CAAC1D,eAAe,CAACsb,eAAe,CAACF,QAAQ,CAAC;IACzD;EAAC;IAAAllB,GAAA;IAAAE,KAAA;MAAA,IAAAmlB,eAAA,GAAApmB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAif,UAAqB9X,MAAM;QAAA,IAAA+X,KAAA,EAAAL,QAAA;QAAA,OAAA3lB,mBAAA,GAAAyB,IAAA,UAAAwkB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAve,IAAA,GAAAue,UAAA,CAAA7gB,IAAA;YAAA;cACjB2gB,KAAK,GAAG/X,MAAM,CAAC,CAAC,CAAC;cAAAiY,UAAA,CAAA7gB,IAAA;cAAA,OACA,IAAI,CAACkF,eAAe,CAAC4b,SAAS,CAACH,KAAK,CAAC;YAAA;cAAtDL,QAAQ,GAAAO,UAAA,CAAAxhB,IAAA;cAAA,OAAAwhB,UAAA,CAAArhB,MAAA,WACP;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAAE8hB;cAAS,CAAC;YAAA;YAAA;cAAA,OAAAO,UAAA,CAAApe,IAAA;UAAA;QAAA,GAAAie,SAAA;MAAA,CACrD;MAAA,SAAA7I,eAAAkJ,IAAA;QAAA,OAAAN,eAAA,CAAA1V,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA6M,cAAA;IAAA;EAAA;IAAAzc,GAAA;IAAAE,KAAA;MAAA,IAAA0lB,oBAAA,GAAA3mB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAAwf,UAAA;QAAA,IAAAX,QAAA;QAAA,OAAA3lB,mBAAA,GAAAyB,IAAA,UAAA8kB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAA7e,IAAA,GAAA6e,UAAA,CAAAnhB,IAAA;YAAA;cAAAmhB,UAAA,CAAAnhB,IAAA;cAAA,OAC2B,IAAI,CAACkF,eAAe,CAACkc,cAAc,EAAE;YAAA;cAAtDd,QAAQ,GAAAa,UAAA,CAAA9hB,IAAA;cAAA,OAAA8hB,UAAA,CAAA3hB,MAAA,WACP;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAAE8hB;cAAS,CAAC;YAAA;YAAA;cAAA,OAAAa,UAAA,CAAA1e,IAAA;UAAA;QAAA,GAAAwe,SAAA;MAAA,CACrD;MAAA,SAAAlJ,oBAAA;QAAA,OAAAiJ,oBAAA,CAAAjW,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAA+M,mBAAA;IAAA;EAAA;IAAA3c,GAAA;IAAAE,KAAA;MAAA,IAAA+lB,iCAAA,GAAAhnB,iBAAA,eAAAM,mBAAA,GAAA8G,IAAA,CACD,SAAA6f,UAAA;QAAA,IAAAhB,QAAA;QAAA,OAAA3lB,mBAAA,GAAAyB,IAAA,UAAAmlB,WAAAC,UAAA;UAAA,kBAAAA,UAAA,CAAAlf,IAAA,GAAAkf,UAAA,CAAAxhB,IAAA;YAAA;cAAAwhB,UAAA,CAAAxhB,IAAA;cAAA,OAC2B,IAAI,CAACkF,eAAe,CAACuc,2BAA2B,EAAE;YAAA;cAAnEnB,QAAQ,GAAAkB,UAAA,CAAAniB,IAAA;cAAA,OAAAmiB,UAAA,CAAAhiB,MAAA,WACP;gBAAE+P,OAAO,EAAE,KAAK;gBAAEf,EAAE,EAAE,CAAC;gBAAEhQ,MAAM,EAAE8hB;cAAS,CAAC;YAAA;YAAA;cAAA,OAAAkB,UAAA,CAAA/e,IAAA;UAAA;QAAA,GAAA6e,SAAA;MAAA,CACrD;MAAA,SAAArJ,iCAAA;QAAA,OAAAoJ,iCAAA,CAAAtW,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAiN,gCAAA;IAAA;EAAA;IAAA7c,GAAA;IAAAE,KAAA,EACD,SAAA6c,sBAAsBvP,MAAM,EAAE;MAC1B,IAAM0X,QAAQ,GAAG,CAAC,CAAC,EAAEjc,MAAM,CAACkc,eAAe,EAAE3X,MAAM,CAAC,CAAC,CAAC,CAAC;MACvD,OAAO,IAAI,CAAC1D,eAAe,CAACwc,gBAAgB,CAACpB,QAAQ,CAAC;IAC1D;EAAC;IAAAllB,GAAA;IAAAE,KAAA,EACD,SAAA+c,mBAAmBzP,MAAM,EAAE;MACvB,IAAM0X,QAAQ,GAAG,CAAC,CAAC,EAAEjc,MAAM,CAACkc,eAAe,EAAE3X,MAAM,CAAC,CAAC,CAAC,CAAC;MACvD,OAAO,IAAI,CAAC1D,eAAe,CAACyc,aAAa,CAACrB,QAAQ,CAAC;IACvD;EAAC;IAAAllB,GAAA;IAAAE,KAAA,EACD,SAAAuN,gBAAA,EAAkB;MAAA,IAAA+Y,MAAA;MACd,IAAI,IAAI,CAACtc,MAAM,EAAE;QACb,OAAOxD,OAAO,CAACzD,OAAO,CAAC,IAAI,CAACiH,MAAM,CAAC;MACvC;MACA,OAAO,IAAI,CAACsB,cAAc,EAAE,CAAClI,IAAI,CAAC,UAAA0L,KAAK,EAAI;QACvCA,KAAK,CAACyX,mBAAmB,CAAC,UAACC,QAAQ,EAAEjO,YAAY;UAAA,OAAK+N,MAAI,CAACzb,aAAa,CAAC2b,QAAQ,EAAEjO,YAAY,CAAC;QAAA,EAAC;QACjGzJ,KAAK,CAAC2X,gBAAgB,CAAC,UAACxb,OAAO,EAAEE,UAAU,EAAK;UAC5Cmb,MAAI,CAACjc,kBAAkB,CAACc,UAAU,EAAEqV,QAAQ,CAACvV,OAAO,EAAE,EAAE,CAAC,CAAC;QAC9D,CAAC,CAAC;QACF6D,KAAK,CAAC4X,2BAA2B,CAACJ,MAAI,CAACtb,gBAAgB,CAAC;QACxDsb,MAAI,CAACtc,MAAM,GAAG8E,KAAK;QACnB,OAAOA,KAAK;MAChB,CAAC,CAAC;IACN;EAAC;EAAA,OAAAxG,sBAAA;AAAA,EA50BgCC,oBAAoB,CAAC2V,OAAO;AA80BjE5e,OAAO,CAACgJ,sBAAsB,GAAGA,sBAAsB"},"metadata":{},"sourceType":"script"}