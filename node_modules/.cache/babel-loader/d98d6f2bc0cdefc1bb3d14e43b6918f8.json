{"ast":null,"code":"import{ApolloClient,InMemoryCache,gql}from'@apollo/client';import{GRAPH_HOST}from'../constants';import{poolQuery}from'../queries/pools';var appClient=new ApolloClient({uri:GRAPH_HOST,cache:new InMemoryCache()});export var bombMaxi=function bombMaxi(poolId){return appClient.query({query:gql(poolQuery),variables:{id:poolId}});};//     .then((data) => return data.data.pool\n//        // console.log('Subgraph data: ', data.data.pool))\n// .catch((err) => {\n//     console.log('Error fetching data: ', err);\n// });","map":{"version":3,"names":["ApolloClient","InMemoryCache","gql","GRAPH_HOST","poolQuery","appClient","uri","cache","bombMaxi","poolId","query","variables","id"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/services/graph/fetchers/pools.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nimport { GRAPH_HOST } from '../constants';\n\nimport { poolQuery } from '../queries/pools';\n\nconst appClient = new ApolloClient({\n  uri: GRAPH_HOST,\n  cache: new InMemoryCache(),\n});\n\nexport const bombMaxi = (poolId: string) =>\n  appClient.query({\n    query: gql(poolQuery),\n    variables: {\n      id: poolId,\n    },\n  });\n//     .then((data) => return data.data.pool\n//        // console.log('Subgraph data: ', data.data.pool))\n// .catch((err) => {\n//     console.log('Error fetching data: ', err);\n\n// });\n"],"mappings":"AAAA,OAASA,YAAY,CAAEC,aAAa,CAAEC,GAAG,KAAQ,gBAAgB,CACjE,OAASC,UAAU,KAAQ,cAAc,CAEzC,OAASC,SAAS,KAAQ,kBAAkB,CAE5C,GAAM,CAAAC,SAAS,CAAG,GAAI,CAAAL,YAAY,CAAC,CACjCM,GAAG,CAAEH,UAAU,CACfI,KAAK,CAAE,GAAI,CAAAN,aAAa,EAC1B,CAAC,CAAC,CAEF,MAAO,IAAM,CAAAO,QAAQ,CAAG,QAAX,CAAAA,QAAQA,CAAIC,MAAc,QACrC,CAAAJ,SAAS,CAACK,KAAK,CAAC,CACdA,KAAK,CAAER,GAAG,CAACE,SAAS,CAAC,CACrBO,SAAS,CAAE,CACTC,EAAE,CAAEH,MACN,CACF,CAAC,CAAC,GACJ;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}