{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _inherits = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar _createSuper = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\nvar EventEmitter = require('events');\nvar dev = process.env.NODE_ENV === 'development';\nvar ConnectionManager = /*#__PURE__*/function (_EventEmitter) {\n  \"use strict\";\n\n  _inherits(ConnectionManager, _EventEmitter);\n  var _super = _createSuper(ConnectionManager);\n  function ConnectionManager(connections, targets, options) {\n    var _this;\n    _classCallCheck(this, ConnectionManager);\n    _this = _super.call(this);\n    _this.targets = targets;\n    _this.connections = connections;\n    _this.connected = false;\n    _this.status = 'loading';\n    _this.interval = options.interval || 5000;\n    _this.name = options.name || 'default';\n    _this.inSetup = true;\n    _this.connect();\n    return _this;\n  }\n  _createClass(ConnectionManager, [{\n    key: \"connect\",\n    value: function connect() {\n      var _this2 = this;\n      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      if (dev && index === 0) console.log(\"\\n\\n\\n\\nA connection cycle started for provider with name: \".concat(this.name));\n      if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n        if (dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider');\n      } else if (this.targets.length === 0) {\n        if (dev) console.log('No valid targets supplied');\n      } else {\n        var _this$targets$index = this.targets[index],\n          protocol = _this$targets$index.protocol,\n          location = _this$targets$index.location;\n        this.connection = this.connections[protocol](location);\n        this.connection.on('error', function (err) {\n          if (!_this2.connected) return _this2.connectionError(index, err);\n          if (_this2.listenerCount('error')) return _this2.emit('error', err);\n          console.warn('eth-provider - Uncaught connection error: ' + err.message);\n        });\n        this.connection.on('close', function (summary) {\n          _this2.connected = false;\n          _this2.emit('close');\n          if (!_this2.closing) _this2.refresh();\n        });\n        this.connection.on('connect', function () {\n          _this2.connection.target = _this2.targets[index];\n          _this2.connection.index = index;\n          _this2.targets[index].status = _this2.connection.status;\n          _this2.connected = true;\n          _this2.inSetup = false;\n          if (dev) console.log('Successfully connected to: ' + _this2.targets[index].location);\n          _this2.emit('connect');\n        });\n        this.connection.on('data', function (data) {\n          return _this2.emit('data', data);\n        });\n        this.connection.on('payload', function (payload) {\n          return _this2.emit('payload', payload);\n        });\n      }\n    }\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var _this3 = this;\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.interval;\n      if (dev) console.log(\"Reconnect queued for \".concat((interval / 1000).toFixed(2), \"s in the future\"));\n      clearTimeout(this.connectTimer);\n      this.connectTimer = setTimeout(function () {\n        return _this3.connect();\n      }, interval);\n    }\n  }, {\n    key: \"connectionError\",\n    value: function connectionError(index, err) {\n      this.targets[index].status = err;\n      if (this.targets.length - 1 === index) {\n        this.inSetup = false;\n        if (dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets);\n        this.refresh();\n      } else {\n        // Not last target, move on the next connection option\n        this.connect(++index);\n      }\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.closing = true;\n      if (this.connection) {\n        this.connection.close(); // Let event bubble from here\n      } else {\n        this.emit('close');\n      }\n      clearTimeout(this.connectTimer);\n    }\n  }, {\n    key: \"error\",\n    value: function error(payload, message) {\n      var code = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n      this.emit('payload', {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        error: {\n          message: message,\n          code: code\n        }\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(payload) {\n      var _this4 = this;\n      if (this.inSetup) {\n        setTimeout(function () {\n          return _this4.send(payload);\n        }, 100);\n      } else if (this.connection.closed) {\n        this.error(payload, 'Not connected');\n      } else {\n        this.connection.send(payload);\n      }\n    }\n  }]);\n  return ConnectionManager;\n}(EventEmitter);\nmodule.exports = ConnectionManager;","map":{"version":3,"names":["EventEmitter","require","dev","process","env","NODE_ENV","ConnectionManager","_EventEmitter","_inherits","_super","_createSuper","connections","targets","options","_this","_classCallCheck","call","connected","status","interval","name","inSetup","connect","_createClass","key","value","_this2","index","arguments","length","undefined","console","log","concat","connection","_this$targets$index","protocol","location","on","err","connectionError","listenerCount","emit","warn","message","summary","closing","refresh","target","data","payload","_this3","toFixed","clearTimeout","connectTimer","setTimeout","close","error","code","id","jsonrpc","send","_this4","closed","module","exports"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/node_modules/eth-provider/ConnectionManager/index.js"],"sourcesContent":["const EventEmitter = require('events')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nclass ConnectionManager extends EventEmitter {\n  constructor (connections, targets, options) {\n    super()\n    this.targets = targets\n    this.connections = connections\n    this.connected = false\n    this.status = 'loading'\n    this.interval = options.interval || 5000\n    this.name = options.name || 'default'\n    this.inSetup = true\n    this.connect()\n  }\n\n  connect (index = 0) {\n    if (dev && index === 0) console.log(`\\n\\n\\n\\nA connection cycle started for provider with name: ${this.name}`)\n\n    if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n      if (dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider')\n    } else if (this.targets.length === 0) {\n      if (dev) console.log('No valid targets supplied')\n    } else {\n      const { protocol, location } = this.targets[index]\n      this.connection = this.connections[protocol](location)\n\n      this.connection.on('error', err => {\n        if (!this.connected) return this.connectionError(index, err)\n        if (this.listenerCount('error')) return this.emit('error', err)\n        console.warn('eth-provider - Uncaught connection error: ' + err.message)\n      })\n\n      this.connection.on('close', (summary) => {\n        this.connected = false\n        this.emit('close')\n        if (!this.closing) this.refresh()\n      })\n\n      this.connection.on('connect', () => {\n        this.connection.target = this.targets[index]\n        this.connection.index = index\n        this.targets[index].status = this.connection.status\n        this.connected = true\n        this.inSetup = false\n        if (dev) console.log('Successfully connected to: ' + this.targets[index].location)\n        this.emit('connect')\n      })\n\n      this.connection.on('data', data => this.emit('data', data))\n      this.connection.on('payload', payload => this.emit('payload', payload))\n    }\n  }\n\n  refresh (interval = this.interval) {\n    if (dev) console.log(`Reconnect queued for ${(interval / 1000).toFixed(2)}s in the future`)\n    clearTimeout(this.connectTimer)\n    this.connectTimer = setTimeout(() => this.connect(), interval)\n  }\n\n  connectionError (index, err) {\n    this.targets[index].status = err\n    if (this.targets.length - 1 === index) {\n      this.inSetup = false\n      if (dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets)\n      this.refresh()\n    } else { // Not last target, move on the next connection option\n      this.connect(++index)\n    }\n  }\n\n  close () {\n    this.closing = true\n    if (this.connection) {\n      this.connection.close() // Let event bubble from here\n    } else {\n      this.emit('close')\n    }\n    clearTimeout(this.connectTimer)\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.inSetup) {\n      setTimeout(() => this.send(payload), 100)\n    } else if (this.connection.closed) {\n      this.error(payload, 'Not connected')\n    } else {\n      this.connection.send(payload)\n    }\n  }\n}\n\nmodule.exports = ConnectionManager\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}