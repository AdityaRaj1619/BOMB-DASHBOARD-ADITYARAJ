{"ast":null,"code":"import{createReducer}from'@reduxjs/toolkit';import{addTransaction,checkedTransaction,clearAllTransactions,finalizeTransaction}from'./actions';var now=function now(){return new Date().getTime();};export var initialState={};export default createReducer(initialState,function(builder){return builder.addCase(addTransaction,function(transactions,_ref){var _transactions$chainId,_transactions$chainId2;var _ref$payload=_ref.payload,chainId=_ref$payload.chainId,from=_ref$payload.from,hash=_ref$payload.hash,approval=_ref$payload.approval,summary=_ref$payload.summary;if((_transactions$chainId=transactions[chainId])===null||_transactions$chainId===void 0?void 0:_transactions$chainId[hash]){throw Error('Attempted to add existing transaction.');}var txs=(_transactions$chainId2=transactions[chainId])!==null&&_transactions$chainId2!==void 0?_transactions$chainId2:{};txs[hash]={hash:hash,approval:approval,summary:summary,from:from,addedTime:now()};transactions[chainId]=txs;}).addCase(clearAllTransactions,function(transactions,_ref2){var chainId=_ref2.payload.chainId;if(!transactions[chainId])return;transactions[chainId]={};}).addCase(checkedTransaction,function(transactions,_ref3){var _transactions$chainId3;var _ref3$payload=_ref3.payload,chainId=_ref3$payload.chainId,hash=_ref3$payload.hash,blockNumber=_ref3$payload.blockNumber;var tx=(_transactions$chainId3=transactions[chainId])===null||_transactions$chainId3===void 0?void 0:_transactions$chainId3[hash];if(!tx){return;}if(!tx.lastCheckedBlockNumber){tx.lastCheckedBlockNumber=blockNumber;}else{tx.lastCheckedBlockNumber=Math.max(blockNumber,tx.lastCheckedBlockNumber);}}).addCase(finalizeTransaction,function(transactions,_ref4){var _transactions$chainId4;var _ref4$payload=_ref4.payload,hash=_ref4$payload.hash,chainId=_ref4$payload.chainId,receipt=_ref4$payload.receipt;var tx=(_transactions$chainId4=transactions[chainId])===null||_transactions$chainId4===void 0?void 0:_transactions$chainId4[hash];if(!tx){return;}tx.receipt=receipt;tx.confirmedTime=now();});});","map":{"version":3,"names":["createReducer","addTransaction","checkedTransaction","clearAllTransactions","finalizeTransaction","now","Date","getTime","initialState","builder","addCase","transactions","_ref","_transactions$chainId","_transactions$chainId2","_ref$payload","payload","chainId","from","hash","approval","summary","Error","txs","addedTime","_ref2","_ref3","_transactions$chainId3","_ref3$payload","blockNumber","tx","lastCheckedBlockNumber","Math","max","_ref4","_transactions$chainId4","_ref4$payload","receipt","confirmedTime"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/state/transactions/reducer.ts"],"sourcesContent":["import {createReducer} from '@reduxjs/toolkit';\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions';\n\nconst now = () => new Date().getTime();\n\nexport interface TransactionDetails {\n  hash: string;\n  approval?: {tokenAddress: string; spender: string};\n  summary?: string;\n  receipt?: SerializableTransactionReceipt;\n  lastCheckedBlockNumber?: number;\n  addedTime: number;\n  confirmedTime?: number;\n  from: string;\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails;\n  };\n}\n\nexport const initialState: TransactionState = {};\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, {payload: {chainId, from, hash, approval, summary}}) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.');\n      }\n      const txs = transactions[chainId] ?? {};\n      txs[hash] = {hash, approval, summary, from, addedTime: now()};\n      transactions[chainId] = txs;\n    })\n    .addCase(clearAllTransactions, (transactions, {payload: {chainId}}) => {\n      if (!transactions[chainId]) return;\n      transactions[chainId] = {};\n    })\n    .addCase(checkedTransaction, (transactions, {payload: {chainId, hash, blockNumber}}) => {\n      const tx = transactions[chainId]?.[hash];\n      if (!tx) {\n        return;\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber;\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, {payload: {hash, chainId, receipt}}) => {\n      const tx = transactions[chainId]?.[hash];\n      if (!tx) {\n        return;\n      }\n      tx.receipt = receipt;\n      tx.confirmedTime = now();\n    }),\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}