{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport useBombFinance from '../useBombFinance';\nconst useClaimRewardTimerBoardroom = () => {\n  const [time, setTime] = useState({\n    from: new Date(),\n    to: new Date()\n  });\n  const bombFinance = useBombFinance();\n  useEffect(() => {\n    if (bombFinance) {\n      bombFinance.getUserClaimRewardTime().then(setTime);\n    }\n  }, [bombFinance]);\n  return time;\n};\nexport default useClaimRewardTimerBoardroom;","map":{"version":3,"names":["useEffect","useState","useBombFinance","useClaimRewardTimerBoardroom","time","setTime","from","Date","to","bombFinance","getUserClaimRewardTime","then"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/hooks/boardroom/useClaimRewardTimerBoardroom.ts"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport useBombFinance from '../useBombFinance';\nimport {AllocationTime} from '../../bomb-finance/types';\n\nconst useClaimRewardTimerBoardroom = () => {\n  const [time, setTime] = useState<AllocationTime>({\n    from: new Date(),\n    to: new Date(),\n  });\n  const bombFinance = useBombFinance();\n\n  useEffect(() => {\n    if (bombFinance) {\n      bombFinance.getUserClaimRewardTime().then(setTime);\n    }\n  }, [bombFinance]);\n  return time;\n};\n\nexport default useClaimRewardTimerBoardroom;\n"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,cAAc,MAAM,mBAAmB;AAG9C,MAAMC,4BAA4B,GAAGA,CAAA,KAAM;EACzC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAiB;IAC/CK,IAAI,EAAE,IAAIC,IAAI,EAAE;IAChBC,EAAE,EAAE,IAAID,IAAI;EACd,CAAC,CAAC;EACF,MAAME,WAAW,GAAGP,cAAc,EAAE;EAEpCF,SAAS,CAAC,MAAM;IACd,IAAIS,WAAW,EAAE;MACfA,WAAW,CAACC,sBAAsB,EAAE,CAACC,IAAI,CAACN,OAAO,CAAC;IACpD;EACF,CAAC,EAAE,CAACI,WAAW,CAAC,CAAC;EACjB,OAAOL,IAAI;AACb,CAAC;AAED,eAAeD,4BAA4B"},"metadata":{},"sourceType":"module"}