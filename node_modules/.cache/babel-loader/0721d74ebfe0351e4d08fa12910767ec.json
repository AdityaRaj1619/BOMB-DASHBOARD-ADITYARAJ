{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar color_1 = __importDefault(require(\"color\"));\nvar mersenne_twister_1 = __importDefault(require(\"mersenne-twister\"));\nvar react_1 = __importDefault(require(\"react\"));\nvar colors = ['#01888C', '#FC7500', '#034F5D', '#F73F01', '#FC1960', '#C7144C', '#F3C100', '#1598F2', '#2465E1', '#F19E02' // gold\n];\n\nvar wobble = 30;\nvar shapeCount = 3;\nvar styles = {\n  container: {\n    overflow: 'hidden'\n  }\n};\nfunction Jazzicon(_ref) {\n  var address = _ref.address,\n    size = _ref.size;\n  var seed = parseInt(address.slice(2, 10), 16);\n  var generator = new mersenne_twister_1.default(seed);\n  var amount = generator.random() * 30 - wobble / 2;\n  var localColors = colors.map(function (hex) {\n    return new color_1.default(hex).rotate(amount).hex();\n  });\n  var randomColor = function randomColor() {\n    // carlos: This is necessary because the @metamask/jazzicon implementation includes\n    // this mistake, which affects determinism.\n    var _rand = generator.random();\n    var idx = Math.floor(localColors.length * generator.random());\n    return localColors.splice(idx, 1)[0];\n  };\n  var backgroundColor = randomColor();\n  var shapes = Array(shapeCount).fill(0).map(function (_, index) {\n    var center = size / 2;\n    var firstRot = generator.random();\n    var angle = Math.PI * 2 * firstRot;\n    var velocity = size / shapeCount * generator.random() + index * size / shapeCount;\n    var tx = Math.cos(angle) * velocity;\n    var ty = Math.sin(angle) * velocity;\n    var secondRot = generator.random();\n    var rot = firstRot * 360 + secondRot * 180;\n    var fill = randomColor();\n    return react_1.default.createElement(\"rect\", {\n      key: \"shape_\".concat(index),\n      x: 0,\n      y: 0,\n      width: size,\n      height: size,\n      fill: fill,\n      transform: \"translate(\".concat(tx, \" \").concat(ty, \") rotate(\").concat(rot.toFixed(1), \" \").concat(center, \" \").concat(center, \")\")\n    });\n  });\n  return react_1.default.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, styles.container), {\n      width: size,\n      height: size,\n      backgroundColor: backgroundColor,\n      borderRadius: size / 2\n    })\n  }, react_1.default.createElement(\"svg\", {\n    width: \"\".concat(size, \"px\"),\n    height: \"\".concat(size, \"px\")\n  }, shapes));\n}\nexports.default = Jazzicon;","map":{"version":3,"sources":["../src/Jazzicon.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst color_1 = __importDefault(require(\"color\"));\nconst mersenne_twister_1 = __importDefault(require(\"mersenne-twister\"));\nconst react_1 = __importDefault(require(\"react\"));\nconst colors = [\n    '#01888C',\n    '#FC7500',\n    '#034F5D',\n    '#F73F01',\n    '#FC1960',\n    '#C7144C',\n    '#F3C100',\n    '#1598F2',\n    '#2465E1',\n    '#F19E02', // gold\n];\nconst wobble = 30;\nconst shapeCount = 3;\nconst styles = {\n    container: {\n        overflow: 'hidden',\n    },\n};\nfunction Jazzicon({ address, size }) {\n    const seed = parseInt(address.slice(2, 10), 16);\n    const generator = new mersenne_twister_1.default(seed);\n    const amount = generator.random() * 30 - wobble / 2;\n    const localColors = colors.map(hex => new color_1.default(hex).rotate(amount).hex());\n    const randomColor = () => {\n        // carlos: This is necessary because the @metamask/jazzicon implementation includes\n        // this mistake, which affects determinism.\n        const _rand = generator.random();\n        const idx = Math.floor(localColors.length * generator.random());\n        return localColors.splice(idx, 1)[0];\n    };\n    const backgroundColor = randomColor();\n    const shapes = Array(shapeCount)\n        .fill(0)\n        .map((_, index) => {\n        const center = size / 2;\n        const firstRot = generator.random();\n        const angle = Math.PI * 2 * firstRot;\n        const velocity = (size / shapeCount) * generator.random() + (index * size) / shapeCount;\n        const tx = Math.cos(angle) * velocity;\n        const ty = Math.sin(angle) * velocity;\n        const secondRot = generator.random();\n        const rot = firstRot * 360 + secondRot * 180;\n        const fill = randomColor();\n        return (react_1.default.createElement(\"rect\", { key: `shape_${index}`, x: 0, y: 0, width: size, height: size, fill: fill, transform: `translate(${tx} ${ty}) rotate(${rot.toFixed(1)} ${center} ${center})` }));\n    });\n    return (react_1.default.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.container), { width: size, height: size, backgroundColor, borderRadius: size / 2 }) },\n        react_1.default.createElement(\"svg\", { width: `${size}px`, height: `${size}px` }, shapes)));\n}\nexports.default = Jazzicon;\n//# sourceMappingURL=Jazzicon.js.map"]},"metadata":{},"sourceType":"script"}