{"ast":null,"code":"const EventEmitter = require('events');\nclass InjectedConnection extends EventEmitter {\n  constructor(_injected, options) {\n    super();\n    if (_injected) {\n      setTimeout(() => this.emit('error', new Error('Injected web3 provider is not currently supported')), 0);\n    } else {\n      setTimeout(() => this.emit('error', new Error('No injected provider found')), 0);\n    }\n  }\n}\nmodule.exports = injected => options => new InjectedConnection(injected, options);","map":{"version":3,"names":["EventEmitter","require","InjectedConnection","constructor","_injected","options","setTimeout","emit","Error","module","exports","injected"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/node_modules/eth-provider/connections/injected.js"],"sourcesContent":["const EventEmitter = require('events')\n\nclass InjectedConnection extends EventEmitter {\n  constructor (_injected, options) {\n    super()\n    if (_injected) {\n      setTimeout(() => this.emit('error', new Error('Injected web3 provider is not currently supported')), 0)\n    } else {\n      setTimeout(() => this.emit('error', new Error('No injected provider found')), 0)\n    }\n  }\n}\n\nmodule.exports = injected => options => new InjectedConnection(injected, options)\n"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAEtC,MAAMC,kBAAkB,SAASF,YAAY,CAAC;EAC5CG,WAAWA,CAAEC,SAAS,EAAEC,OAAO,EAAE;IAC/B,KAAK,EAAE;IACP,IAAID,SAAS,EAAE;MACbE,UAAU,CAAC,MAAM,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE,IAAIC,KAAK,CAAC,mDAAmD,CAAC,CAAC,EAAE,CAAC,CAAC;IACzG,CAAC,MAAM;MACLF,UAAU,CAAC,MAAM,IAAI,CAACC,IAAI,CAAC,OAAO,EAAE,IAAIC,KAAK,CAAC,4BAA4B,CAAC,CAAC,EAAE,CAAC,CAAC;IAClF;EACF;AACF;AAEAC,MAAM,CAACC,OAAO,GAAGC,QAAQ,IAAIN,OAAO,IAAI,IAAIH,kBAAkB,CAACS,QAAQ,EAAEN,OAAO,CAAC"},"metadata":{},"sourceType":"script"}