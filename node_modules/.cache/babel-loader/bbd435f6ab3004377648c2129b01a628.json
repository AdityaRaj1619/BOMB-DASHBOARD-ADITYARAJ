{"ast":null,"code":"import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nconst WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\"\n};\nconst WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n  BANXA: \"banxa\"\n};\nconst SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\",\n  BNB: \"bnb\",\n  POLYGON: \"polygon\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\n\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\nconst CRYPTO_COMPARE_CURRENCIES = [\"ETH\", \"USDT\", \"USDC\", \"TUSD\", \"EOSDT\", \"USD\", \"DAI\", \"GUSD\", \"DKKT\", \"PAX\", \"ILS\", \"RUB\", \"BYN\", \"EUR\", \"GBP\", \"JPY\", \"KRW\", \"PLN\", \"MXN\", \"AUD\", \"BRL\", \"CAD\", \"CHF\", \"KPW\", \"LAK\", \"LBP\", \"LKR\", \"XOF\", \"CNHT\", \"DOGE\", \"UAH\", \"TRY\", \"HKD\", \"XJP\", \"SGD\", \"USC\", \"NZD\", \"NGN\", \"RUR\", \"COP\", \"GHS\", \"EGP\", \"IDR\", \"BHD\", \"CRC\", \"PEN\", \"AED\", \"DOP\", \"PKR\", \"HUF\", \"VND\", \"XAR\", \"LTC\", \"RON\", \"OMR\", \"MYR\", \"DKK\", \"UGX\", \"ZMW\", \"SAR\", \"SEK\", \"GEL\", \"RWF\", \"IRR\", \"TZS\", \"CNY\", \"VEF\", \"BDT\", \"HRK\", \"CLP\", \"THB\", \"XAF\", \"ARS\", \"UYU\", \"SZL\", \"KZT\", \"NOK\", \"KES\", \"PAB\", \"INR\", \"CZK\", \"MAD\", \"TWD\", \"PHP\", \"ZAR\", \"BOB\", \"CDF\", \"DASH\", \"VES\", \"ISK\", \"MWK\", \"BAM\", \"TTD\", \"XRP\", \"JOD\", \"RSD\", \"HNL\", \"BGN\", \"GTQ\", \"BWP\", \"XMR\", \"MMK\", \"QAR\", \"AOA\", \"KWD\", \"MUR\", \"WUSD\", \"WEUR\", \"WAVES\", \"WTRY\", \"LRD\", \"LSL\", \"LYD\", \"AWG\", \"MDL\", \"BTO\", \"EURS\", \"CHFT\", \"MKD\", \"MNT\", \"MOP\", \"MRO\", \"MVR\", \"VOLLAR\", \"CKUSD\", \"KHR\", \"VUV\", \"BITCNY\", \"QC\", \"BBD\", \"NAD\", \"NPR\", \"PGK\", \"PYG\", \"BIF\", \"BMD\", \"BND\", \"XLM\", \"BNB\", \"SCR\", \"BAT\", \"CRO\", \"HT\", \"KCS\", \"LEO\", \"LINK\", \"MKR\", \"NPXS\", \"OMG\", \"REP\", \"ZB\", \"ZIL\", \"ZRX\", \"BCH\", \"BZD\", \"CUP\", \"CVE\", \"DJF\", \"DZD\", \"ERN\", \"ETB\", \"FJD\", \"FKP\", \"BUSD\", \"ANCT\", \"ALL\", \"AMD\", \"ANG\", \"CNYX\", \"IQD\", \"UZS\", \"TND\", \"GGP\", \"XAU\", \"KGS\", \"GIP\", \"JMD\", \"ZEC\", \"USDP\", \"BSV\", \"EMC2\", \"SNT\", \"GTO\", \"POWR\", \"EUSD\", \"EURT\", \"BCY\", \"BTS\", \"ATM\", \"BLOCKPAY\", \"ARDR\", \"AMP\", \"B2X\", \"BITGOLD\", \"BITEUR\", \"ATB\", \"BITUSD\", \"AGRS\", \"DFXT\", \"HIKEN\", \"BIX\", \"KNC\", \"EOS\", \"COB\", \"COSS\", \"BMH\", \"NANO\", \"BDG\", \"BNT\", \"XVG\", \"LKK1Y\", \"LKK\", \"USDK\", \"EURN\", \"NZDT\", \"JSE\", \"GMD\", \"GNF\", \"GYD\", \"YER\", \"XPF\", \"HTG\", \"SLL\", \"SOS\", \"WST\", \"SVC\", \"SYP\", \"NEO\", \"KMF\", \"JUMP\", \"AYA\", \"BLAST\", \"WGR\", \"BCN\", \"BTG\", \"URALS\", \"INN\", \"USDQ\", \"CNH\", \"HUSD\", \"BKRW\", \"NZDX\", \"EURX\", \"CADX\", \"USDEX\", \"JPYX\", \"AUDX\", \"VNDC\", \"EON\", \"GBPX\", \"CHFX\", \"USDJ\", \"IDRT\", \"USDS\", \"USDN\", \"BIDR\", \"IDK\", \"BSD\", \"BTN\", \"KYD\", \"NIO\", \"SBD\", \"SDG\", \"SHP\", \"TOP\", \"XCD\", \"XCHF\", \"CNYT\", \"GYEN\", \"ZUSD\", \"GOLD\", \"TRX\", \"TRYB\", \"PLATC\", \"STRAX\", \"UST\", \"GLM\", \"VAI\", \"BRZ\", \"DDRST\", \"XAUT\", \"MIM\"];\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\"AUD\", \"BGN\", \"BRL\", \"CAD\", \"CHF\", \"CNY\", \"COP\", \"CZK\", \"DKK\", \"DOP\", \"EGP\", \"EUR\", \"GBP\", \"HKD\", \"HRK\", \"IDR\", \"ILS\", \"JPY\", \"JOD\", \"KES\", \"KRW\", \"KWD\", \"LKR\", \"MAD\", \"MXN\", \"MYR\", \"NGN\", \"NOK\", \"NZD\", \"OMR\", \"PEN\", \"PKR\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TWD\", \"USD\", \"VND\", \"ZAR\"],\n  /**\n   * https://docs.sendwyre.com/docs/supported-currencies#fiat\n   * The ones where credit card is supported\n   */\n  [PAYMENT_PROVIDER.WYRE]: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"NZD\", \"ARS\", \"BRL\", \"CHF\", \"CLP\", \"COP\", \"CZK\", \"DKK\", \"HKD\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"PHP\", \"PLN\", \"SEK\", \"THB\", \"VND\", \"ZAR\"],\n  // https://support.ramp.network/en/articles/471-why-am-i-paying-in-usd-eur-gbp\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\"USD\", \"EUR\", \"GBP\"],\n  // From https://xanpool.com/ fiat select dropdown\n  [PAYMENT_PROVIDER.XANPOOL]: [\"SGD\", \"HKD\", \"THB\", \"PHP\", \"INR\", \"IDR\", \"MYR\", \"AUD\", \"NZD\", \"KRW\"],\n  // https://support.aax.com/en/articles/5295762-mercuryo\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\"EUR\", \"USD\", \"GBP\", \"TRY\", \"JPY\", \"BRL\", \"NGN\", \"VND\", \"MXN\", \"KRW\"],\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\"ARS\", \"AUD\", \"BBD\", \"BGN\", \"BMD\", \"BRL\", \"CAD\", \"CHF\", \"CLP\", \"CRC\", \"CZK\", \"DKK\", \"DOP\", \"EUR\", \"FJD\", \"FKP\", \"GBP\", \"GIP\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"ISK\", \"JMD\", \"JPY\", \"KES\", \"KRW\", \"MDL\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PEN\", \"PHP\", \"PLN\", \"PYG\", \"RON\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TZS\", \"USD\", \"ZAR\"],\n  [PAYMENT_PROVIDER.BANXA]: [\"EUR\", \"GBP\", \"USD\"]\n};\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\nfunction supportedFiatCurrencies(provider) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter(currency => cryptoCompareCurrenciesSet.has(currency));\n}\nconst paymentProviders$1 = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"aave\",\n        display: \"AAVE\"\n      }, {\n        value: \"bat\",\n        display: \"BAT\"\n      }, {\n        value: \"dai\",\n        display: \"DAI\"\n      }, {\n        value: \"eth\",\n        display: \"ETH\"\n      }, {\n        value: \"mkr\",\n        display: \"MKR\"\n      }, {\n        value: \"matic\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdt\",\n        display: \"USDT\"\n      }, {\n        value: \"usdc\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"eth_polygon\",\n        display: \"ETH\"\n      }, {\n        value: \"matic_polygon\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdc_polygon\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"bnb_bsc\",\n        display: \"BNB\"\n      }, {\n        value: \"busd_bsc\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"avax_cchain\",\n        display: \"AVAX\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.WYRE),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"MKR\",\n        display: \"MKR\"\n      }, {\n        value: \"UNI\",\n        display: \"UNI\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MUSDC\",\n        display: \"USDC\"\n      }],\n      // AVAXC? or AVAX?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAXC\",\n        display: \"AVAXC\"\n      }]\n    },\n    includeFees: false,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC_DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC_MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"MATIC_USDC\",\n        display: \"USDC\"\n      }],\n      // what about AVAXC?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }]\n      // Temporary unavailable\n      // [SUPPORTED_PAYMENT_NETWORK.XDAI]: [{ value: 'XDAI_XDAI', display: 'XDAI' }],\n    },\n\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ <br>ViettelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.XANPOOL),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    sell: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"1INCH\",\n        display: \"1INCH\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"WETH\",\n        display: \"WETH\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }]\n    },\n    includeFees: true,\n    enforceMax: true\n  },\n  [PAYMENT_PROVIDER.BANXA]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://support.banxa.com\",\n    minOrderValue: 20,\n    maxOrderValue: 15000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.BANXA),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"LINK\",\n        display: \"LINK\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"CHZ\",\n        display: \"CHZ\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"MANA\",\n        display: \"MANA\"\n      }, {\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"COMP\",\n        display: \"COMP\"\n      }, {\n        value: \"ENJ\",\n        display: \"ENJ\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }]\n      // [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{ value: \"BNB\", display: \"BNB\" }],\n    },\n\n    includeFees: true,\n    enforceMax: true\n  }\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: `torus-`\n};\nconst runOnLoad = fn => new Promise((resolve, reject) => {\n  if (window.document.body != null) {\n    Promise.resolve(fn()).then(resolve).catch(reject);\n  } else {\n    window.document.addEventListener(\"DOMContentLoaded\", () => {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    });\n  }\n});\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\nvar log = loglevel.getLogger(\"torus-embed\");\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: () => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: method => `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners, shouldSendMetadata) => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}, shouldSendMetadata: ${shouldSendMetadata} }`,\n    invalidRequestArgs: () => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: () => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: () => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: () => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: method => `'args.logger' must include required method '${method}'.`\n  },\n  info: {\n    connected: chainId => `Torus: Connected to chain with ID \"${chainId}\".`\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\nconst {\n  paymentProviders\n} = configuration;\nconst validatePaymentProvider = (provider, params) => {\n  const errors = {};\n  if (!provider) {\n    return {\n      errors,\n      isValid: true\n    };\n  }\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n  const selectedProvider = paymentProviders[provider];\n  const selectedParams = params || {};\n  // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain).flat().map(currency => currency.value);\n    const finalCryptoCurrency = provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency)) errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0\n  };\n};\n// utility functions\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req\n      });\n    }\n    next(done => {\n      const {\n        error\n      } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = `MetaMask: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getPreopenInstanceId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async (buildEnv, integrity) => {\n  let torusUrl;\n  let logLevel;\n  // Do not change this line\n  const version = \"1.41.1\";\n  let versionUsed = integrity.version || version;\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response;\n      if (!configuration.prodTorusUrl) response = await get(`${configuration.api}/latestversion?name=@toruslabs/torus-embed&version=${version}`, {}, {\n        useAPIKey: true\n      });else response = {\n        data: configuration.prodTorusUrl\n      };\n      versionUsed = response.data;\n      // eslint-disable-next-line require-atomic-updates\n      configuration.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n  log.info(\"version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = `https://binance.tor.us/v${versionUsed}`;\n      logLevel = \"info\";\n      break;\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"bnb\":\n      torusUrl = \"https://bnb.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"polygon\":\n      torusUrl = \"https://polygon.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://app.tor.us/v${versionUsed}`;\n      logLevel = \"error\";\n      break;\n  }\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\n\nconst NOOP = () => {\n  // empty function\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nconst FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nconst FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nSafeEventEmitter.defaultMaxListeners = 100;\n// resolve response.result, reject errors\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\nclass TorusInpageProvider extends SafeEventEmitter {\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n\n  constructor(connectionStream) {\n    let {\n      maxEventListeners = 100,\n      shouldSendMetadata = true,\n      jsonRpcStreamName = \"provider\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    _defineProperty(this, \"chainId\", void 0);\n    _defineProperty(this, \"selectedAddress\", void 0);\n    _defineProperty(this, \"_rpcEngine\", void 0);\n    _defineProperty(this, \"networkVersion\", void 0);\n    _defineProperty(this, \"shouldSendMetadata\", void 0);\n    _defineProperty(this, \"isTorus\", void 0);\n    _defineProperty(this, \"_publicConfigStore\", void 0);\n    _defineProperty(this, \"tryPreopenHandle\", void 0);\n    _defineProperty(this, \"enable\", void 0);\n    _defineProperty(this, \"_state\", void 0);\n    _defineProperty(this, \"_jsonRpcConnection\", void 0);\n    _defineProperty(this, \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n    // private state\n    this._state = _objectSpread$1({}, TorusInpageProvider._defaultState);\n    // public state\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata;\n    // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\"));\n    // subscribe to metamask public config (one-way)\n    this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    });\n    // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(this._publicConfigStore),\n    // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\"));\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n    // setup own event listeners\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n    // connect to async provider\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\"));\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n    // json rpc notification listener\n    jsonRpcConnection.events.on(\"notification\", payload => {\n      const {\n        method,\n        params\n      } = payload;\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      }\n      // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n    });\n  }\n\n  get publicConfigStore() {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n    return this._publicConfigStore;\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected() {\n    return this._state.isConnected;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n  addListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n  on(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n  once(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n  prependListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n  prependOnceListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked,\n        networkVersion\n      } = await this.request({\n        method: \"wallet_getProviderState\"\n      });\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", {\n        chainId\n      });\n      this._handleChainChanged({\n        chainId,\n        networkVersion\n      });\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n        return;\n      }\n    }\n    this.tryPreopenHandle(_payload, cb);\n  }\n  send(methodOrPayload, callbackOrArgs) {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({\n            method: methodOrPayload,\n            params: callbackOrArgs\n          }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload, callbackOrArgs);\n    }\n    return this._sendSync(methodOrPayload);\n  }\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n  _sendSync(payload) {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result\n    };\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  _handleChainChanged() {\n    let {\n      chainId,\n      networkVersion\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n        chainId,\n        networkVersion\n      });\n      return;\n    }\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n  _warnOfDeprecation(eventName) {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n}\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\nconst defaults = options => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false\n});\n// Generate list of hashes\nconst hashes = (options, data) => {\n  const internalHashes = {};\n  options.algorithms.forEach(algorithm => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n};\n// Build an integrity string\nconst integrity = (options, sri) => {\n  let output = \"\";\n  // Hash list\n  output += Object.keys(sri.hashes).map(algorithm => `${algorithm}-${sri.hashes[algorithm]}`).join(options.delimiter);\n  return output;\n};\nconst main = (options, data) => {\n  // Defaults\n  const finalOptions = defaults(options);\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\nclass PopupHandler extends EventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"features\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    _defineProperty(this, \"windowTimer\", void 0);\n    _defineProperty(this, \"iClosedWindow\", void 0);\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n  open() {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n  }\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window) {\n  const {\n    document\n  } = window;\n  // Use the site's favicon if it exists\n  let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n  // Search through available icons in no particular order\n  icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n  return null;\n}\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n/**\n * Sends site metadata over an RPC request.\n */\nasync function sendSiteMetadata(engine) {\n  try {\n    const domainMetadata = await getSiteMetadata();\n    // call engine.handle directly to avoid normal RPC request handling\n    engine.handle({\n      jsonrpc: \"2.0\",\n      id: getPreopenInstanceId(),\n      method: \"wallet_sendDomainMetadata\",\n      params: domainMetadata\n    }, NOOP);\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error\n    });\n  }\n}\nconst _excluded = [\"host\", \"chainId\", \"networkName\"];\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true\n};\nconst iframeIntegrity = \"sha384-TyJix2beanZzcdkcboa6uCUYMyLD0sGfvLb2m9+BJABgk4/kEutoxLOLL4Xex+DM\";\nconst expectedCacheControlHeader = \"max-age=3600\";\nconst UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\", \"wallet_addEthereumChain\", \"wallet_switchEthereumChain\"];\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\", {\n      check: false,\n      hash: iframeIntegrity,\n      version: \"\"\n    });\n    torusIframeHtml.href = `${torusUrl}/popup`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\nclass Torus {\n  constructor() {\n    let {\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      buttonSize = 56,\n      modalZIndex = 99999,\n      apiKey = \"torus-default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n    _defineProperty(this, \"buttonSize\", void 0);\n    _defineProperty(this, \"torusUrl\", void 0);\n    _defineProperty(this, \"torusIframe\", void 0);\n    _defineProperty(this, \"styleLink\", void 0);\n    _defineProperty(this, \"isLoggedIn\", void 0);\n    _defineProperty(this, \"isInitialized\", void 0);\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n    _defineProperty(this, \"torusAlert\", void 0);\n    _defineProperty(this, \"apiKey\", void 0);\n    _defineProperty(this, \"modalZIndex\", void 0);\n    _defineProperty(this, \"alertZIndex\", void 0);\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n    _defineProperty(this, \"whiteLabel\", void 0);\n    _defineProperty(this, \"requestedVerifier\", void 0);\n    _defineProperty(this, \"currentVerifier\", void 0);\n    _defineProperty(this, \"embedTranslations\", void 0);\n    _defineProperty(this, \"ethereum\", void 0);\n    _defineProperty(this, \"provider\", void 0);\n    _defineProperty(this, \"communicationMux\", void 0);\n    _defineProperty(this, \"isLoginCallback\", void 0);\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n    _defineProperty(this, \"loginHint\", \"\");\n    _defineProperty(this, \"useWalletConnect\", void 0);\n    _defineProperty(this, \"isCustomLogin\", false);\n    this.buttonPosition = buttonPosition;\n    this.buttonSize = buttonSize;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n    this.isInitialized = false; // init done\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    // this.nodeDetailManager = new NodeDetailManager();\n    // this.torusJs = new TorusJs({\n    //   metadataHost: \"https://metadata.tor.us\",\n    //   allowHost: \"https://signer.tor.us/api/allow\",\n    //   network: \"mainnet\",\n    // });\n    this.apiKey = apiKey;\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n  }\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      // deprecated: use loginConfig instead\n      enabledVerifiers = defaultVerifiers,\n      network = {\n        host: \"mainnet\",\n        chainId: null,\n        networkName: \"\",\n        blockExplorer: \"\",\n        ticker: \"\",\n        tickerName: \"\"\n      },\n      loginConfig = {},\n      showTorusButton = true,\n      integrity = {\n        check: false,\n        hash: iframeIntegrity,\n        version: \"\"\n      },\n      whiteLabel,\n      skipTKey = false,\n      useWalletConnect = false,\n      mfaLevel = \"default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n    torusIframeUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n    // Iframe code\n    this.torusIframe = htmlToElement(`<iframe\n        id=\"torusIframe\"\n        allow=${useWalletConnect ? \"camera\" : \"\"}\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%; color-scheme: none;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}\"\n      ></iframe>`);\n    this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", `${torusUrl}/css/widget.css`);\n    this.styleLink = link;\n    const {\n      defaultLanguage = getUserLanguage(),\n      customTranslations = {}\n    } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    const handleSetup = async () => {\n      await documentReady();\n      return new Promise((resolve, reject) => {\n        this.torusIframe.onload = async () => {\n          // only do this if iframe is not full screen\n          this._setupWeb3();\n          const initStream = this.communicationMux.getStream(\"init_stream\");\n          initStream.on(\"data\", chunk => {\n            const {\n              name,\n              data,\n              error\n            } = chunk;\n            if (name === \"init_complete\" && data.success) {\n              // resolve promise\n              this.isInitialized = true;\n              this._displayIframe(this.isIframeFullScreen);\n              resolve(undefined);\n            } else if (error) {\n              reject(new Error(error));\n            }\n          });\n          initStream.write({\n            name: \"init_stream\",\n            data: {\n              enabledVerifiers,\n              loginConfig,\n              whiteLabel: this.whiteLabel,\n              buttonPosition: this.buttonPosition,\n              buttonSize: this.buttonSize,\n              torusWidgetVisibility: this.torusWidgetVisibility,\n              apiKey: this.apiKey,\n              skipTKey,\n              network,\n              mfaLevel\n            }\n          });\n        };\n        window.document.head.appendChild(this.styleLink);\n        window.document.body.appendChild(this.torusIframe);\n        window.document.body.appendChild(this.torusAlertContainer);\n      });\n    };\n    if (buildEnv === \"production\" && integrity.check) {\n      // hacky solution to check for iframe integrity\n      const fetchUrl = `${torusUrl}/popup`;\n      const resp = await fetch(fetchUrl, {\n        cache: \"reload\"\n      });\n      if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n        throw new Error(`Unexpected Cache-Control headers, got ${resp.headers.get(\"Cache-Control\")}`);\n      }\n      const response = await resp.text();\n      const calculatedIntegrity = main({\n        algorithms: [\"sha384\"]\n      }, response);\n      log.info(calculatedIntegrity, \"integrity\");\n      if (calculatedIntegrity === integrity.hash) {\n        await handleSetup();\n      } else {\n        this.clearInit();\n        throw new Error(\"Integrity check failed\");\n      }\n    } else {\n      await handleSetup();\n    }\n    return undefined;\n  }\n  login() {\n    let {\n      verifier = \"\",\n      login_hint: loginHint = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n  logout() {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n      const logOutStream = this.communicationMux.getStream(\"logout\");\n      logOutStream.write({\n        name: \"logOut\"\n      });\n      const statusStream = this.communicationMux.getStream(\"status\");\n      const statusStreamHandler = status => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n  async cleanUp() {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n  hideTorusButton() {\n    this.torusWidgetVisibility = false;\n    this._sendWidgetVisibilityStatus(false);\n    this._displayIframe();\n  }\n  showTorusButton() {\n    this.torusWidgetVisibility = true;\n    this._sendWidgetVisibilityStatus(true);\n    this._displayIframe();\n  }\n  setProvider(_ref) {\n    let {\n        host = \"mainnet\",\n        chainId = null,\n        networkName = \"\"\n      } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\");\n      const handler = chunk => {\n        const {\n          err,\n          success\n        } = chunk.data;\n        log.info(chunk);\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW\n      });\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: _objectSpread({\n            host,\n            chainId,\n            networkName\n          }, rest),\n          preopenInstanceId,\n          override: false\n        }\n      });\n    });\n  }\n  showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({\n      name: \"show_wallet\",\n      data: {\n        path: finalPath\n      }\n    });\n    const showWalletHandler = chunk => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const {\n          instanceId\n        } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n        // Using URL constructor to prevent js injection and allow parameter validation.!\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach(x => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n        const walletWindow = new PopupHandler({\n          url: finalUrl,\n          features: FEATURES_DEFAULT_WALLET_WINDOW\n        });\n        walletWindow.open();\n      }\n    };\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n  async getPublicAddress(_ref2) {\n    let {\n      verifier,\n      verifierId,\n      isExtended = false\n    } = _ref2;\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    const url = new URL(`https://api.tor.us/lookup/torus`);\n    url.searchParams.append(\"verifier\", openloginVerifier);\n    url.searchParams.append(\"verifierId\", verifierId);\n    url.searchParams.append(\"walletVerifier\", walletVerifier);\n    url.searchParams.append(\"network\", \"mainnet\");\n    url.searchParams.append(\"isExtended\", isExtended.toString());\n    return get(url.href, {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    }, {\n      useAPIKey: true\n    });\n  }\n  getUserInfo(message) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\");\n        userInfoAccessStream.write({\n          name: \"user_info_access_request\"\n        });\n        const userInfoAccessHandler = chunk => {\n          const {\n            name,\n            data: {\n              approved,\n              payload,\n              rejected,\n              newRequest\n            }\n          } = chunk;\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\");\n              const userInfoHandler = handlerChunk => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW\n              });\n              userInfoStream.write({\n                name: \"user_info_request\",\n                data: {\n                  message,\n                  preopenInstanceId\n                }\n              });\n            }\n          }\n        };\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n  initiateTopup(provider, params) {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const {\n          errors,\n          isValid\n        } = validatePaymentProvider(provider, params);\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n        const topupStream = this.communicationMux.getStream(\"topup\");\n        const topupHandler = chunk => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId);\n        topupStream.write({\n          name: \"topup_request\",\n          data: {\n            provider,\n            params,\n            preopenInstanceId\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n  async loginWithPrivateKey(loginParams) {\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\");\n        const loginHandler = chunk => {\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({\n          name: \"login_with_private_key_request\",\n          data: {\n            privateKey,\n            userInfo\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n  async showWalletConnectScanner() {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\");\n        const walletConnectHandler = chunk => {\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n            this._displayIframe();\n          }\n        };\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({\n          name: \"wallet_connect_stream_req\"\n        });\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n  _handleWindow(preopenInstanceId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\");\n      const finalUrl = new URL(url || `${this.torusUrl}/redirect?preopenInstanceId=${preopenInstanceId}`);\n      if (finalUrl.hash) finalUrl.hash += `&isCustomLogin=${this.isCustomLogin}`;else finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n      const handledWindow = new PopupHandler({\n        url: finalUrl,\n        target,\n        features\n      });\n      handledWindow.open();\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n        return;\n      }\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId\n        }\n      });\n      const closeHandler = _ref3 => {\n        let {\n          preopenInstanceId: receivedId,\n          close\n        } = _ref3;\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true\n          }\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n  _setEmbedWhiteLabel(element) {\n    // Set whitelabel\n    const {\n      theme\n    } = this.whiteLabel || {};\n    if (theme) {\n      const {\n        isDark = false,\n        colors = {}\n      } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n  _getLogoUrl() {\n    let logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    if (this.whiteLabel?.theme?.isDark) {\n      logoUrl = this.whiteLabel?.logoLight || logoUrl;\n    } else {\n      logoUrl = this.whiteLabel?.logoDark || logoUrl;\n    }\n    return logoUrl;\n  }\n  _sendWidgetVisibilityStatus(status) {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n    torusWidgetVisibilityStream.write({\n      data: status\n    });\n  }\n  _displayIframe() {\n    let isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const style = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = `${size}px`;\n      style.width = `${size}px`;\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n  _setupWeb3() {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    });\n    // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    });\n    // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n    // compose the inpage provider\n    const inpageProvider = new TorusInpageProvider(metamaskStream);\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inpageProvider[m];\n      inpageProvider[m] = function providerFunc(method) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({\n          jsonrpc: \"2.0\",\n          id: getPreopenInstanceId(),\n          method: \"eth_requestAccounts\",\n          params: []\n        }, (err, response) => {\n          const {\n            result: res\n          } = response || {};\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const {\n                  requestedVerifier\n                } = this;\n                // eslint-disable-next-line promise/no-promise-in-callback\n                this.logout()\n                // eslint-disable-next-line promise/always-return\n                .then(_ => {\n                  this.requestedVerifier = requestedVerifier;\n                  this._showLoginPopup(true, resolve, reject);\n                }).catch(error => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n    inpageProvider.tryPreopenHandle = (payload, cb) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n      inpageProvider._rpcEngine.handle(_payload, cb);\n    };\n    // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n    this.communicationMux = communicationMux;\n    const windowStream = communicationMux.getStream(\"window\");\n    windowStream.on(\"data\", chunk => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    });\n    // show torus widget if button clicked\n    const widgetStream = communicationMux.getStream(\"widget\");\n    widgetStream.on(\"data\", chunk => {\n      const {\n        data\n      } = chunk;\n      this._displayIframe(data);\n    });\n    // Show torus button if wallet has been hydrated/detected\n    const statusStream = communicationMux.getStream(\"status\");\n    statusStream.on(\"data\", status => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n    this.provider = proxiedInpageProvider;\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n    inpageProvider._initializeState();\n    log.debug(\"Torus - injected provider\");\n  }\n  _showLoginPopup(calledFromEmbed, resolve, reject) {\n    const loginHandler = data => {\n      const {\n        err,\n        selectedAddress\n      } = data;\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      }\n      // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n    const oauthStream = this.communicationMux.getStream(\"oauth\");\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({\n        name: \"oauth_modal\",\n        data: {\n          calledFromEmbed\n        }\n      });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId);\n      oauthStream.write({\n        name: \"oauth\",\n        data: {\n          calledFromEmbed,\n          verifier: this.requestedVerifier,\n          preopenInstanceId,\n          login_hint: this.loginHint\n        }\n      });\n    }\n  }\n  _createPopupBlockAlert(preopenInstanceId, url) {\n    const logoUrl = this._getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` + \"<div>\" + `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` + `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n    this._setEmbedWhiteLabel(torusAlert);\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n}\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, WALLET_VERIFIERS, Torus as default };","map":{"version":3,"sources":["../src/interfaces.ts","../src/supportedCurrencies.ts","../src/config.ts","../src/embedUtils.ts","../src/loglevel.ts","../src/messages.ts","../src/utils.ts","../src/inpage-provider.ts","../src/integrity.ts","../src/PopupHandler.ts","../src/siteMetadata.ts","../src/embed.ts"],"names":["LOGIN_PROVIDER","GOOGLE","FACEBOOK","TWITCH","REDDIT","DISCORD","WALLET_VERIFIERS","EMAIL_PASSWORDLESS","WALLET_OPENLOGIN_VERIFIER_MAP","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","BANXA","SUPPORTED_PAYMENT_NETWORK","MAINNET","MATIC","BSC_MAINNET","AVALANCHE_MAINNET","XDAI","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","BINANCE","TESTING","LRC","BETA","BNB","POLYGON","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","CRYPTO_COMPARE_CURRENCIES","PROVIDER_SUPPORTED_FIAT_CURRENCIES","cryptoCompareCurrenciesSet","Set","supportedFiatCurrencies","provider","providerSupportedFiatCurrencies","filter","currency","has","paymentProviders","line1","line2","line3","supportPage","minOrderValue","maxOrderValue","validCurrencies","validCryptoCurrenciesByChain","value","display","includeFees","api","enforceMax","receiveHint","sell","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","Object","values","prodTorusUrl","localStorageKeyPrefix","runOnLoad","fn","Promise","resolve","reject","window","document","body","then","catch","addEventListener","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","handleEvent","handle","eventName","handler","handlerArgs","handlerWrapper","removeEventListener","handleStream","chunk","removeListener","on","documentReady","readyState","loglevel","getLogger","errors","disconnected","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","shouldSendMetadata","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","enableDeprecation","sendDeprecation","events","close","data","networkChanged","notification","publicConfigStore","config","validatePaymentProvider","params","isValid","keys","length","selectedProvider","selectedParams","fiatValue","requestedOrderAmount","parseFloat","toString","selectedCurrency","includes","selectedCryptoCurrency","flat","map","finalCryptoCurrency","toLowerCase","createErrorMiddleware","req","res","next","error","ethErrors","rpc","invalidRequest","message","done","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getPreopenInstanceId","Math","random","slice","getTorusUrl","buildEnv","integrity","torusUrl","logLevel","version","versionUsed","response","get","useAPIKey","getUserLanguage","userLanguage","navigator","language","userLanguages","split","prototype","hasOwnProperty","call","EMITTED_NOTIFICATIONS","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_CONFIRM_WINDOW","getPopupFeatures","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","w","h","width","innerWidth","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","abs","top","features","SafeEventEmitter","defaultMaxListeners","getRpcPromiseCallback","unwrapResult","Array","isArray","result","TorusInpageProvider","accounts","isConnected","isUnlocked","initialized","isPermanentlyDisconnected","hasEmittedConnection","enable","experimentalMethods","send","constructor","connectionStream","jsonRpcStreamName","_defineProperty","isDuplexStream","Error","messages","isTorus","setMaxListeners","_state","_defaultState","selectedAddress","networkVersion","_handleAccountsChanged","bind","_handleChainChanged","_handleUnlockStateChanged","_handleConnect","_handleDisconnect","_handleStreamDisconnect","_sendSync","_rpcRequest","_warnOfDeprecation","_initializeState","request","sendAsync","mux","ObjectMultiplex","pump","_publicConfigStore","ObservableStore","storageKey","createStream","storeAsStream","ignoreStream","jsonRpcConnection","createStreamMiddleware","stream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","middleware","_rpcEngine","payload","type","_sentWarnings","args","callback","addListener","listener","once","prependListener","prependOnceListener","isInternal","cb","_payload","jsonrpc","err","tryPreopenHandle","methodOrPayload","callbackOrArgs","id","debug","isRecoverable","errorMessage","EthereumRpcError","streamName","isEthAccounts","finalAccounts","account","dequal","defaults","options","algorithms","delimiter","full","hashes","internalHashes","forEach","algorithm","createHash","update","digest","sri","output","join","main","finalOptions","PopupHandler","EventEmitter","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","href","focus","redirect","locationReplaceOnRedirect","location","replace","imgExists","img","onload","onerror","src","e","getSiteName","siteName","querySelector","metaTitle","title","hostname","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","name","engine","domainMetadata","originalError","defaultVerifiers","iframeIntegrity","expectedCacheControlHeader","UNSAFE_METHODS","preLoadIframe","torusIframeHtml","check","hash","crossOrigin","rel","relList","supports","head","appendChild","Torus","configuration","buttonPosition","buttonSize","modalZIndex","apiKey","isLoggedIn","isInitialized","torusWidgetVisibility","requestedVerifier","currentVerifier","setAPIKey","alertZIndex","isIframeFullScreen","init","enableLogging","enabledVerifiers","network","host","networkName","blockExplorer","ticker","tickerName","loginConfig","showTorusButton","whiteLabel","skipTKey","useWalletConnect","mfaLevel","isCustomLogin","setDefaultLevel","enableAll","disableAll","torusIframeUrl","URL","pathname","endsWith","torusIframe","torusAlertContainer","style","setProperty","link","setAttribute","styleLink","defaultLanguage","customTranslations","mergedTranslations","deepmerge","languageTranslations","embedTranslations","handleSetup","_setupWeb3","initStream","communicationMux","getStream","success","_displayIframe","write","fetchUrl","resp","fetch","cache","headers","text","calculatedIntegrity","generateIntegrity","clearInit","login","verifier","login_hint","loginHint","ethereum","logout","logOutStream","statusStream","statusStreamHandler","status","loggedIn","cleanUp","isElement","element","Element","HTMLDocument","contains","remove","torusAlert","hideTorusButton","_sendWidgetVisibilityStatus","setProvider","rest","providerChangeStream","preopenInstanceId","_handleWindow","override","showWallet","path","showWalletStream","finalPath","showWalletHandler","instanceId","finalUrl","searchParams","append","x","walletWindow","getPublicAddress","verifierId","isExtended","walletVerifier","openloginVerifier","getUserInfo","userInfoAccessStream","userInfoAccessHandler","approved","rejected","newRequest","userInfoStream","userInfoHandler","handlerChunk","initiateTopup","JSON","stringify","topupStream","topupHandler","loginWithPrivateKey","loginParams","privateKey","userInfo","Buffer","loginPrivKeyStream","loginHandler","showWalletConnectScanner","walletConnectStream","walletConnectHandler","windowStream","handledWindow","_createPopupBlockAlert","closeHandler","_ref3","receivedId","_setEmbedWhiteLabel","theme","isDark","colors","classList","add","torusBrand1","torusGray2","_getLogoUrl","logoUrl","logoLight","logoDark","torusWidgetVisibilityStream","isFull","size","right","bottom","assign","metamaskStream","BasePostMessageStream","targetWindow","contentWindow","targetOrigin","origin","communicationStream","inpageProvider","detectAccountRequestPrototypeModifier","m","originalMethod","providerFunc","apply","setTimeout","handleLoginCb","_","_showLoginPopup","isLoginCallback","proxiedInpageProvider","Proxy","deleteProperty","setupMultiplex","widgetStream","calledFromEmbed","oauthStream","successAlert","btnContainer","bindOnLoad","children","attachOnLoad"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { get, setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, BasePostMessageStream, setupMultiplex } from '@toruslabs/openlogin-jrpc';\nimport deepmerge from 'lodash.merge';\nimport { ObservableStore, storeAsStream } from '@metamask/obs-store';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport dequal from 'fast-deep-equal';\nimport { duplex } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport createHash from 'create-hash';\nimport { EventEmitter } from 'events';\n\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\"\n};\nconst WALLET_VERIFIERS = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  TWITCH: \"twitch\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  EMAIL_PASSWORDLESS: \"torus-auth0-email-passwordless\"\n};\nconst WALLET_OPENLOGIN_VERIFIER_MAP = {\n  [WALLET_VERIFIERS.GOOGLE]: \"tkey-google\",\n  [WALLET_VERIFIERS.FACEBOOK]: \"tkey-facebook\",\n  [WALLET_VERIFIERS.TWITCH]: \"tkey-twitch\",\n  [WALLET_VERIFIERS.REDDIT]: \"tkey-reddit\",\n  [WALLET_VERIFIERS.DISCORD]: \"tkey-discord\",\n  [WALLET_VERIFIERS.EMAIL_PASSWORDLESS]: \"tkey-auth0-email-passwordless\"\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\",\n  BANXA: \"banxa\"\n};\nconst SUPPORTED_PAYMENT_NETWORK = {\n  MAINNET: \"mainnet\",\n  MATIC: \"matic\",\n  BSC_MAINNET: \"bsc_mainnet\",\n  AVALANCHE_MAINNET: \"avalanche_mainnet\",\n  XDAI: \"xdai\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  BINANCE: \"binance\",\n  TESTING: \"testing\",\n  LRC: \"lrc\",\n  BETA: \"beta\",\n  BNB: \"bnb\",\n  POLYGON: \"polygon\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\n\n/**\n * From https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC&extraParams=YourSite\n * GET https://min-api.cryptocompare.com/data/v2/pair/mapping/fsym?fsym=BTC\n * Then map over returned entries, picking tsym\n *\n * Last updated: Date of commit\n */\nconst CRYPTO_COMPARE_CURRENCIES = [\"ETH\", \"USDT\", \"USDC\", \"TUSD\", \"EOSDT\", \"USD\", \"DAI\", \"GUSD\", \"DKKT\", \"PAX\", \"ILS\", \"RUB\", \"BYN\", \"EUR\", \"GBP\", \"JPY\", \"KRW\", \"PLN\", \"MXN\", \"AUD\", \"BRL\", \"CAD\", \"CHF\", \"KPW\", \"LAK\", \"LBP\", \"LKR\", \"XOF\", \"CNHT\", \"DOGE\", \"UAH\", \"TRY\", \"HKD\", \"XJP\", \"SGD\", \"USC\", \"NZD\", \"NGN\", \"RUR\", \"COP\", \"GHS\", \"EGP\", \"IDR\", \"BHD\", \"CRC\", \"PEN\", \"AED\", \"DOP\", \"PKR\", \"HUF\", \"VND\", \"XAR\", \"LTC\", \"RON\", \"OMR\", \"MYR\", \"DKK\", \"UGX\", \"ZMW\", \"SAR\", \"SEK\", \"GEL\", \"RWF\", \"IRR\", \"TZS\", \"CNY\", \"VEF\", \"BDT\", \"HRK\", \"CLP\", \"THB\", \"XAF\", \"ARS\", \"UYU\", \"SZL\", \"KZT\", \"NOK\", \"KES\", \"PAB\", \"INR\", \"CZK\", \"MAD\", \"TWD\", \"PHP\", \"ZAR\", \"BOB\", \"CDF\", \"DASH\", \"VES\", \"ISK\", \"MWK\", \"BAM\", \"TTD\", \"XRP\", \"JOD\", \"RSD\", \"HNL\", \"BGN\", \"GTQ\", \"BWP\", \"XMR\", \"MMK\", \"QAR\", \"AOA\", \"KWD\", \"MUR\", \"WUSD\", \"WEUR\", \"WAVES\", \"WTRY\", \"LRD\", \"LSL\", \"LYD\", \"AWG\", \"MDL\", \"BTO\", \"EURS\", \"CHFT\", \"MKD\", \"MNT\", \"MOP\", \"MRO\", \"MVR\", \"VOLLAR\", \"CKUSD\", \"KHR\", \"VUV\", \"BITCNY\", \"QC\", \"BBD\", \"NAD\", \"NPR\", \"PGK\", \"PYG\", \"BIF\", \"BMD\", \"BND\", \"XLM\", \"BNB\", \"SCR\", \"BAT\", \"CRO\", \"HT\", \"KCS\", \"LEO\", \"LINK\", \"MKR\", \"NPXS\", \"OMG\", \"REP\", \"ZB\", \"ZIL\", \"ZRX\", \"BCH\", \"BZD\", \"CUP\", \"CVE\", \"DJF\", \"DZD\", \"ERN\", \"ETB\", \"FJD\", \"FKP\", \"BUSD\", \"ANCT\", \"ALL\", \"AMD\", \"ANG\", \"CNYX\", \"IQD\", \"UZS\", \"TND\", \"GGP\", \"XAU\", \"KGS\", \"GIP\", \"JMD\", \"ZEC\", \"USDP\", \"BSV\", \"EMC2\", \"SNT\", \"GTO\", \"POWR\", \"EUSD\", \"EURT\", \"BCY\", \"BTS\", \"ATM\", \"BLOCKPAY\", \"ARDR\", \"AMP\", \"B2X\", \"BITGOLD\", \"BITEUR\", \"ATB\", \"BITUSD\", \"AGRS\", \"DFXT\", \"HIKEN\", \"BIX\", \"KNC\", \"EOS\", \"COB\", \"COSS\", \"BMH\", \"NANO\", \"BDG\", \"BNT\", \"XVG\", \"LKK1Y\", \"LKK\", \"USDK\", \"EURN\", \"NZDT\", \"JSE\", \"GMD\", \"GNF\", \"GYD\", \"YER\", \"XPF\", \"HTG\", \"SLL\", \"SOS\", \"WST\", \"SVC\", \"SYP\", \"NEO\", \"KMF\", \"JUMP\", \"AYA\", \"BLAST\", \"WGR\", \"BCN\", \"BTG\", \"URALS\", \"INN\", \"USDQ\", \"CNH\", \"HUSD\", \"BKRW\", \"NZDX\", \"EURX\", \"CADX\", \"USDEX\", \"JPYX\", \"AUDX\", \"VNDC\", \"EON\", \"GBPX\", \"CHFX\", \"USDJ\", \"IDRT\", \"USDS\", \"USDN\", \"BIDR\", \"IDK\", \"BSD\", \"BTN\", \"KYD\", \"NIO\", \"SBD\", \"SDG\", \"SHP\", \"TOP\", \"XCD\", \"XCHF\", \"CNYT\", \"GYEN\", \"ZUSD\", \"GOLD\", \"TRX\", \"TRYB\", \"PLATC\", \"STRAX\", \"UST\", \"GLM\", \"VAI\", \"BRZ\", \"DDRST\", \"XAUT\", \"MIM\"];\n/**\n * currencies supported by the payment provider\n * Last updated: Date of commit\n */\nconst PROVIDER_SUPPORTED_FIAT_CURRENCIES = {\n  // https://integrations.simplex.com/supported_currencies\n  // https://support.moonpay.com/hc/en-gb/articles/360011931457-Which-fiat-currencies-are-supported-\n  [PAYMENT_PROVIDER.MOONPAY]: [\"AUD\", \"BGN\", \"BRL\", \"CAD\", \"CHF\", \"CNY\", \"COP\", \"CZK\", \"DKK\", \"DOP\", \"EGP\", \"EUR\", \"GBP\", \"HKD\", \"HRK\", \"IDR\", \"ILS\", \"JPY\", \"JOD\", \"KES\", \"KRW\", \"KWD\", \"LKR\", \"MAD\", \"MXN\", \"MYR\", \"NGN\", \"NOK\", \"NZD\", \"OMR\", \"PEN\", \"PKR\", \"PLN\", \"RON\", \"RUB\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TWD\", \"USD\", \"VND\", \"ZAR\"],\n  /**\n   * https://docs.sendwyre.com/docs/supported-currencies#fiat\n   * The ones where credit card is supported\n   */\n  [PAYMENT_PROVIDER.WYRE]: [\"USD\", \"EUR\", \"GBP\", \"AUD\", \"CAD\", \"NZD\", \"ARS\", \"BRL\", \"CHF\", \"CLP\", \"COP\", \"CZK\", \"DKK\", \"HKD\", \"ILS\", \"INR\", \"ISK\", \"JPY\", \"KRW\", \"MXN\", \"MYR\", \"NOK\", \"PHP\", \"PLN\", \"SEK\", \"THB\", \"VND\", \"ZAR\"],\n  // https://support.ramp.network/en/articles/471-why-am-i-paying-in-usd-eur-gbp\n  [PAYMENT_PROVIDER.RAMPNETWORK]: [\"USD\", \"EUR\", \"GBP\"],\n  // From https://xanpool.com/ fiat select dropdown\n  [PAYMENT_PROVIDER.XANPOOL]: [\"SGD\", \"HKD\", \"THB\", \"PHP\", \"INR\", \"IDR\", \"MYR\", \"AUD\", \"NZD\", \"KRW\"],\n  // https://support.aax.com/en/articles/5295762-mercuryo\n  // RUB / UAH currently not supported\n  [PAYMENT_PROVIDER.MERCURYO]: [\"EUR\", \"USD\", \"GBP\", \"TRY\", \"JPY\", \"BRL\", \"NGN\", \"VND\", \"MXN\", \"KRW\"],\n  /**\n   * https://support.transak.com/hc/en-us/articles/360020615578-Credit-and-Debit-Card-Payments-through-Transak\n   * or\n   * https://transak.stoplight.io/docs/transak-docs/b3A6OTk1ODQ0-2-get-fiat-currencies\n   */\n  [PAYMENT_PROVIDER.TRANSAK]: [\"ARS\", \"AUD\", \"BBD\", \"BGN\", \"BMD\", \"BRL\", \"CAD\", \"CHF\", \"CLP\", \"CRC\", \"CZK\", \"DKK\", \"DOP\", \"EUR\", \"FJD\", \"FKP\", \"GBP\", \"GIP\", \"HRK\", \"HUF\", \"IDR\", \"ILS\", \"ISK\", \"JMD\", \"JPY\", \"KES\", \"KRW\", \"MDL\", \"MXN\", \"MYR\", \"NOK\", \"NZD\", \"PEN\", \"PHP\", \"PLN\", \"PYG\", \"RON\", \"SEK\", \"SGD\", \"THB\", \"TRY\", \"TZS\", \"USD\", \"ZAR\"],\n  [PAYMENT_PROVIDER.BANXA]: [\"EUR\", \"GBP\", \"USD\"]\n};\nconst cryptoCompareCurrenciesSet = new Set(CRYPTO_COMPARE_CURRENCIES);\n/**\n * Fiat currencies that we support\n */\nfunction supportedFiatCurrencies(provider) {\n  const providerSupportedFiatCurrencies = PROVIDER_SUPPORTED_FIAT_CURRENCIES[provider];\n  return providerSupportedFiatCurrencies.filter(currency => cryptoCompareCurrenciesSet.has(currency));\n}\n\nconst paymentProviders$1 = {\n  [PAYMENT_PROVIDER.MOONPAY]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"4.5% or 5 USD\",\n    line3: \"2,000€/day, 10,000€/mo\",\n    supportPage: \"https://help.moonpay.io/en/\",\n    minOrderValue: 24.99,\n    maxOrderValue: 50000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MOONPAY),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"aave\",\n        display: \"AAVE\"\n      }, {\n        value: \"bat\",\n        display: \"BAT\"\n      }, {\n        value: \"dai\",\n        display: \"DAI\"\n      }, {\n        value: \"eth\",\n        display: \"ETH\"\n      }, {\n        value: \"mkr\",\n        display: \"MKR\"\n      }, {\n        value: \"matic\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdt\",\n        display: \"USDT\"\n      }, {\n        value: \"usdc\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"eth_polygon\",\n        display: \"ETH\"\n      }, {\n        value: \"matic_polygon\",\n        display: \"MATIC\"\n      }, {\n        value: \"usdc_polygon\",\n        display: \"USDC\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"bnb_bsc\",\n        display: \"BNB\"\n      }, {\n        value: \"busd_bsc\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"avax_cchain\",\n        display: \"AVAX\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.WYRE]: {\n    line1: \"Apple Pay/ Debit/ Credit Card\",\n    line2: \"4.9% + 30¢ or 5 USD\",\n    line3: \"$250/day\",\n    supportPage: \"https://support.sendwyre.com/en/\",\n    minOrderValue: 5,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.WYRE),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"MKR\",\n        display: \"MKR\"\n      }, {\n        value: \"UNI\",\n        display: \"UNI\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MUSDC\",\n        display: \"USDC\"\n      }],\n      // AVAXC? or AVAX?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAXC\",\n        display: \"AVAXC\"\n      }]\n    },\n    includeFees: false,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.RAMPNETWORK]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://instant.ramp.network/\",\n    minOrderValue: 50,\n    maxOrderValue: 20000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.RAMPNETWORK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC_DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC_MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"MATIC_USDC\",\n        display: \"USDC\"\n      }],\n      // what about AVAXC?\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }]\n      // Temporary unavailable\n      // [SUPPORTED_PAYMENT_NETWORK.XDAI]: [{ value: 'XDAI_XDAI', display: 'XDAI' }],\n    },\n\n    includeFees: true,\n    api: true,\n    receiveHint: \"walletTopUp.receiveHintRamp\",\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.XANPOOL]: {\n    line1: \"PayNow/ InstaPay/ FPS/ GoJekPay/ UPI/ PromptPay/ <br>ViettelPay/ DuitNow\",\n    line2: \"2.5% buying, 3% selling\",\n    line3: \"$2,500 / day\",\n    supportPage: \"mailto:support@xanpool.com\",\n    minOrderValue: 100,\n    maxOrderValue: 2500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.XANPOOL),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    sell: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.MERCURYO]: {\n    line1: \"Credit/ Debit Card/ Apple Pay\",\n    line2: \"3.95% or 4 USD\",\n    line3: \"10,000€/day, 25,000€/mo\",\n    supportPage: \"mailto:support@mercuryo.io\",\n    minOrderValue: 30,\n    maxOrderValue: 5000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.MERCURYO),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"1INCH\",\n        display: \"1INCH\"\n      }]\n    },\n    includeFees: true,\n    api: true,\n    enforceMax: false\n  },\n  [PAYMENT_PROVIDER.TRANSAK]: {\n    line1: \"Apple & Google Pay / Credit/Debit Card<br/>Bangkok Bank Mobile & iPay<br/>Bank Transfer (sepa/gbp) / SCB Mobile & Easy\",\n    line2: \"0.99% - 5.5% or 5 USD\",\n    line3: \"$5,000/day, $28,000/mo\",\n    supportPage: \"https://support.transak.com/hc/en-US\",\n    minOrderValue: 30,\n    maxOrderValue: 500,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.TRANSAK),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"DAI\",\n        display: \"DAI\"\n      }, {\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"WETH\",\n        display: \"WETH\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{\n        value: \"BNB\",\n        display: \"BNB\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.AVALANCHE_MAINNET]: [{\n        value: \"AVAX\",\n        display: \"AVAX\"\n      }]\n    },\n    includeFees: true,\n    enforceMax: true\n  },\n  [PAYMENT_PROVIDER.BANXA]: {\n    line1: \"Debit Card/ <br>Apple Pay/ Bank transfer\",\n    line2: \"0.49% - 2.9%\",\n    line3: \"5,000€/purchase, 20,000€/mo\",\n    supportPage: \"https://support.banxa.com\",\n    minOrderValue: 20,\n    maxOrderValue: 15000,\n    validCurrencies: supportedFiatCurrencies(PAYMENT_PROVIDER.BANXA),\n    validCryptoCurrenciesByChain: {\n      [SUPPORTED_PAYMENT_NETWORK.MAINNET]: [{\n        value: \"ETH\",\n        display: \"ETH\"\n      }, {\n        value: \"USDT\",\n        display: \"USDT\"\n      }, {\n        value: \"BUSD\",\n        display: \"BUSD\"\n      }, {\n        value: \"LINK\",\n        display: \"LINK\"\n      }, {\n        value: \"USDC\",\n        display: \"USDC\"\n      }, {\n        value: \"CHZ\",\n        display: \"CHZ\"\n      }, {\n        value: \"BAT\",\n        display: \"BAT\"\n      }, {\n        value: \"MANA\",\n        display: \"MANA\"\n      }, {\n        value: \"AAVE\",\n        display: \"AAVE\"\n      }, {\n        value: \"COMP\",\n        display: \"COMP\"\n      }, {\n        value: \"ENJ\",\n        display: \"ENJ\"\n      }],\n      [SUPPORTED_PAYMENT_NETWORK.MATIC]: [{\n        value: \"MATIC\",\n        display: \"MATIC\"\n      }]\n      // [SUPPORTED_PAYMENT_NETWORK.BSC_MAINNET]: [{ value: \"BNB\", display: \"BNB\" }],\n    },\n\n    includeFees: true,\n    enforceMax: true\n  }\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: Object.values(WALLET_VERIFIERS),\n  paymentProviders: paymentProviders$1,\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKeyPrefix: `torus-`\n};\n\nconst runOnLoad = fn => new Promise((resolve, reject) => {\n  if (window.document.body != null) {\n    Promise.resolve(fn()).then(resolve).catch(reject);\n  } else {\n    window.document.addEventListener(\"DOMContentLoaded\", () => {\n      Promise.resolve(fn()).then(resolve).catch(reject);\n    });\n  }\n});\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\nconst handleStream = (handle, eventName, handler) => {\n  const handlerWrapper = chunk => {\n    handler(chunk);\n    handle.removeListener(eventName, handlerWrapper);\n  };\n  handle.on(eventName, handlerWrapper);\n};\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nvar log = loglevel.getLogger(\"torus-embed\");\n\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    sendSiteMetadata: () => \"Torus: Failed to send site metadata. This is an internal error, please report this bug.\",\n    unsupportedSync: method => `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners, shouldSendMetadata) => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}, shouldSendMetadata: ${shouldSendMetadata} }`,\n    invalidRequestArgs: () => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: () => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: () => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: () => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: method => `'args.logger' must include required method '${method}'.`\n  },\n  info: {\n    connected: chainId => `Torus: Connected to chain with ID \"${chainId}\".`\n  },\n  warnings: {\n    // deprecated methods\n    enableDeprecation: 'Torus: \"\"ethereum.enable()\" is deprecated and may be removed in the future. ' + 'Please use \"ethereum.send(\"eth_requestAccounts\")\" instead. For more information, see: https://eips.ethereum.org/EIPS/eip-1102',\n    sendDeprecation: 'Torus: \"ethereum.send(...)\" is deprecated and may be removed in the future.' + ' Please use \"ethereum.sendAsync(...)\" or \"ethereum.request(...)\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n    events: {\n      close: 'Torus: The event \"close\" is deprecated and may be removed in the future. Please use \"disconnect\" instead.' + \"\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193\",\n      data: 'Torus: The event \"data\" is deprecated and will be removed in the future.' + 'Use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message',\n      networkChanged: 'Torus: The event \"networkChanged\" is deprecated and may be removed in the future.' + ' Please use \"chainChanged\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193',\n      notification: 'Torus: The event \"notification\" is deprecated and may be removed in the future. ' + 'Please use \"message\" instead.\\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193'\n    },\n    publicConfigStore: 'Torus: The property \"publicConfigStore\" is deprecated and WILL be removed in the future.'\n  }\n};\n\nconst {\n  paymentProviders\n} = configuration;\nconst validatePaymentProvider = (provider, params) => {\n  const errors = {};\n  if (!provider) {\n    return {\n      errors,\n      isValid: true\n    };\n  }\n  if (provider && !paymentProviders[provider]) {\n    errors.provider = \"Invalid Provider\";\n    return {\n      errors,\n      isValid: Object.keys(errors).length === 0\n    };\n  }\n  const selectedProvider = paymentProviders[provider];\n  const selectedParams = params || {};\n  // set default values\n  // if (!selectedParams.selectedCurrency) [selectedParams.selectedCurrency] = selectedProvider.validCurrencies\n  // if (!selectedParams.fiatValue) selectedParams.fiatValue = selectedProvider.minOrderValue\n  // if (!selectedParams.selectedCryptoCurrency) [selectedParams.selectedCryptoCurrency] = selectedProvider.validCryptoCurrencies\n  // validations\n  if (selectedParams.fiatValue) {\n    const requestedOrderAmount = +parseFloat(selectedParams.fiatValue.toString()) || 0;\n    if (requestedOrderAmount < selectedProvider.minOrderValue) errors.fiatValue = \"Requested amount is lower than supported\";\n    if (requestedOrderAmount > selectedProvider.maxOrderValue && selectedProvider.enforceMax) errors.fiatValue = \"Requested amount is higher than supported\";\n  }\n  if (selectedParams.selectedCurrency && !selectedProvider.validCurrencies.includes(selectedParams.selectedCurrency)) {\n    errors.selectedCurrency = \"Unsupported currency\";\n  }\n  if (selectedParams.selectedCryptoCurrency) {\n    const validCryptoCurrenciesByChain = Object.values(selectedProvider.validCryptoCurrenciesByChain).flat().map(currency => currency.value);\n    const finalCryptoCurrency = provider === PAYMENT_PROVIDER.MOONPAY ? selectedParams.selectedCryptoCurrency.toLowerCase() : selectedParams.selectedCryptoCurrency;\n    if (validCryptoCurrenciesByChain && !validCryptoCurrenciesByChain.includes(finalCryptoCurrency)) errors.selectedCryptoCurrency = \"Unsupported cryptoCurrency\";\n  }\n  return {\n    errors,\n    isValid: Object.keys(errors).length === 0\n  };\n};\n// utility functions\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req\n      });\n    }\n    next(done => {\n      const {\n        error\n      } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = `MetaMask: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\nconst getPreopenInstanceId = () => Math.random().toString(36).slice(2);\nconst getTorusUrl = async (buildEnv, integrity) => {\n  let torusUrl;\n  let logLevel;\n  // Do not change this line\n  const version = \"1.41.1\";\n  let versionUsed = integrity.version || version;\n  try {\n    if ((buildEnv === \"binance\" || buildEnv === \"production\") && !integrity.version) {\n      let response;\n      if (!configuration.prodTorusUrl) response = await get(`${configuration.api}/latestversion?name=@toruslabs/torus-embed&version=${version}`, {}, {\n        useAPIKey: true\n      });else response = {\n        data: configuration.prodTorusUrl\n      };\n      versionUsed = response.data;\n      // eslint-disable-next-line require-atomic-updates\n      configuration.prodTorusUrl = response.data;\n    }\n  } catch (error) {\n    log.error(error, \"unable to fetch latest version\");\n  }\n  log.info(\"version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"binance\":\n      torusUrl = `https://binance.tor.us/v${versionUsed}`;\n      logLevel = \"info\";\n      break;\n    case \"testing\":\n      torusUrl = \"https://testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"bnb\":\n      torusUrl = \"https://bnb.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"polygon\":\n      torusUrl = \"https://polygon.tor.us\";\n      logLevel = \"error\";\n      break;\n    case \"lrc\":\n      torusUrl = \"https://lrc.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"beta\":\n      torusUrl = \"https://beta.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://app.tor.us/v${versionUsed}`;\n      logLevel = \"error\";\n      break;\n  }\n  return {\n    torusUrl,\n    logLevel\n  };\n};\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\nconst EMITTED_NOTIFICATIONS = [\"eth_subscription\" // per eth-json-rpc-filters/subscriptionManager\n];\n\nconst NOOP = () => {\n  // empty function\n};\nconst FEATURES_PROVIDER_CHANGE_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=660,width=375\";\nconst FEATURES_DEFAULT_WALLET_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=740,width=1315\";\nconst FEATURES_CONFIRM_WINDOW = \"directories=0,titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=700,width=450\";\nfunction getPopupFeatures() {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const w = 1200;\n  const h = 700;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nfunction ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread$1(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nSafeEventEmitter.defaultMaxListeners = 100;\n// resolve response.result, reject errors\nconst getRpcPromiseCallback = function (resolve, reject) {\n  let unwrapResult = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return (error, response) => {\n    if (error || response.error) {\n      return reject(error || response.error);\n    }\n    return !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  };\n};\nclass TorusInpageProvider extends SafeEventEmitter {\n  /**\n   * The chain ID of the currently connected Ethereum chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Ethereum address.\n   * If null, MetaMask is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n\n  /**\n   * Indicating that this provider is a MetaMask provider.\n   */\n\n  constructor(connectionStream) {\n    let {\n      maxEventListeners = 100,\n      shouldSendMetadata = true,\n      jsonRpcStreamName = \"provider\"\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    _defineProperty(this, \"chainId\", void 0);\n    _defineProperty(this, \"selectedAddress\", void 0);\n    _defineProperty(this, \"_rpcEngine\", void 0);\n    _defineProperty(this, \"networkVersion\", void 0);\n    _defineProperty(this, \"shouldSendMetadata\", void 0);\n    _defineProperty(this, \"isTorus\", void 0);\n    _defineProperty(this, \"_publicConfigStore\", void 0);\n    _defineProperty(this, \"tryPreopenHandle\", void 0);\n    _defineProperty(this, \"enable\", void 0);\n    _defineProperty(this, \"_state\", void 0);\n    _defineProperty(this, \"_jsonRpcConnection\", void 0);\n    _defineProperty(this, \"_sentWarnings\", {\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      publicConfigStore: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    });\n    if (!duplex(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n    // private state\n    this._state = _objectSpread$1({}, TorusInpageProvider._defaultState);\n    // public state\n    this.selectedAddress = null;\n    this.networkVersion = null;\n    this.chainId = null;\n    this.shouldSendMetadata = shouldSendMetadata;\n    // bind functions (to prevent e.g. web3@1.x from making unbound calls)\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._sendSync = this._sendSync.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"MetaMask\"));\n    // subscribe to metamask public config (one-way)\n    this._publicConfigStore = new ObservableStore({\n      storageKey: \"Metamask-Config\"\n    });\n    // handle isUnlocked changes, and chainChanged and networkChanged events\n    // this._publicConfigStore.subscribe((stringifiedState) => {\n    //   // This is because we are using store as string\n    //   const state = JSON.parse(stringifiedState as unknown as string);\n    //   if (\"isUnlocked\" in state && state.isUnlocked !== this._state.isUnlocked) {\n    //     this._state.isUnlocked = state.isUnlocked;\n    //     if (!this._state.isUnlocked) {\n    //       // accounts are never exposed when the extension is locked\n    //       this._handleAccountsChanged([]);\n    //     } else {\n    //       // this will get the exposed accounts, if any\n    //       try {\n    //         this._rpcRequest(\n    //           { method: \"eth_accounts\", params: [] },\n    //           NOOP,\n    //           true // indicating that eth_accounts _should_ update accounts\n    //         );\n    //       } catch (_) {\n    //         // Swallow error\n    //       }\n    //     }\n    //   }\n    //   if (\"selectedAddress\" in state && this.selectedAddress !== state.selectedAddress) {\n    //     try {\n    //       this._rpcRequest(\n    //         { method: \"eth_accounts\", params: [] },\n    //         NOOP,\n    //         true // indicating that eth_accounts _should_ update accounts\n    //       );\n    //     } catch (_) {\n    //       // Swallow error\n    //     }\n    //   }\n    //   // Emit chainChanged event on chain change\n    //   if (\"chainId\" in state && state.chainId !== this.chainId) {\n    //     this.chainId = state.chainId || null;\n    //     this.emit(\"chainChanged\", this.chainId);\n    //     // indicate that we've connected, for EIP-1193 compliance\n    //     // we do this here so that iframe can initialize\n    //     if (!this._state.hasEmittedConnection) {\n    //       this._handleConnect(this.chainId);\n    //       this._state.hasEmittedConnection = true;\n    //     }\n    //   }\n    //   // Emit networkChanged event on network change\n    //   if (\"networkVersion\" in state && state.networkVersion !== this.networkVersion) {\n    //     this.networkVersion = state.networkVersion || null;\n    //     this.emit(\"networkChanged\", this.networkVersion);\n    //   }\n    // });\n    pump(mux.createStream(\"publicConfig\"), storeAsStream(this._publicConfigStore),\n    // RPC requests should still work if only this stream fails\n    logStreamDisconnectWarning.bind(this, \"MetaMask PublicConfigStore\"));\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n    // setup own event listeners\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n    // connect to async provider\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\"));\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n    // json rpc notification listener\n    jsonRpcConnection.events.on(\"notification\", payload => {\n      const {\n        method,\n        params\n      } = payload;\n      if (method === \"wallet_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"wallet_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"wallet_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(payload.method)) {\n        // EIP 1193 subscriptions, per eth-json-rpc-filters/subscriptionManager\n        this.emit(\"data\", payload); // deprecated\n        this.emit(\"notification\", params.result);\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      }\n      // Backward compatibility for older non EIP 1193 subscriptions\n      // this.emit('data', null, payload)\n    });\n  }\n\n  get publicConfigStore() {\n    if (!this._sentWarnings.publicConfigStore) {\n      log.warn(messages.warnings.publicConfigStore);\n      this._sentWarnings.publicConfigStore = true;\n    }\n    return this._publicConfigStore;\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected() {\n    return this._state.isConnected;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n    const {\n      method,\n      params\n    } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   *   addListener, on, once, prependListener, prependOnceListener\n   */\n  addListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n  on(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n  once(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n  prependListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n  prependOnceListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked,\n        networkVersion\n      } = await this.request({\n        method: \"wallet_getProviderState\"\n      });\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", {\n        chainId\n      });\n      this._handleChainChanged({\n        chainId,\n        networkVersion\n      });\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"MetaMask: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @param isInternal - false - Whether the request is internal.\n   */\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n      if (_payload.method === \"eth_accounts\" || _payload.method === \"eth_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"eth_accounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n        return;\n      }\n    }\n    this.tryPreopenHandle(_payload, cb);\n  }\n  send(methodOrPayload, callbackOrArgs) {\n    if (!this._sentWarnings.send) {\n      log.warn(messages.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest({\n            method: methodOrPayload,\n            params: callbackOrArgs\n          }, getRpcPromiseCallback(resolve, reject, false));\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n    if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(methodOrPayload, callbackOrArgs);\n    }\n    return this._sendSync(methodOrPayload);\n  }\n  /**\n   * DEPRECATED.\n   * Internal backwards compatibility method, used in send.\n   */\n  _sendSync(payload) {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n      case \"eth_coinbase\":\n        result = this.selectedAddress || null;\n        break;\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n      case \"net_version\":\n        result = this.networkVersion || null;\n        break;\n      default:\n        throw new Error(messages.errors.unsupportedSync(payload.method));\n    }\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result\n    };\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits MetaMaskInpageProvider#connect\n   */\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits MetaMaskInpageProvider#disconnect\n   */\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013,\n        // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011,\n        // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits MetamaskInpageProvider#disconnect\n   */\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"MetaMask: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"MetaMask: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before eth_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('MetaMask: \"eth_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits MetamaskInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  _handleChainChanged() {\n    let {\n      chainId,\n      networkVersion\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!chainId || !networkVersion) {\n      log.error(\"MetaMask: Received invalid network parameters. Please report this bug.\", {\n        chainId,\n        networkVersion\n      });\n      return;\n    }\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   */\n  _warnOfDeprecation(eventName) {\n    if (this._sentWarnings.events[eventName] === false) {\n      log.warn(messages.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n}\n_defineProperty(TorusInpageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n\nconst defaults = options => ({\n  algorithms: options.algorithms || [\"sha256\"],\n  delimiter: options.delimiter || \" \",\n  full: options.full || false\n});\n// Generate list of hashes\nconst hashes = (options, data) => {\n  const internalHashes = {};\n  options.algorithms.forEach(algorithm => {\n    internalHashes[algorithm] = createHash(algorithm).update(data, \"utf8\").digest(\"base64\");\n  });\n  return internalHashes;\n};\n// Build an integrity string\nconst integrity = (options, sri) => {\n  let output = \"\";\n  // Hash list\n  output += Object.keys(sri.hashes).map(algorithm => `${algorithm}-${sri.hashes[algorithm]}`).join(options.delimiter);\n  return output;\n};\nconst main = (options, data) => {\n  // Defaults\n  const finalOptions = defaults(options);\n  const sri = {\n    hashes: hashes(finalOptions, data),\n    integrity: undefined\n  };\n  sri.integrity = integrity(finalOptions, sri);\n  return finalOptions.full ? sri : sri.integrity;\n};\n\nclass PopupHandler extends EventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n    _defineProperty(this, \"url\", void 0);\n    _defineProperty(this, \"target\", void 0);\n    _defineProperty(this, \"features\", void 0);\n    _defineProperty(this, \"window\", void 0);\n    _defineProperty(this, \"windowTimer\", void 0);\n    _defineProperty(this, \"iClosedWindow\", void 0);\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n  open() {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n  }\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\n/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns - whether the image exists\n */\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window) {\n  const {\n    document\n  } = window;\n  // Use the site's favicon if it exists\n  let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n  // Search through available icons in no particular order\n  icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n  if (icon && (await imgExists(icon.href))) {\n    return icon.href;\n  }\n  return null;\n}\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n/**\n * Sends site metadata over an RPC request.\n */\nasync function sendSiteMetadata(engine) {\n  try {\n    const domainMetadata = await getSiteMetadata();\n    // call engine.handle directly to avoid normal RPC request handling\n    engine.handle({\n      jsonrpc: \"2.0\",\n      id: getPreopenInstanceId(),\n      method: \"wallet_sendDomainMetadata\",\n      params: domainMetadata\n    }, NOOP);\n  } catch (error) {\n    log.error({\n      message: messages.errors.sendSiteMetadata(),\n      originalError: error\n    });\n  }\n}\n\nconst _excluded = [\"host\", \"chainId\", \"networkName\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nconst defaultVerifiers = {\n  [LOGIN_PROVIDER.GOOGLE]: true,\n  [LOGIN_PROVIDER.FACEBOOK]: true,\n  [LOGIN_PROVIDER.REDDIT]: true,\n  [LOGIN_PROVIDER.TWITCH]: true,\n  [LOGIN_PROVIDER.DISCORD]: true\n};\nconst iframeIntegrity = \"sha384-TyJix2beanZzcdkcboa6uCUYMyLD0sGfvLb2m9+BJABgk4/kEutoxLOLL4Xex+DM\";\nconst expectedCacheControlHeader = \"max-age=3600\";\nconst UNSAFE_METHODS = [\"eth_sendTransaction\", \"eth_signTypedData\", \"eth_signTypedData_v3\", \"eth_signTypedData_v4\", \"personal_sign\", \"eth_getEncryptionPublicKey\", \"eth_decrypt\", \"wallet_addEthereumChain\", \"wallet_switchEthereumChain\"];\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\", {\n      check: false,\n      hash: iframeIntegrity,\n      version: \"\"\n    });\n    torusIframeHtml.href = `${torusUrl}/popup`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\nclass Torus {\n  constructor() {\n    let {\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      buttonSize = 56,\n      modalZIndex = 99999,\n      apiKey = \"torus-default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _defineProperty(this, \"buttonPosition\", BUTTON_POSITION.BOTTOM_LEFT);\n    _defineProperty(this, \"buttonSize\", void 0);\n    _defineProperty(this, \"torusUrl\", void 0);\n    _defineProperty(this, \"torusIframe\", void 0);\n    _defineProperty(this, \"styleLink\", void 0);\n    _defineProperty(this, \"isLoggedIn\", void 0);\n    _defineProperty(this, \"isInitialized\", void 0);\n    _defineProperty(this, \"torusWidgetVisibility\", void 0);\n    _defineProperty(this, \"torusAlert\", void 0);\n    _defineProperty(this, \"apiKey\", void 0);\n    _defineProperty(this, \"modalZIndex\", void 0);\n    _defineProperty(this, \"alertZIndex\", void 0);\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n    _defineProperty(this, \"isIframeFullScreen\", void 0);\n    _defineProperty(this, \"whiteLabel\", void 0);\n    _defineProperty(this, \"requestedVerifier\", void 0);\n    _defineProperty(this, \"currentVerifier\", void 0);\n    _defineProperty(this, \"embedTranslations\", void 0);\n    _defineProperty(this, \"ethereum\", void 0);\n    _defineProperty(this, \"provider\", void 0);\n    _defineProperty(this, \"communicationMux\", void 0);\n    _defineProperty(this, \"isLoginCallback\", void 0);\n    _defineProperty(this, \"paymentProviders\", configuration.paymentProviders);\n    _defineProperty(this, \"loginHint\", \"\");\n    _defineProperty(this, \"useWalletConnect\", void 0);\n    _defineProperty(this, \"isCustomLogin\", false);\n    this.buttonPosition = buttonPosition;\n    this.buttonSize = buttonSize;\n    this.torusUrl = \"\";\n    this.isLoggedIn = false; // ethereum.enable working\n    this.isInitialized = false; // init done\n    this.torusWidgetVisibility = true;\n    this.requestedVerifier = \"\";\n    this.currentVerifier = \"\";\n    // this.nodeDetailManager = new NodeDetailManager();\n    // this.torusJs = new TorusJs({\n    //   metadataHost: \"https://metadata.tor.us\",\n    //   allowHost: \"https://signer.tor.us/api/allow\",\n    //   network: \"mainnet\",\n    // });\n    this.apiKey = apiKey;\n    setAPIKey(apiKey);\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.isIframeFullScreen = false;\n  }\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      // deprecated: use loginConfig instead\n      enabledVerifiers = defaultVerifiers,\n      network = {\n        host: \"mainnet\",\n        chainId: null,\n        networkName: \"\",\n        blockExplorer: \"\",\n        ticker: \"\",\n        tickerName: \"\"\n      },\n      loginConfig = {},\n      showTorusButton = true,\n      integrity = {\n        check: false,\n        hash: iframeIntegrity,\n        version: \"\"\n      },\n      whiteLabel,\n      skipTKey = false,\n      useWalletConnect = false,\n      mfaLevel = \"default\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv, integrity);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    this.whiteLabel = whiteLabel;\n    this.useWalletConnect = useWalletConnect;\n    this.isCustomLogin = !!(loginConfig && Object.keys(loginConfig).length > 0) || !!(whiteLabel && Object.keys(whiteLabel).length > 0);\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    this.torusWidgetVisibility = showTorusButton;\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"popup\";else torusIframeUrl.pathname += \"/popup\";\n    torusIframeUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n    // Iframe code\n    this.torusIframe = htmlToElement(`<iframe\n        id=\"torusIframe\"\n        allow=${useWalletConnect ? \"camera\" : \"\"}\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%; color-scheme: none;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex}\"\n      ></iframe>`);\n    this.torusAlertContainer = htmlToElement('<div id=\"torusAlertContainer\"></div>');\n    this.torusAlertContainer.style.display = \"none\";\n    this.torusAlertContainer.style.setProperty(\"z-index\", this.alertZIndex.toString());\n    const link = window.document.createElement(\"link\");\n    link.setAttribute(\"rel\", \"stylesheet\");\n    link.setAttribute(\"type\", \"text/css\");\n    link.setAttribute(\"href\", `${torusUrl}/css/widget.css`);\n    this.styleLink = link;\n    const {\n      defaultLanguage = getUserLanguage(),\n      customTranslations = {}\n    } = this.whiteLabel || {};\n    const mergedTranslations = deepmerge(configuration.translations, customTranslations);\n    const languageTranslations = mergedTranslations[defaultLanguage] || configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    const handleSetup = async () => {\n      await documentReady();\n      return new Promise((resolve, reject) => {\n        this.torusIframe.onload = async () => {\n          // only do this if iframe is not full screen\n          this._setupWeb3();\n          const initStream = this.communicationMux.getStream(\"init_stream\");\n          initStream.on(\"data\", chunk => {\n            const {\n              name,\n              data,\n              error\n            } = chunk;\n            if (name === \"init_complete\" && data.success) {\n              // resolve promise\n              this.isInitialized = true;\n              this._displayIframe(this.isIframeFullScreen);\n              resolve(undefined);\n            } else if (error) {\n              reject(new Error(error));\n            }\n          });\n          initStream.write({\n            name: \"init_stream\",\n            data: {\n              enabledVerifiers,\n              loginConfig,\n              whiteLabel: this.whiteLabel,\n              buttonPosition: this.buttonPosition,\n              buttonSize: this.buttonSize,\n              torusWidgetVisibility: this.torusWidgetVisibility,\n              apiKey: this.apiKey,\n              skipTKey,\n              network,\n              mfaLevel\n            }\n          });\n        };\n        window.document.head.appendChild(this.styleLink);\n        window.document.body.appendChild(this.torusIframe);\n        window.document.body.appendChild(this.torusAlertContainer);\n      });\n    };\n    if (buildEnv === \"production\" && integrity.check) {\n      // hacky solution to check for iframe integrity\n      const fetchUrl = `${torusUrl}/popup`;\n      const resp = await fetch(fetchUrl, {\n        cache: \"reload\"\n      });\n      if (resp.headers.get(\"Cache-Control\") !== expectedCacheControlHeader) {\n        throw new Error(`Unexpected Cache-Control headers, got ${resp.headers.get(\"Cache-Control\")}`);\n      }\n      const response = await resp.text();\n      const calculatedIntegrity = main({\n        algorithms: [\"sha384\"]\n      }, response);\n      log.info(calculatedIntegrity, \"integrity\");\n      if (calculatedIntegrity === integrity.hash) {\n        await handleSetup();\n      } else {\n        this.clearInit();\n        throw new Error(\"Integrity check failed\");\n      }\n    } else {\n      await handleSetup();\n    }\n    return undefined;\n  }\n  login() {\n    let {\n      verifier = \"\",\n      login_hint: loginHint = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    this.requestedVerifier = verifier;\n    this.loginHint = loginHint;\n    return this.ethereum.enable();\n  }\n  logout() {\n    return new Promise((resolve, reject) => {\n      if (!this.isLoggedIn) {\n        reject(new Error(\"User has not logged in yet\"));\n        return;\n      }\n      const logOutStream = this.communicationMux.getStream(\"logout\");\n      logOutStream.write({\n        name: \"logOut\"\n      });\n      const statusStream = this.communicationMux.getStream(\"status\");\n      const statusStreamHandler = status => {\n        if (!status.loggedIn) {\n          this.isLoggedIn = false;\n          this.currentVerifier = \"\";\n          this.requestedVerifier = \"\";\n          resolve();\n        } else reject(new Error(\"Some Error Occured\"));\n      };\n      handleStream(statusStream, \"data\", statusStreamHandler);\n    });\n  }\n  async cleanUp() {\n    if (this.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof HTMLDocument;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n  hideTorusButton() {\n    this.torusWidgetVisibility = false;\n    this._sendWidgetVisibilityStatus(false);\n    this._displayIframe();\n  }\n  showTorusButton() {\n    this.torusWidgetVisibility = true;\n    this._sendWidgetVisibilityStatus(true);\n    this._displayIframe();\n  }\n  setProvider(_ref) {\n    let {\n        host = \"mainnet\",\n        chainId = null,\n        networkName = \"\"\n      } = _ref,\n      rest = _objectWithoutProperties(_ref, _excluded);\n    return new Promise((resolve, reject) => {\n      const providerChangeStream = this.communicationMux.getStream(\"provider_change\");\n      const handler = chunk => {\n        const {\n          err,\n          success\n        } = chunk.data;\n        log.info(chunk);\n        if (err) {\n          reject(err);\n        } else if (success) {\n          resolve();\n        } else reject(new Error(\"some error occured\"));\n      };\n      handleStream(providerChangeStream, \"data\", handler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId, {\n        target: \"_blank\",\n        features: FEATURES_PROVIDER_CHANGE_WINDOW\n      });\n      providerChangeStream.write({\n        name: \"show_provider_change\",\n        data: {\n          network: _objectSpread({\n            host,\n            chainId,\n            networkName\n          }, rest),\n          preopenInstanceId,\n          override: false\n        }\n      });\n    });\n  }\n  showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const showWalletStream = this.communicationMux.getStream(\"show_wallet\");\n    const finalPath = path ? `/${path}` : \"\";\n    showWalletStream.write({\n      name: \"show_wallet\",\n      data: {\n        path: finalPath\n      }\n    });\n    const showWalletHandler = chunk => {\n      if (chunk.name === \"show_wallet_instance\") {\n        // Let the error propogate up (hence, no try catch)\n        const {\n          instanceId\n        } = chunk.data;\n        const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n        // Using URL constructor to prevent js injection and allow parameter validation.!\n        finalUrl.searchParams.append(\"integrity\", \"true\");\n        finalUrl.searchParams.append(\"instanceId\", instanceId);\n        Object.keys(params).forEach(x => {\n          finalUrl.searchParams.append(x, params[x]);\n        });\n        finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n        const walletWindow = new PopupHandler({\n          url: finalUrl,\n          features: FEATURES_DEFAULT_WALLET_WINDOW\n        });\n        walletWindow.open();\n      }\n    };\n    handleStream(showWalletStream, \"data\", showWalletHandler);\n  }\n  async getPublicAddress(_ref2) {\n    let {\n      verifier,\n      verifierId,\n      isExtended = false\n    } = _ref2;\n    if (!configuration.supportedVerifierList.includes(verifier) || !WALLET_OPENLOGIN_VERIFIER_MAP[verifier]) throw new Error(\"Unsupported verifier\");\n    const walletVerifier = verifier;\n    const openloginVerifier = WALLET_OPENLOGIN_VERIFIER_MAP[verifier];\n    const url = new URL(`https://api.tor.us/lookup/torus`);\n    url.searchParams.append(\"verifier\", openloginVerifier);\n    url.searchParams.append(\"verifierId\", verifierId);\n    url.searchParams.append(\"walletVerifier\", walletVerifier);\n    url.searchParams.append(\"network\", \"mainnet\");\n    url.searchParams.append(\"isExtended\", isExtended.toString());\n    return get(url.href, {\n      headers: {\n        \"Content-Type\": \"application/json; charset=utf-8\"\n      }\n    }, {\n      useAPIKey: true\n    });\n  }\n  getUserInfo(message) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const userInfoAccessStream = this.communicationMux.getStream(\"user_info_access\");\n        userInfoAccessStream.write({\n          name: \"user_info_access_request\"\n        });\n        const userInfoAccessHandler = chunk => {\n          const {\n            name,\n            data: {\n              approved,\n              payload,\n              rejected,\n              newRequest\n            }\n          } = chunk;\n          if (name === \"user_info_access_response\") {\n            if (approved) {\n              resolve(payload);\n            } else if (rejected) {\n              reject(new Error(\"User rejected the request\"));\n            } else if (newRequest) {\n              const userInfoStream = this.communicationMux.getStream(\"user_info\");\n              const userInfoHandler = handlerChunk => {\n                if (handlerChunk.name === \"user_info_response\") {\n                  if (handlerChunk.data.approved) {\n                    resolve(handlerChunk.data.payload);\n                  } else {\n                    reject(new Error(\"User rejected the request\"));\n                  }\n                }\n              };\n              handleStream(userInfoStream, \"data\", userInfoHandler);\n              const preopenInstanceId = getPreopenInstanceId();\n              this._handleWindow(preopenInstanceId, {\n                target: \"_blank\",\n                features: FEATURES_PROVIDER_CHANGE_WINDOW\n              });\n              userInfoStream.write({\n                name: \"user_info_request\",\n                data: {\n                  message,\n                  preopenInstanceId\n                }\n              });\n            }\n          }\n        };\n        handleStream(userInfoAccessStream, \"data\", userInfoAccessHandler);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n  initiateTopup(provider, params) {\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        const {\n          errors,\n          isValid\n        } = validatePaymentProvider(provider, params);\n        if (!isValid) {\n          reject(new Error(JSON.stringify(errors)));\n          return;\n        }\n        const topupStream = this.communicationMux.getStream(\"topup\");\n        const topupHandler = chunk => {\n          if (chunk.name === \"topup_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(topupStream, \"data\", topupHandler);\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId);\n        topupStream.write({\n          name: \"topup_request\",\n          data: {\n            provider,\n            params,\n            preopenInstanceId\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n  async loginWithPrivateKey(loginParams) {\n    const {\n      privateKey,\n      userInfo\n    } = loginParams;\n    return new Promise((resolve, reject) => {\n      if (this.isInitialized) {\n        if (Buffer.from(privateKey, \"hex\").length !== 32) {\n          reject(new Error(\"Invalid private key, Please provide a 32 byte valid secp25k1 private key\"));\n          return;\n        }\n        const loginPrivKeyStream = this.communicationMux.getStream(\"login_with_private_key\");\n        const loginHandler = chunk => {\n          if (chunk.name === \"login_with_private_key_response\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n          }\n        };\n        handleStream(loginPrivKeyStream, \"data\", loginHandler);\n        loginPrivKeyStream.write({\n          name: \"login_with_private_key_request\",\n          data: {\n            privateKey,\n            userInfo\n          }\n        });\n      } else reject(new Error(\"Torus is not initialized yet\"));\n    });\n  }\n  async showWalletConnectScanner() {\n    if (!this.useWalletConnect) throw new Error(\"Set `useWalletConnect` as true in init function options to use wallet connect scanner\");\n    return new Promise((resolve, reject) => {\n      if (this.isLoggedIn) {\n        const walletConnectStream = this.communicationMux.getStream(\"wallet_connect_stream\");\n        const walletConnectHandler = chunk => {\n          if (chunk.name === \"wallet_connect_stream_res\") {\n            if (chunk.data.success) {\n              resolve(chunk.data.success);\n            } else {\n              reject(new Error(chunk.data.error));\n            }\n            this._displayIframe();\n          }\n        };\n        handleStream(walletConnectStream, \"data\", walletConnectHandler);\n        walletConnectStream.write({\n          name: \"wallet_connect_stream_req\"\n        });\n        this._displayIframe(true);\n      } else reject(new Error(\"User has not logged in yet\"));\n    });\n  }\n  _handleWindow(preopenInstanceId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (preopenInstanceId) {\n      const windowStream = this.communicationMux.getStream(\"window\");\n      const finalUrl = new URL(url || `${this.torusUrl}/redirect?preopenInstanceId=${preopenInstanceId}`);\n      if (finalUrl.hash) finalUrl.hash += `&isCustomLogin=${this.isCustomLogin}`;else finalUrl.hash = `#isCustomLogin=${this.isCustomLogin}`;\n      const handledWindow = new PopupHandler({\n        url: finalUrl,\n        target,\n        features\n      });\n      handledWindow.open();\n      if (!handledWindow.window) {\n        this._createPopupBlockAlert(preopenInstanceId, finalUrl.href);\n        return;\n      }\n      windowStream.write({\n        name: \"opened_window\",\n        data: {\n          preopenInstanceId\n        }\n      });\n      const closeHandler = _ref3 => {\n        let {\n          preopenInstanceId: receivedId,\n          close\n        } = _ref3;\n        if (receivedId === preopenInstanceId && close) {\n          handledWindow.close();\n          windowStream.removeListener(\"data\", closeHandler);\n        }\n      };\n      windowStream.on(\"data\", closeHandler);\n      handledWindow.once(\"close\", () => {\n        windowStream.write({\n          data: {\n            preopenInstanceId,\n            closed: true\n          }\n        });\n        windowStream.removeListener(\"data\", closeHandler);\n      });\n    }\n  }\n  _setEmbedWhiteLabel(element) {\n    // Set whitelabel\n    const {\n      theme\n    } = this.whiteLabel || {};\n    if (theme) {\n      const {\n        isDark = false,\n        colors = {}\n      } = theme;\n      if (isDark) element.classList.add(\"torus-dark\");\n      if (colors.torusBrand1) element.style.setProperty(\"--torus-brand-1\", colors.torusBrand1);\n      if (colors.torusGray2) element.style.setProperty(\"--torus-gray-2\", colors.torusGray2);\n    }\n  }\n  _getLogoUrl() {\n    let logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    if (this.whiteLabel?.theme?.isDark) {\n      logoUrl = this.whiteLabel?.logoLight || logoUrl;\n    } else {\n      logoUrl = this.whiteLabel?.logoDark || logoUrl;\n    }\n    return logoUrl;\n  }\n  _sendWidgetVisibilityStatus(status) {\n    const torusWidgetVisibilityStream = this.communicationMux.getStream(\"torus-widget-visibility\");\n    torusWidgetVisibilityStream.write({\n      data: status\n    });\n  }\n  _displayIframe() {\n    let isFull = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const style = {};\n    const size = this.buttonSize + 14; // 15px padding\n    // set phase\n    if (!isFull) {\n      style.display = this.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = `${size}px`;\n      style.width = `${size}px`;\n      switch (this.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this.isIframeFullScreen = isFull;\n  }\n  _setupWeb3() {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const metamaskStream = new BasePostMessageStream({\n      name: \"embed_metamask\",\n      target: \"iframe_metamask\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    });\n    // Due to compatibility reasons, we should not set up multiplexing on window.metamaskstream\n    // because the MetamaskInpageProvider also attempts to do so.\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_comm\",\n      target: \"iframe_comm\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: new URL(this.torusUrl).origin\n    });\n    // Backward compatibility with Gotchi :)\n    // window.metamaskStream = this.communicationStream\n    // compose the inpage provider\n    const inpageProvider = new TorusInpageProvider(metamaskStream);\n    // detect eth_requestAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inpageProvider[m];\n      inpageProvider[m] = function providerFunc(method) {\n        if (method && method === \"eth_requestAccounts\") {\n          return inpageProvider.enable();\n        }\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        return originalMethod.apply(this, [method, ...args]);\n      };\n    };\n    detectAccountRequestPrototypeModifier(\"send\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    inpageProvider.enable = () => {\n      return new Promise((resolve, reject) => {\n        // If user is already logged in, we assume they have given access to the website\n        inpageProvider.sendAsync({\n          jsonrpc: \"2.0\",\n          id: getPreopenInstanceId(),\n          method: \"eth_requestAccounts\",\n          params: []\n        }, (err, response) => {\n          const {\n            result: res\n          } = response || {};\n          if (err) {\n            setTimeout(() => {\n              reject(err);\n            }, 50);\n          } else if (Array.isArray(res) && res.length > 0) {\n            // If user is already rehydrated, resolve this\n            // else wait for something to be written to status stream\n            const handleLoginCb = () => {\n              if (this.requestedVerifier !== \"\" && this.currentVerifier !== this.requestedVerifier) {\n                const {\n                  requestedVerifier\n                } = this;\n                // eslint-disable-next-line promise/no-promise-in-callback\n                this.logout()\n                // eslint-disable-next-line promise/always-return\n                .then(_ => {\n                  this.requestedVerifier = requestedVerifier;\n                  this._showLoginPopup(true, resolve, reject);\n                }).catch(error => reject(error));\n              } else {\n                resolve(res);\n              }\n            };\n            if (this.isLoggedIn) {\n              handleLoginCb();\n            } else {\n              this.isLoginCallback = handleLoginCb;\n            }\n          } else {\n            // set up listener for login\n            this._showLoginPopup(true, resolve, reject);\n          }\n        });\n      });\n    };\n    inpageProvider.tryPreopenHandle = (payload, cb) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && UNSAFE_METHODS.includes(_payload.method)) {\n        const preopenInstanceId = getPreopenInstanceId();\n        this._handleWindow(preopenInstanceId, {\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n        _payload.preopenInstanceId = preopenInstanceId;\n      }\n      inpageProvider._rpcEngine.handle(_payload, cb);\n    };\n    // Work around for web3@1.0 deleting the bound `sendAsync` but not the unbound\n    // `sendAsync` method on the prototype, causing `this` reference issues with drizzle\n    const proxiedInpageProvider = new Proxy(inpageProvider, {\n      // straight up lie that we deleted the property so that it doesnt\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.ethereum = proxiedInpageProvider;\n    const communicationMux = setupMultiplex(communicationStream);\n    this.communicationMux = communicationMux;\n    const windowStream = communicationMux.getStream(\"window\");\n    windowStream.on(\"data\", chunk => {\n      if (chunk.name === \"create_window\") {\n        // url is the url we need to open\n        // we can pass the final url upfront so that it removes the step of redirecting to /redirect and waiting for finalUrl\n        this._createPopupBlockAlert(chunk.data.preopenInstanceId, chunk.data.url);\n      }\n    });\n    // show torus widget if button clicked\n    const widgetStream = communicationMux.getStream(\"widget\");\n    widgetStream.on(\"data\", chunk => {\n      const {\n        data\n      } = chunk;\n      this._displayIframe(data);\n    });\n    // Show torus button if wallet has been hydrated/detected\n    const statusStream = communicationMux.getStream(\"status\");\n    statusStream.on(\"data\", status => {\n      // login\n      if (status.loggedIn) {\n        this.isLoggedIn = status.loggedIn;\n        this.currentVerifier = status.verifier;\n      } // logout\n      else this._displayIframe();\n      if (this.isLoginCallback) {\n        this.isLoginCallback();\n        delete this.isLoginCallback;\n      }\n    });\n    this.provider = proxiedInpageProvider;\n    if (this.provider.shouldSendMetadata) sendSiteMetadata(this.provider._rpcEngine);\n    inpageProvider._initializeState();\n    log.debug(\"Torus - injected provider\");\n  }\n  _showLoginPopup(calledFromEmbed, resolve, reject) {\n    const loginHandler = data => {\n      const {\n        err,\n        selectedAddress\n      } = data;\n      if (err) {\n        log.error(err);\n        if (reject) reject(err);\n      }\n      // returns an array (cause accounts expects it)\n      else if (resolve) resolve([selectedAddress]);\n      if (this.isIframeFullScreen) this._displayIframe();\n    };\n    const oauthStream = this.communicationMux.getStream(\"oauth\");\n    if (!this.requestedVerifier) {\n      this._displayIframe(true);\n      handleStream(oauthStream, \"data\", loginHandler);\n      oauthStream.write({\n        name: \"oauth_modal\",\n        data: {\n          calledFromEmbed\n        }\n      });\n    } else {\n      handleStream(oauthStream, \"data\", loginHandler);\n      const preopenInstanceId = getPreopenInstanceId();\n      this._handleWindow(preopenInstanceId);\n      oauthStream.write({\n        name: \"oauth\",\n        data: {\n          calledFromEmbed,\n          verifier: this.requestedVerifier,\n          preopenInstanceId,\n          login_hint: this.loginHint\n        }\n      });\n    }\n  }\n  _createPopupBlockAlert(preopenInstanceId, url) {\n    const logoUrl = this._getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` + \"<div>\" + `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` + `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(preopenInstanceId, {\n          url,\n          target: \"_blank\",\n          features: FEATURES_CONFIRM_WINDOW\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n    this._setEmbedWhiteLabel(torusAlert);\n    const attachOnLoad = () => {\n      this.torusAlertContainer.style.display = \"block\";\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n    runOnLoad(attachOnLoad);\n    runOnLoad(bindOnLoad);\n  }\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, SUPPORTED_PAYMENT_NETWORK, TORUS_BUILD_ENV, TorusInpageProvider, WALLET_OPENLOGIN_VERIFIER_MAP, WALLET_VERIFIERS, Torus as default };\n//# sourceMappingURL=torus.esm.js.map\n"]},"metadata":{},"sourceType":"module"}