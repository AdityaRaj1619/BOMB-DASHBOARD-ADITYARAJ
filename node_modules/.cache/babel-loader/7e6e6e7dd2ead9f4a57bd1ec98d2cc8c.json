{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{createContext,useEffect,useState}from'react';import{useWallet}from'use-wallet';import BombFinance from'../../bomb-finance';import config from'../../config';export var Context=createContext({bombFinance:null});export var BombFinanceProvider=function BombFinanceProvider(_ref){var children=_ref.children;var _useWallet=useWallet(),ethereum=_useWallet.ethereum,account=_useWallet.account;var _useState=useState(),_useState2=_slicedToArray(_useState,2),bombFinance=_useState2[0],setBombFinance=_useState2[1];useEffect(function(){if(!bombFinance){var bomb=new BombFinance(config);if(account){// wallet was unlocked at initialization\nbomb.unlockWallet(ethereum,account);}setBombFinance(bomb);}else if(account){bombFinance.unlockWallet(ethereum,account);}},[account,ethereum,bombFinance]);return/*#__PURE__*/React.createElement(Context.Provider,{value:{bombFinance:bombFinance}},children);};","map":{"version":3,"names":["React","createContext","useEffect","useState","useWallet","BombFinance","config","Context","bombFinance","BombFinanceProvider","_ref","children","_useWallet","ethereum","account","_useState","_useState2","_slicedToArray","setBombFinance","bomb","unlockWallet","createElement","Provider","value"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/contexts/BombFinanceProvider/BombFinanceProvider.tsx"],"sourcesContent":["import React, {createContext, useEffect, useState} from 'react';\nimport {useWallet} from 'use-wallet';\nimport BombFinance from '../../bomb-finance';\nimport config from '../../config';\n\nexport interface BombFinanceContext {\n  bombFinance?: BombFinance;\n}\n\nexport const Context = createContext<BombFinanceContext>({bombFinance: null});\n\nexport const BombFinanceProvider: React.FC = ({children}) => {\n  const {ethereum, account} = useWallet();\n  const [bombFinance, setBombFinance] = useState<BombFinance>();\n\n  useEffect(() => {\n    if (!bombFinance) {\n      const bomb = new BombFinance(config);\n      if (account) {\n        // wallet was unlocked at initialization\n        bomb.unlockWallet(ethereum, account);\n      }\n      setBombFinance(bomb);\n    } else if (account) {\n      bombFinance.unlockWallet(ethereum, account);\n    }\n  }, [account, ethereum, bombFinance]);\n\n  return <Context.Provider value={{bombFinance}}>{children}</Context.Provider>;\n};\n"],"mappings":"6LAAA,MAAO,CAAAA,KAAK,EAAGC,aAAa,CAAEC,SAAS,CAAEC,QAAQ,KAAO,OAAO,CAC/D,OAAQC,SAAS,KAAO,YAAY,CACpC,MAAO,CAAAC,WAAW,KAAM,oBAAoB,CAC5C,MAAO,CAAAC,MAAM,KAAM,cAAc,CAMjC,MAAO,IAAM,CAAAC,OAAO,CAAGN,aAAa,CAAqB,CAACO,WAAW,CAAE,IAAI,CAAC,CAAC,CAE7E,MAAO,IAAM,CAAAC,mBAA6B,CAAG,QAAhC,CAAAA,mBAA6BA,CAAAC,IAAA,CAAmB,IAAd,CAAAC,QAAQ,CAAAD,IAAA,CAARC,QAAQ,CACrD,IAAAC,UAAA,CAA4BR,SAAS,EAAE,CAAhCS,QAAQ,CAAAD,UAAA,CAARC,QAAQ,CAAEC,OAAO,CAAAF,UAAA,CAAPE,OAAO,CACxB,IAAAC,SAAA,CAAsCZ,QAAQ,EAAe,CAAAa,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAtDP,WAAW,CAAAQ,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAElCd,SAAS,CAAC,UAAM,CACd,GAAI,CAACM,WAAW,CAAE,CAChB,GAAM,CAAAW,IAAI,CAAG,GAAI,CAAAd,WAAW,CAACC,MAAM,CAAC,CACpC,GAAIQ,OAAO,CAAE,CACX;AACAK,IAAI,CAACC,YAAY,CAACP,QAAQ,CAAEC,OAAO,CAAC,CACtC,CACAI,cAAc,CAACC,IAAI,CAAC,CACtB,CAAC,IAAM,IAAIL,OAAO,CAAE,CAClBN,WAAW,CAACY,YAAY,CAACP,QAAQ,CAAEC,OAAO,CAAC,CAC7C,CACF,CAAC,CAAE,CAACA,OAAO,CAAED,QAAQ,CAAEL,WAAW,CAAC,CAAC,CAEpC,mBAAOR,KAAA,CAAAqB,aAAA,CAACd,OAAO,CAACe,QAAQ,EAACC,KAAK,CAAE,CAACf,WAAW,CAAXA,WAAW,CAAE,EAAEG,QAAQ,CAAoB,CAC9E,CAAC"},"metadata":{},"sourceType":"module"}