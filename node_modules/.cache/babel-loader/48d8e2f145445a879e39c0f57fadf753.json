{"ast":null,"code":"import{useCallback,useMemo}from'react';import{addPopup,removePopup,toggleWalletModal,toggleSettingsMenu}from'./actions';import{useSelector,useDispatch}from'react-redux';import{useWallet}from'use-wallet';export function useBlockNumber(){var _useWallet=useWallet(),chainId=_useWallet.chainId;return useSelector(function(state){return state.application.blockNumber[chainId!==null&&chainId!==void 0?chainId:-1];});}export function useWalletModalOpen(){return useSelector(function(state){return state.application.walletModalOpen;});}export function useWalletModalToggle(){var dispatch=useDispatch();return useCallback(function(){return dispatch(toggleWalletModal());},[dispatch]);}export function useSettingsMenuOpen(){return useSelector(function(state){return state.application.settingsMenuOpen;});}export function useToggleSettingsMenu(){var dispatch=useDispatch();return useCallback(function(){return dispatch(toggleSettingsMenu());},[dispatch]);}// returns a function that allows adding a popup\nexport function useAddPopup(){var dispatch=useDispatch();return useCallback(function(content,key){dispatch(addPopup({content:content,key:key}));},[dispatch]);}// returns a function that allows removing a popup via its key\nexport function useRemovePopup(){var dispatch=useDispatch();return useCallback(function(key){dispatch(removePopup({key:key}));},[dispatch]);}// get the list of active popups\nexport function useActivePopups(){var list=useSelector(function(state){return state.application.popupList;});return useMemo(function(){return list.filter(function(item){return item.show;});},[list]);}","map":{"version":3,"names":["useCallback","useMemo","addPopup","removePopup","toggleWalletModal","toggleSettingsMenu","useSelector","useDispatch","useWallet","useBlockNumber","_useWallet","chainId","state","application","blockNumber","useWalletModalOpen","walletModalOpen","useWalletModalToggle","dispatch","useSettingsMenuOpen","settingsMenuOpen","useToggleSettingsMenu","useAddPopup","content","key","useRemovePopup","useActivePopups","list","popupList","filter","item","show"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/state/application/hooks.ts"],"sourcesContent":["import {useCallback, useMemo} from 'react';\nimport {addPopup, PopupContent, removePopup, toggleWalletModal, toggleSettingsMenu} from './actions';\nimport {useSelector, useDispatch} from 'react-redux';\nimport {AppState} from '../index';\nimport {useWallet} from 'use-wallet';\n\nexport function useBlockNumber(): number | undefined {\n  const {chainId} = useWallet();\n  return useSelector((state: AppState) => state.application.blockNumber[chainId ?? -1]);\n}\n\nexport function useWalletModalOpen(): boolean {\n  return useSelector((state: AppState) => state.application.walletModalOpen);\n}\n\nexport function useWalletModalToggle(): () => void {\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(toggleWalletModal()), [dispatch]);\n}\n\nexport function useSettingsMenuOpen(): boolean {\n  return useSelector((state: AppState) => state.application.settingsMenuOpen);\n}\n\nexport function useToggleSettingsMenu(): () => void {\n  const dispatch = useDispatch();\n  return useCallback(() => dispatch(toggleSettingsMenu()), [dispatch]);\n}\n\n// returns a function that allows adding a popup\nexport function useAddPopup(): (content: PopupContent, key?: string) => void {\n  const dispatch = useDispatch();\n\n  return useCallback(\n    (content: PopupContent, key?: string) => {\n      dispatch(addPopup({content, key}));\n    },\n    [dispatch],\n  );\n}\n\n// returns a function that allows removing a popup via its key\nexport function useRemovePopup(): (key: string) => void {\n  const dispatch = useDispatch();\n  return useCallback(\n    (key: string) => {\n      dispatch(removePopup({key}));\n    },\n    [dispatch],\n  );\n}\n\n// get the list of active popups\nexport function useActivePopups(): AppState['application']['popupList'] {\n  const list = useSelector((state: AppState) => state.application.popupList);\n  return useMemo(() => list.filter((item) => item.show), [list]);\n}\n"],"mappings":"AAAA,OAAQA,WAAW,CAAEC,OAAO,KAAO,OAAO,CAC1C,OAAQC,QAAQ,CAAgBC,WAAW,CAAEC,iBAAiB,CAAEC,kBAAkB,KAAO,WAAW,CACpG,OAAQC,WAAW,CAAEC,WAAW,KAAO,aAAa,CAEpD,OAAQC,SAAS,KAAO,YAAY,CAEpC,MAAO,SAAS,CAAAC,cAAcA,CAAA,CAAuB,CACnD,IAAAC,UAAA,CAAkBF,SAAS,EAAE,CAAtBG,OAAO,CAAAD,UAAA,CAAPC,OAAO,CACd,MAAO,CAAAL,WAAW,CAAC,SAACM,KAAe,QAAK,CAAAA,KAAK,CAACC,WAAW,CAACC,WAAW,CAACH,OAAO,SAAPA,OAAO,UAAPA,OAAO,CAAI,CAAC,CAAC,CAAC,GAAC,CACvF,CAEA,MAAO,SAAS,CAAAI,kBAAkBA,CAAA,CAAY,CAC5C,MAAO,CAAAT,WAAW,CAAC,SAACM,KAAe,QAAK,CAAAA,KAAK,CAACC,WAAW,CAACG,eAAe,GAAC,CAC5E,CAEA,MAAO,SAAS,CAAAC,oBAAoBA,CAAA,CAAe,CACjD,GAAM,CAAAC,QAAQ,CAAGX,WAAW,EAAE,CAC9B,MAAO,CAAAP,WAAW,CAAC,iBAAM,CAAAkB,QAAQ,CAACd,iBAAiB,EAAE,CAAC,GAAE,CAACc,QAAQ,CAAC,CAAC,CACrE,CAEA,MAAO,SAAS,CAAAC,mBAAmBA,CAAA,CAAY,CAC7C,MAAO,CAAAb,WAAW,CAAC,SAACM,KAAe,QAAK,CAAAA,KAAK,CAACC,WAAW,CAACO,gBAAgB,GAAC,CAC7E,CAEA,MAAO,SAAS,CAAAC,qBAAqBA,CAAA,CAAe,CAClD,GAAM,CAAAH,QAAQ,CAAGX,WAAW,EAAE,CAC9B,MAAO,CAAAP,WAAW,CAAC,iBAAM,CAAAkB,QAAQ,CAACb,kBAAkB,EAAE,CAAC,GAAE,CAACa,QAAQ,CAAC,CAAC,CACtE,CAEA;AACA,MAAO,SAAS,CAAAI,WAAWA,CAAA,CAAkD,CAC3E,GAAM,CAAAJ,QAAQ,CAAGX,WAAW,EAAE,CAE9B,MAAO,CAAAP,WAAW,CAChB,SAACuB,OAAqB,CAAEC,GAAY,CAAK,CACvCN,QAAQ,CAAChB,QAAQ,CAAC,CAACqB,OAAO,CAAPA,OAAO,CAAEC,GAAG,CAAHA,GAAG,CAAC,CAAC,CAAC,CACpC,CAAC,CACD,CAACN,QAAQ,CAAC,CACX,CACH,CAEA;AACA,MAAO,SAAS,CAAAO,cAAcA,CAAA,CAA0B,CACtD,GAAM,CAAAP,QAAQ,CAAGX,WAAW,EAAE,CAC9B,MAAO,CAAAP,WAAW,CAChB,SAACwB,GAAW,CAAK,CACfN,QAAQ,CAACf,WAAW,CAAC,CAACqB,GAAG,CAAHA,GAAG,CAAC,CAAC,CAAC,CAC9B,CAAC,CACD,CAACN,QAAQ,CAAC,CACX,CACH,CAEA;AACA,MAAO,SAAS,CAAAQ,eAAeA,CAAA,CAAyC,CACtE,GAAM,CAAAC,IAAI,CAAGrB,WAAW,CAAC,SAACM,KAAe,QAAK,CAAAA,KAAK,CAACC,WAAW,CAACe,SAAS,GAAC,CAC1E,MAAO,CAAA3B,OAAO,CAAC,iBAAM,CAAA0B,IAAI,CAACE,MAAM,CAAC,SAACC,IAAI,QAAK,CAAAA,IAAI,CAACC,IAAI,GAAC,GAAE,CAACJ,IAAI,CAAC,CAAC,CAChE"},"metadata":{},"sourceType":"module"}