{"ast":null,"code":"import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nimport { GRAPH_HOST } from '../constants';\nimport { poolQuery } from '../queries/pools';\nconst appClient = new ApolloClient({\n  uri: GRAPH_HOST,\n  cache: new InMemoryCache()\n});\nexport const bombMaxi = poolId => appClient.query({\n  query: gql(poolQuery),\n  variables: {\n    id: poolId\n  }\n});\n//     .then((data) => return data.data.pool\n//        // console.log('Subgraph data: ', data.data.pool))\n// .catch((err) => {\n//     console.log('Error fetching data: ', err);\n\n// });","map":{"version":3,"names":["ApolloClient","InMemoryCache","gql","GRAPH_HOST","poolQuery","appClient","uri","cache","bombMaxi","poolId","query","variables","id"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/services/graph/fetchers/pools.ts"],"sourcesContent":["import { ApolloClient, InMemoryCache, gql } from '@apollo/client';\nimport { GRAPH_HOST } from '../constants';\n\nimport { poolQuery } from '../queries/pools';\n\nconst appClient = new ApolloClient({\n  uri: GRAPH_HOST,\n  cache: new InMemoryCache(),\n});\n\nexport const bombMaxi = (poolId: string) =>\n  appClient.query({\n    query: gql(poolQuery),\n    variables: {\n      id: poolId,\n    },\n  });\n//     .then((data) => return data.data.pool\n//        // console.log('Subgraph data: ', data.data.pool))\n// .catch((err) => {\n//     console.log('Error fetching data: ', err);\n\n// });\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,aAAa,EAAEC,GAAG,QAAQ,gBAAgB;AACjE,SAASC,UAAU,QAAQ,cAAc;AAEzC,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,MAAMC,SAAS,GAAG,IAAIL,YAAY,CAAC;EACjCM,GAAG,EAAEH,UAAU;EACfI,KAAK,EAAE,IAAIN,aAAa;AAC1B,CAAC,CAAC;AAEF,OAAO,MAAMO,QAAQ,GAAIC,MAAc,IACrCJ,SAAS,CAACK,KAAK,CAAC;EACdA,KAAK,EAAER,GAAG,CAACE,SAAS,CAAC;EACrBO,SAAS,EAAE;IACTC,EAAE,EAAEH;EACN;AACF,CAAC,CAAC;AACJ;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}