{"ast":null,"code":"var _asyncToGenerator = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/asyncToGenerator\");\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar SafeEventEmitter = require('@metamask/safe-event-emitter').default;\nvar _require = require('json-rpc-engine'),\n  createAsyncMiddleware = _require.createAsyncMiddleware,\n  createScaffoldMiddleware = _require.createScaffoldMiddleware;\nvar createFilterMiddleware = require('./index.js');\nvar _require2 = require('./hexUtils.js'),\n  unsafeRandomBytes = _require2.unsafeRandomBytes,\n  incrementHexInt = _require2.incrementHexInt;\nvar getBlocksForRange = require('./getBlocksForRange.js');\nmodule.exports = createSubscriptionMiddleware;\nfunction createSubscriptionMiddleware(_ref) {\n  var blockTracker = _ref.blockTracker,\n    provider = _ref.provider;\n  // state and utilities for handling subscriptions\n  var subscriptions = {};\n  var filterManager = createFilterMiddleware({\n    blockTracker: blockTracker,\n    provider: provider\n  });\n\n  // internal flag\n  var isDestroyed = false;\n\n  // create subscriptionManager api object\n  var events = new SafeEventEmitter();\n  var middleware = createScaffoldMiddleware({\n    eth_subscribe: createAsyncMiddleware(subscribe),\n    eth_unsubscribe: createAsyncMiddleware(unsubscribe)\n  });\n  middleware.destroy = destroy;\n  return {\n    events: events,\n    middleware: middleware\n  };\n  function subscribe(_x, _x2) {\n    return _subscribe.apply(this, arguments);\n  }\n  function _subscribe() {\n    _subscribe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(req, res) {\n      var subscriptionType, subId, sub, filterParams, filter, createSubNewHeads, createSubFromFilter;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            createSubFromFilter = function _createSubFromFilter(_ref4) {\n              var subId = _ref4.subId,\n                filter = _ref4.filter;\n              filter.on('update', function (result) {\n                return _emitSubscriptionResult(subId, result);\n              });\n              var sub = {\n                type: subscriptionType,\n                destroy: function () {\n                  var _destroy2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n                    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                      while (1) switch (_context3.prev = _context3.next) {\n                        case 0:\n                          _context3.next = 2;\n                          return filterManager.uninstallFilter(filter.idHex);\n                        case 2:\n                          return _context3.abrupt(\"return\", _context3.sent);\n                        case 3:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }, _callee3);\n                  }));\n                  function destroy() {\n                    return _destroy2.apply(this, arguments);\n                  }\n                  return destroy;\n                }()\n              };\n              return sub;\n            };\n            createSubNewHeads = function _createSubNewHeads(_ref2) {\n              var subId = _ref2.subId;\n              var sub = {\n                type: subscriptionType,\n                destroy: function () {\n                  var _destroy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n                    return _regeneratorRuntime().wrap(function _callee$(_context) {\n                      while (1) switch (_context.prev = _context.next) {\n                        case 0:\n                          blockTracker.removeListener('sync', sub.update);\n                        case 1:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }, _callee);\n                  }));\n                  function destroy() {\n                    return _destroy.apply(this, arguments);\n                  }\n                  return destroy;\n                }(),\n                update: function () {\n                  var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_ref3) {\n                    var oldBlock, newBlock, toBlock, fromBlock, rawBlocks, results;\n                    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                      while (1) switch (_context2.prev = _context2.next) {\n                        case 0:\n                          oldBlock = _ref3.oldBlock, newBlock = _ref3.newBlock;\n                          // for newHeads\n                          toBlock = newBlock;\n                          fromBlock = incrementHexInt(oldBlock);\n                          _context2.next = 5;\n                          return getBlocksForRange({\n                            provider: provider,\n                            fromBlock: fromBlock,\n                            toBlock: toBlock\n                          });\n                        case 5:\n                          rawBlocks = _context2.sent;\n                          results = rawBlocks.map(normalizeBlock).filter(function (block) {\n                            return block !== null;\n                          });\n                          results.forEach(function (value) {\n                            _emitSubscriptionResult(subId, value);\n                          });\n                        case 8:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }, _callee2);\n                  }));\n                  function update(_x5) {\n                    return _update.apply(this, arguments);\n                  }\n                  return update;\n                }()\n              };\n              // check for subscription updates on new block\n              blockTracker.on('sync', sub.update);\n              return sub;\n            };\n            if (!isDestroyed) {\n              _context4.next = 4;\n              break;\n            }\n            throw new Error('SubscriptionManager - attempting to use after destroying');\n          case 4:\n            subscriptionType = req.params[0]; // subId is 16 byte hex string\n            subId = unsafeRandomBytes(16); // create sub\n            _context4.t0 = subscriptionType;\n            _context4.next = _context4.t0 === 'newHeads' ? 9 : _context4.t0 === 'logs' ? 11 : 17;\n            break;\n          case 9:\n            sub = createSubNewHeads({\n              subId: subId\n            });\n            return _context4.abrupt(\"break\", 18);\n          case 11:\n            filterParams = req.params[1];\n            _context4.next = 14;\n            return filterManager.newLogFilter(filterParams);\n          case 14:\n            filter = _context4.sent;\n            sub = createSubFromFilter({\n              subId: subId,\n              filter: filter\n            });\n            return _context4.abrupt(\"break\", 18);\n          case 17:\n            throw new Error(\"SubscriptionManager - unsupported subscription type \\\"\".concat(subscriptionType, \"\\\"\"));\n          case 18:\n            subscriptions[subId] = sub;\n            res.result = subId;\n            return _context4.abrupt(\"return\");\n          case 21:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n    return _subscribe.apply(this, arguments);\n  }\n  function unsubscribe(_x3, _x4) {\n    return _unsubscribe.apply(this, arguments);\n  }\n  function _unsubscribe() {\n    _unsubscribe = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(req, res) {\n      var id, subscription;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            if (!isDestroyed) {\n              _context5.next = 2;\n              break;\n            }\n            throw new Error('SubscriptionManager - attempting to use after destroying');\n          case 2:\n            id = req.params[0];\n            subscription = subscriptions[id]; // if missing, return \"false\" to indicate it was not removed\n            if (subscription) {\n              _context5.next = 7;\n              break;\n            }\n            res.result = false;\n            return _context5.abrupt(\"return\");\n          case 7:\n            // cleanup subscription\n            delete subscriptions[id];\n            _context5.next = 10;\n            return subscription.destroy();\n          case 10:\n            res.result = true;\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n    return _unsubscribe.apply(this, arguments);\n  }\n  function _emitSubscriptionResult(filterIdHex, value) {\n    events.emit('notification', {\n      jsonrpc: '2.0',\n      method: 'eth_subscription',\n      params: {\n        subscription: filterIdHex,\n        result: value\n      }\n    });\n  }\n  function destroy() {\n    events.removeAllListeners();\n    for (var id in subscriptions) {\n      subscriptions[id].destroy();\n      delete subscriptions[id];\n    }\n    isDestroyed = true;\n  }\n}\nfunction normalizeBlock(block) {\n  if (block === null || block === undefined) {\n    return null;\n  }\n  return {\n    hash: block.hash,\n    parentHash: block.parentHash,\n    sha3Uncles: block.sha3Uncles,\n    miner: block.miner,\n    stateRoot: block.stateRoot,\n    transactionsRoot: block.transactionsRoot,\n    receiptsRoot: block.receiptsRoot,\n    logsBloom: block.logsBloom,\n    difficulty: block.difficulty,\n    number: block.number,\n    gasLimit: block.gasLimit,\n    gasUsed: block.gasUsed,\n    nonce: block.nonce,\n    mixHash: block.mixHash,\n    timestamp: block.timestamp,\n    extraData: block.extraData\n  };\n}","map":{"version":3,"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","SafeEventEmitter","require","default","_require","createAsyncMiddleware","createScaffoldMiddleware","createFilterMiddleware","_require2","unsafeRandomBytes","incrementHexInt","getBlocksForRange","module","createSubscriptionMiddleware","_ref","blockTracker","provider","subscriptions","filterManager","isDestroyed","events","middleware","eth_subscribe","subscribe","eth_unsubscribe","unsubscribe","destroy","_x","_x2","_subscribe","apply","arguments","_asyncToGenerator","_callee4","req","res","subscriptionType","subId","sub","filterParams","filter","createSubNewHeads","createSubFromFilter","_callee4$","_context4","_createSubFromFilter","_ref4","on","_emitSubscriptionResult","_destroy2","_callee3","_callee3$","_context3","uninstallFilter","idHex","_createSubNewHeads","_ref2","_destroy","_callee","_callee$","_context","removeListener","update","_update","_callee2","_ref3","oldBlock","newBlock","toBlock","fromBlock","rawBlocks","results","_callee2$","_context2","map","normalizeBlock","block","_x5","params","t0","newLogFilter","concat","_x3","_x4","_unsubscribe","_callee5","id","subscription","_callee5$","_context5","filterIdHex","emit","jsonrpc","removeAllListeners","hash","parentHash","sha3Uncles","miner","stateRoot","transactionsRoot","receiptsRoot","logsBloom","difficulty","number","gasLimit","gasUsed","nonce","mixHash","timestamp","extraData"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/node_modules/@coinbase/wallet-sdk/node_modules/eth-json-rpc-filters/subscriptionManager.js"],"sourcesContent":["const SafeEventEmitter = require('@metamask/safe-event-emitter').default\nconst { createAsyncMiddleware, createScaffoldMiddleware } = require('json-rpc-engine')\nconst createFilterMiddleware = require('./index.js')\nconst { unsafeRandomBytes, incrementHexInt } = require('./hexUtils.js')\nconst getBlocksForRange = require('./getBlocksForRange.js')\n\nmodule.exports = createSubscriptionMiddleware\n\n\nfunction createSubscriptionMiddleware({ blockTracker, provider }) {\n  // state and utilities for handling subscriptions\n  const subscriptions = {}\n  const filterManager = createFilterMiddleware({ blockTracker, provider })\n\n  // internal flag\n  let isDestroyed = false\n\n  // create subscriptionManager api object\n  const events = new SafeEventEmitter()\n  const middleware = createScaffoldMiddleware({\n    eth_subscribe: createAsyncMiddleware(subscribe),\n    eth_unsubscribe: createAsyncMiddleware(unsubscribe),\n  })\n  middleware.destroy = destroy\n  return { events, middleware }\n\n  async function subscribe(req, res) {\n\n    if (isDestroyed) throw new Error(\n      'SubscriptionManager - attempting to use after destroying'\n    )\n\n    const subscriptionType = req.params[0]\n    // subId is 16 byte hex string\n    const subId = unsafeRandomBytes(16)\n\n    // create sub\n    let sub\n    switch (subscriptionType) {\n      case 'newHeads':\n        sub = createSubNewHeads({ subId })\n        break\n      case 'logs':\n        const filterParams = req.params[1]\n        const filter = await filterManager.newLogFilter(filterParams)\n        sub = createSubFromFilter({ subId, filter })\n        break\n      default:\n        throw new Error(`SubscriptionManager - unsupported subscription type \"${subscriptionType}\"`)\n\n    }\n    subscriptions[subId] = sub\n\n    res.result = subId\n    return\n\n    function createSubNewHeads({ subId }) {\n      const sub = {\n        type: subscriptionType,\n        destroy: async () => {\n          blockTracker.removeListener('sync', sub.update)\n        },\n        update: async ({ oldBlock, newBlock }) => {\n          // for newHeads\n          const toBlock = newBlock\n          const fromBlock = incrementHexInt(oldBlock)\n          const rawBlocks = await getBlocksForRange({ provider, fromBlock, toBlock })\n          const results = rawBlocks.map(normalizeBlock).filter(block => block !== null)\n          results.forEach((value) => {\n            _emitSubscriptionResult(subId, value)\n          })\n        }\n      }\n      // check for subscription updates on new block\n      blockTracker.on('sync', sub.update)\n      return sub\n    }\n\n    function createSubFromFilter({ subId, filter }) {\n      filter.on('update', result => _emitSubscriptionResult(subId, result))\n      const sub = {\n        type: subscriptionType,\n        destroy: async () => {\n          return await filterManager.uninstallFilter(filter.idHex)\n        },\n      }\n      return sub\n    }\n  }\n\n  async function unsubscribe(req, res) {\n\n    if (isDestroyed) throw new Error(\n      'SubscriptionManager - attempting to use after destroying'\n    )\n\n    const id = req.params[0]\n    const subscription = subscriptions[id]\n    // if missing, return \"false\" to indicate it was not removed\n    if (!subscription) {\n      res.result = false\n      return\n    }\n    // cleanup subscription\n    delete subscriptions[id]\n    await subscription.destroy()\n    res.result = true\n  }\n\n  function _emitSubscriptionResult(filterIdHex, value) {\n    events.emit('notification', {\n      jsonrpc: '2.0',\n      method: 'eth_subscription',\n      params: {\n        subscription: filterIdHex,\n        result: value,\n      },\n    })\n  }\n\n  function destroy() {\n    events.removeAllListeners()\n    for (const id in subscriptions) {\n      subscriptions[id].destroy()\n      delete subscriptions[id]\n    }\n    isDestroyed = true\n  }\n}\n\nfunction normalizeBlock(block) {\n  if (block === null || block === undefined) {\n    return null;\n  }\n  return {\n    hash: block.hash,\n    parentHash: block.parentHash,\n    sha3Uncles: block.sha3Uncles,\n    miner: block.miner,\n    stateRoot: block.stateRoot,\n    transactionsRoot: block.transactionsRoot,\n    receiptsRoot: block.receiptsRoot,\n    logsBloom: block.logsBloom,\n    difficulty: block.difficulty,\n    number: block.number,\n    gasLimit: block.gasLimit,\n    gasUsed: block.gasUsed,\n    nonce: block.nonce,\n    mixHash: block.mixHash,\n    timestamp: block.timestamp,\n    extraData: block.extraData,\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}