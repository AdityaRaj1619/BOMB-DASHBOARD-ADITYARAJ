{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defer = defer;\nexports.splitPath = splitPath;\nexports.eachSeries = eachSeries;\nexports.foreach = foreach;\nexports.doIf = doIf;\nexports.asyncWhile = asyncWhile;\nfunction defer() {\n  var resolve = void 0,\n    reject = void 0;\n  var promise = new Promise(function (success, failure) {\n    resolve = success;\n    reject = failure;\n  });\n  if (!resolve || !reject) throw \"defer() error\"; // this never happens and is just to make flow happy\n  return {\n    promise: promise,\n    resolve: resolve,\n    reject: reject\n  };\n}\n\n// TODO use bip32-path library\n/********************************************************************************\n *   Ledger Node JS API\n *   (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ********************************************************************************/\n\nfunction splitPath(path) {\n  var result = [];\n  var components = path.split(\"/\");\n  components.forEach(function (element) {\n    var number = parseInt(element, 10);\n    if (isNaN(number)) {\n      return; // FIXME shouldn't it throws instead?\n    }\n\n    if (element.length > 1 && element[element.length - 1] === \"'\") {\n      number += 0x80000000;\n    }\n    result.push(number);\n  });\n  return result;\n}\n\n// TODO use async await\n\nfunction eachSeries(arr, fun) {\n  return arr.reduce(function (p, e) {\n    return p.then(function () {\n      return fun(e);\n    });\n  }, Promise.resolve());\n}\nfunction foreach(arr, callback) {\n  function iterate(index, array, result) {\n    if (index >= array.length) {\n      return result;\n    } else return callback(array[index], index).then(function (res) {\n      result.push(res);\n      return iterate(index + 1, array, result);\n    });\n  }\n  return Promise.resolve().then(function () {\n    return iterate(0, arr, []);\n  });\n}\nfunction doIf(condition, callback) {\n  return Promise.resolve().then(function () {\n    if (condition) {\n      return callback();\n    }\n  });\n}\nfunction asyncWhile(predicate, callback) {\n  function iterate(result) {\n    if (!predicate()) {\n      return result;\n    } else {\n      return callback().then(function (res) {\n        result.push(res);\n        return iterate(result);\n      });\n    }\n  }\n  return Promise.resolve([]).then(iterate);\n}","map":{"version":3,"sources":["../src/utils.js"],"names":["defer","resolve","reject","promise","Promise","success","failure","splitPath","path","result","components","split","forEach","number","parseInt","element","isNaN","length","push","eachSeries","arr","fun","reduce","p","e","then","foreach","callback","iterate","index","array","res","doIf","condition","asyncWhile","predicate"],"mappings":"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","sourcesContent":["/********************************************************************************\n *   Ledger Node JS API\n *   (c) 2016-2017 Ledger\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ********************************************************************************/\n//@flow\n\ntype Defer<T> = {\n  promise: Promise<T>,\n  resolve: T => void,\n  reject: any => void\n};\n\nexport function defer<T>(): Defer<T> {\n  let resolve, reject;\n  let promise = new Promise(function(success, failure) {\n    resolve = success;\n    reject = failure;\n  });\n  if (!resolve || !reject) throw \"defer() error\"; // this never happens and is just to make flow happy\n  return { promise, resolve, reject };\n}\n\n// TODO use bip32-path library\nexport function splitPath(path: string): number[] {\n  let result = [];\n  let components = path.split(\"/\");\n  components.forEach(element => {\n    let number = parseInt(element, 10);\n    if (isNaN(number)) {\n      return; // FIXME shouldn't it throws instead?\n    }\n    if (element.length > 1 && element[element.length - 1] === \"'\") {\n      number += 0x80000000;\n    }\n    result.push(number);\n  });\n  return result;\n}\n\n// TODO use async await\n\nexport function eachSeries<A>(arr: A[], fun: A => Promise<*>): Promise<*> {\n  return arr.reduce((p, e) => p.then(() => fun(e)), Promise.resolve());\n}\n\nexport function foreach<T, A>(\n  arr: T[],\n  callback: (T, number) => Promise<A>\n): Promise<A[]> {\n  function iterate(index, array, result) {\n    if (index >= array.length) {\n      return result;\n    } else\n      return callback(array[index], index).then(function(res) {\n        result.push(res);\n        return iterate(index + 1, array, result);\n      });\n  }\n  return Promise.resolve().then(() => iterate(0, arr, []));\n}\n\nexport function doIf(\n  condition: boolean,\n  callback: () => any | Promise<any>\n): Promise<void> {\n  return Promise.resolve().then(() => {\n    if (condition) {\n      return callback();\n    }\n  });\n}\n\nexport function asyncWhile<T>(\n  predicate: () => boolean,\n  callback: () => Promise<T>\n): Promise<Array<T>> {\n  function iterate(result) {\n    if (!predicate()) {\n      return result;\n    } else {\n      return callback().then(res => {\n        result.push(res);\n        return iterate(result);\n      });\n    }\n  }\n  return Promise.resolve([]).then(iterate);\n}\n"]},"metadata":{},"sourceType":"script"}