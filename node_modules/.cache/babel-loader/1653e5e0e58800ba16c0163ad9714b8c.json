{"ast":null,"code":"var _classCallCheck = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\nvar _createClass = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\nvar _inherits = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\nvar _createSuper = require(\"C:\\\\Users\\\\Aditya Raj Awasthi\\\\Desktop\\\\bomb-dashboard-final-task\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/createSuper\");\nvar EventEmitter = require('events');\nvar uuid = require('uuid/v4');\nvar dev = process.env.NODE_ENV === 'development';\nvar XHR;\nvar HTTPConnection = /*#__PURE__*/function (_EventEmitter) {\n  \"use strict\";\n\n  _inherits(HTTPConnection, _EventEmitter);\n  var _super = _createSuper(HTTPConnection);\n  function HTTPConnection(_XHR, url, options) {\n    var _this;\n    _classCallCheck(this, HTTPConnection);\n    _this = _super.call(this);\n    XHR = _XHR;\n    _this.connected = false;\n    _this.subscriptions = false;\n    _this.status = 'loading';\n    _this.url = url;\n    _this.pollId = uuid();\n    setTimeout(function () {\n      return _this.create();\n    }, 0);\n    return _this;\n  }\n  _createClass(HTTPConnection, [{\n    key: \"create\",\n    value: function create() {\n      var _this2 = this;\n      if (!XHR) return this.emit('error', new Error('No HTTP transport available'));\n      this.on('error', function () {\n        if (_this2.connected) _this2.close();\n      });\n      this.init();\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this3 = this;\n      this.send({\n        jsonrpc: '2.0',\n        method: 'eth_syncing',\n        params: [],\n        id: 1\n      }, function (err, response) {\n        if (err) return _this3.emit('error', err);\n        _this3.send({\n          jsonrpc: '2.0',\n          id: 1,\n          method: 'eth_pollSubscriptions',\n          params: [_this3.pollId, 'immediate']\n        }, function (err, response) {\n          if (!err) {\n            _this3.subscriptions = true;\n            _this3.pollSubscriptions();\n          }\n          _this3.connected = true;\n          _this3.emit('connect');\n        });\n      });\n    }\n  }, {\n    key: \"pollSubscriptions\",\n    value: function pollSubscriptions() {\n      var _this4 = this;\n      this.send({\n        jsonrpc: '2.0',\n        id: 1,\n        method: 'eth_pollSubscriptions',\n        params: [this.pollId]\n      }, function (err, result) {\n        if (err) {\n          _this4.subscriptionTimeout = setTimeout(function () {\n            return _this4.pollSubscriptions();\n          }, 10000);\n          return _this4.emit('error', err);\n        } else {\n          if (!_this4.closed) _this4.subscriptionTimeout = _this4.pollSubscriptions();\n          if (result) {\n            result.map(function (p) {\n              var parse;\n              try {\n                parse = JSON.parse(p);\n              } catch (e) {\n                parse = false;\n              }\n              return parse;\n            }).filter(function (n) {\n              return n;\n            }).forEach(function (p) {\n              return _this4.emit('payload', p);\n            });\n          }\n        }\n      });\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      if (dev) console.log('Closing HTTP connection');\n      this.closed = true;\n      this.emit('close');\n      clearTimeout(this.subscriptionTimeout);\n      this.removeAllListeners();\n    }\n  }, {\n    key: \"filterStatus\",\n    value: function filterStatus(res) {\n      if (res.status >= 200 && res.status < 300) return res;\n      var error = new Error(res.statusText);\n      error.res = res;\n      throw error.message;\n    }\n  }, {\n    key: \"error\",\n    value: function error(payload, message) {\n      var code = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : -1;\n      this.emit('payload', {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        error: {\n          message: message,\n          code: code\n        }\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(payload, internal) {\n      var _this5 = this;\n      if (this.closed) return this.error(payload, 'Not connected');\n      if (payload.method === 'eth_subscribe') {\n        if (this.subscriptions) {\n          payload.pollId = this.pollId;\n        } else {\n          return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint');\n        }\n      }\n      var xhr = new XHR();\n      var responded = false;\n      var res = function res(err, result) {\n        if (!responded) {\n          xhr.abort();\n          responded = true;\n          if (internal) {\n            internal(err, result);\n          } else {\n            var id = payload.id,\n              jsonrpc = payload.jsonrpc;\n            var load = err ? {\n              id: id,\n              jsonrpc: jsonrpc,\n              error: {\n                message: err.message,\n                code: err.code\n              }\n            } : {\n              id: id,\n              jsonrpc: jsonrpc,\n              result: result\n            };\n            _this5.emit('payload', load);\n          }\n        }\n      };\n      xhr.open('POST', this.url, true);\n      xhr.setRequestHeader('Content-Type', 'application/json');\n      xhr.timeout = 60 * 1000;\n      xhr.onerror = res;\n      xhr.ontimeout = res;\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 4) {\n          try {\n            var response = JSON.parse(xhr.responseText);\n            res(response.error, response.result);\n          } catch (e) {\n            res(e);\n          }\n        }\n      };\n      xhr.send(JSON.stringify(payload));\n    }\n  }]);\n  return HTTPConnection;\n}(EventEmitter);\nmodule.exports = function (XHR) {\n  return function (url, options) {\n    return new HTTPConnection(XHR, url, options);\n  };\n};","map":{"version":3,"names":["EventEmitter","require","uuid","dev","process","env","NODE_ENV","XHR","HTTPConnection","_EventEmitter","_inherits","_super","_createSuper","_XHR","url","options","_this","_classCallCheck","call","connected","subscriptions","status","pollId","setTimeout","create","_createClass","key","value","_this2","emit","Error","on","close","init","_this3","send","jsonrpc","method","params","id","err","response","pollSubscriptions","_this4","result","subscriptionTimeout","closed","map","p","parse","JSON","e","filter","n","forEach","console","log","clearTimeout","removeAllListeners","filterStatus","res","error","statusText","message","payload","code","arguments","length","undefined","internal","_this5","xhr","responded","abort","load","open","setRequestHeader","timeout","onerror","ontimeout","onreadystatechange","readyState","responseText","stringify","module","exports"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/node_modules/eth-provider/connections/http.js"],"sourcesContent":["const EventEmitter = require('events')\nconst uuid = require('uuid/v4')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nlet XHR\n\nclass HTTPConnection extends EventEmitter {\n  constructor (_XHR, url, options) {\n    super()\n    XHR = _XHR\n    this.connected = false\n    this.subscriptions = false\n    this.status = 'loading'\n    this.url = url\n    this.pollId = uuid()\n    setTimeout(() => this.create(), 0)\n  }\n\n  create () {\n    if (!XHR) return this.emit('error', new Error('No HTTP transport available'))\n    this.on('error', () => { if (this.connected) this.close() })\n    this.init()\n  }\n\n  init () {\n    this.send({ jsonrpc: '2.0', method: 'eth_syncing', params: [], id: 1 }, (err, response) => {\n      if (err) return this.emit('error', err)\n      this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId, 'immediate'] }, (err, response) => {\n        if (!err) {\n          this.subscriptions = true\n          this.pollSubscriptions()\n        }\n        this.connected = true\n        this.emit('connect')\n      })\n    })\n  }\n\n  pollSubscriptions () {\n    this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId] }, (err, result) => {\n      if (err) {\n        this.subscriptionTimeout = setTimeout(() => this.pollSubscriptions(), 10000)\n        return this.emit('error', err)\n      } else {\n        if (!this.closed) this.subscriptionTimeout = this.pollSubscriptions()\n        if (result) {\n          result.map(p => {\n            let parse\n            try { parse = JSON.parse(p) } catch (e) { parse = false }\n            return parse\n          }).filter(n => n).forEach(p => this.emit('payload', p))\n        }\n      }\n    })\n  }\n\n  close () {\n    if (dev) console.log('Closing HTTP connection')\n    this.closed = true\n    this.emit('close')\n    clearTimeout(this.subscriptionTimeout)\n    this.removeAllListeners()\n  }\n\n  filterStatus (res) {\n    if (res.status >= 200 && res.status < 300) return res\n    const error = new Error(res.statusText)\n    error.res = res\n    throw error.message\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload, internal) {\n    if (this.closed) return this.error(payload, 'Not connected')\n    if (payload.method === 'eth_subscribe') {\n      if (this.subscriptions) {\n        payload.pollId = this.pollId\n      } else {\n        return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint')\n      }\n    }\n    const xhr = new XHR()\n    let responded = false\n    const res = (err, result) => {\n      if (!responded) {\n        xhr.abort()\n        responded = true\n        if (internal) {\n          internal(err, result)\n        } else {\n          const { id, jsonrpc } = payload\n          const load = err ? { id, jsonrpc, error: { message: err.message, code: err.code } } : { id, jsonrpc, result }\n          this.emit('payload', load)\n        }\n      }\n    }\n    xhr.open('POST', this.url, true)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.timeout = 60 * 1000\n    xhr.onerror = res\n    xhr.ontimeout = res\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        try {\n          const response = JSON.parse(xhr.responseText)\n          res(response.error, response.result)\n        } catch (e) {\n          res(e)\n        }\n      }\n    }\n    xhr.send(JSON.stringify(payload))\n  }\n}\n\nmodule.exports = XHR => (url, options) => new HTTPConnection(XHR, url, options)\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}