{"ast":null,"code":"const resolve = require('./resolve');\nconst provider = require('./provider');\nconst presets = require('./presets');\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n};\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null;\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null;\nif (injected.ethereum) injected.ethereum.__isProvider = true;\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n};\nmodule.exports = function () {\n  let targets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['injected', 'frame'];\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return provider(connections, resolve(targets, presets), options);\n};","map":{"version":3,"names":["resolve","require","provider","presets","injected","ethereum","window","web3","currentProvider","ws","WebSocket","XHR","XMLHttpRequest","__isProvider","connections","ipc","http","module","exports","targets","arguments","length","undefined","options"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/node_modules/eth-provider/browser.js"],"sourcesContent":["const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets = ['injected', 'frame'], options = {}) => provider(connections, resolve(targets, presets), options)\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAW,CAAC;AACpC,MAAMC,QAAQ,GAAGD,OAAO,CAAC,YAAY,CAAC;AACtC,MAAME,OAAO,GAAGF,OAAO,CAAC,WAAW,CAAC;AAEpC,MAAMG,QAAQ,GAAG;EACfC,QAAQ,EAAE,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACD,QAAQ,KAAK,WAAW,GAAGC,MAAM,CAACD,QAAQ,GAAG,IAAI;EAC1GE,IAAI,EAAE,OAAOD,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,IAAI,KAAK,WAAW,GAAGD,MAAM,CAACC,IAAI,CAACC,eAAe,GAAG;AAC5G,CAAC;AACD,MAAMC,EAAE,GAAG,OAAOH,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACI,SAAS,KAAK,WAAW,GAAGJ,MAAM,CAACI,SAAS,GAAG,IAAI;AAC7G,MAAMC,GAAG,GAAG,OAAOL,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACM,cAAc,KAAK,WAAW,GAAGN,MAAM,CAACM,cAAc,GAAG,IAAI;AAExH,IAAIR,QAAQ,CAACC,QAAQ,EAAED,QAAQ,CAACC,QAAQ,CAACQ,YAAY,GAAG,IAAI;AAE5D,MAAMC,WAAW,GAAG;EAClBV,QAAQ,EAAEA,QAAQ,CAACC,QAAQ,IAAIJ,OAAO,CAAC,wBAAwB,CAAC,CAACG,QAAQ,CAACG,IAAI,CAAC;EAC/EQ,GAAG,EAAEd,OAAO,CAAC,2BAA2B,CAAC,CAAC,+CAA+C,CAAC;EAC1FQ,EAAE,EAAER,OAAO,CAAC,kBAAkB,CAAC,CAACQ,EAAE,CAAC;EACnCO,IAAI,EAAEf,OAAO,CAAC,oBAAoB,CAAC,CAACU,GAAG;AACzC,CAAC;AAEDM,MAAM,CAACC,OAAO,GAAG;EAAA,IAACC,OAAO,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,UAAU,EAAE,OAAO,CAAC;EAAA,IAAEG,OAAO,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,OAAKlB,QAAQ,CAACY,WAAW,EAAEd,OAAO,CAACmB,OAAO,EAAEhB,OAAO,CAAC,EAAEoB,OAAO,CAAC;AAAA"},"metadata":{},"sourceType":"script"}