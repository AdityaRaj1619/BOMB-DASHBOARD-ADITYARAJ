{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return _extendStatics(d, b);\n  };\n  return function (d, b) {\n    _extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ethUtil = require(\"ethereumjs-util\");\nvar _ = require(\"lodash\");\nvar configured_bignumber_1 = require(\"../../../configured_bignumber\");\nvar set_1 = require(\"../../calldata/blocks/set\");\nvar constants_1 = require(\"../../utils/constants\");\nvar data_type_1 = require(\"../data_type\");\nvar pointer_1 = require(\"./pointer\");\nvar AbstractSetDataType = /** @class */function (_super) {\n  __extends(AbstractSetDataType, _super);\n  function AbstractSetDataType(dataItem, factory, isArray, arrayLength, arrayElementType) {\n    var _a, _b;\n    if (isArray === void 0) {\n      isArray = false;\n    }\n    var _this = _super.call(this, dataItem, factory) || this;\n    _this._memberIndexByName = {};\n    _this._members = [];\n    _this._isArray = isArray;\n    _this._arrayLength = arrayLength;\n    _this._arrayElementType = arrayElementType;\n    if (isArray && arrayLength !== undefined) {\n      _a = __read(_this._createMembersWithLength(dataItem, arrayLength), 2), _this._members = _a[0], _this._memberIndexByName = _a[1];\n    } else if (!isArray) {\n      _b = __read(_this._createMembersWithKeys(dataItem), 2), _this._members = _b[0], _this._memberIndexByName = _b[1];\n    }\n    return _this;\n  }\n  AbstractSetDataType.prototype.generateCalldataBlock = function (value, parentBlock) {\n    var block = value instanceof Array ? this._generateCalldataBlockFromArray(value, parentBlock) : this._generateCalldataBlockFromObject(value, parentBlock);\n    return block;\n  };\n  AbstractSetDataType.prototype.generateValue = function (calldata, rules) {\n    var _this = this;\n    var _a;\n    var members = this._members;\n    // Case 1: This is an array of undefined length, which means that `this._members` was not\n    //         populated in the constructor. So we must construct the set of members now.\n    if (this._isArray && this._arrayLength === undefined) {\n      var arrayLengthBuf = calldata.popWord();\n      var arrayLengthHex = ethUtil.bufferToHex(arrayLengthBuf);\n      var arrayLength = new configured_bignumber_1.BigNumber(arrayLengthHex, constants_1.constants.HEX_BASE);\n      _a = __read(this._createMembersWithLength(this.getDataItem(), arrayLength.toNumber()), 1), members = _a[0];\n    }\n    // Create a new scope in the calldata, before descending into the members of this set.\n    calldata.startScope();\n    var value;\n    if (rules.shouldConvertStructsToObjects && !this._isArray) {\n      // Construct an object with values for each member of the set.\n      value = {};\n      _.each(this._memberIndexByName, function (idx, key) {\n        var member = _this._members[idx];\n        var memberValue = member.generateValue(calldata, rules);\n        value[key] = memberValue;\n      });\n    } else {\n      // Construct an array with values for each member of the set.\n      value = [];\n      _.each(members, function (member, idx) {\n        var memberValue = member.generateValue(calldata, rules);\n        value.push(memberValue);\n      });\n    }\n    // Close this scope and return tetheh value.\n    calldata.endScope();\n    return value;\n  };\n  AbstractSetDataType.prototype.isStatic = function () {\n    // An array with an undefined length is never static.\n    if (this._isArray && this._arrayLength === undefined) {\n      return false;\n    }\n    // If any member of the set is a pointer then the set is not static.\n    var dependentMember = _.find(this._members, function (member) {\n      return member instanceof pointer_1.AbstractPointerDataType;\n    });\n    var isStatic = dependentMember === undefined;\n    return isStatic;\n  };\n  AbstractSetDataType.prototype.getDefaultValue = function (rules) {\n    var _this = this;\n    var defaultValue;\n    if (this._isArray && this._arrayLength === undefined) {\n      defaultValue = [];\n    } else if (rules !== undefined && rules.shouldConvertStructsToObjects && !this._isArray) {\n      defaultValue = {};\n      _.each(this._memberIndexByName, function (idx, key) {\n        var member = _this._members[idx];\n        var memberValue = member.getDefaultValue();\n        defaultValue[key] = memberValue;\n      });\n    } else {\n      defaultValue = [];\n      _.each(this._members, function (member, idx) {\n        var memberValue = member.getDefaultValue();\n        defaultValue.push(memberValue);\n      });\n    }\n    return defaultValue;\n  };\n  AbstractSetDataType.prototype._generateCalldataBlockFromArray = function (value, parentBlock) {\n    var _a;\n    // Sanity check: if the set has a defined length then `value` must have the same length.\n    if (this._arrayLength !== undefined && value.length !== this._arrayLength) {\n      throw new Error(\"Expected array of \" + JSON.stringify(this._arrayLength) + \" elements, but got array of length \" + JSON.stringify(value.length));\n    }\n    // Create a new calldata block for this set.\n    var parentName = parentBlock === undefined ? '' : parentBlock.getName();\n    var block = new set_1.SetCalldataBlock(this.getDataItem().name, this.getSignature(), parentName);\n    // If this set has an undefined length then set its header to be the number of elements.\n    var members = this._members;\n    if (this._isArray && this._arrayLength === undefined) {\n      _a = __read(this._createMembersWithLength(this.getDataItem(), value.length), 1), members = _a[0];\n      var lenBuf = ethUtil.setLengthLeft(ethUtil.toBuffer(\"0x\" + value.length.toString(constants_1.constants.HEX_BASE)), constants_1.constants.EVM_WORD_WIDTH_IN_BYTES);\n      block.setHeader(lenBuf);\n    }\n    // Create blocks for members of set.\n    var memberCalldataBlocks = [];\n    _.each(members, function (member, idx) {\n      var memberBlock = member.generateCalldataBlock(value[idx], block);\n      memberCalldataBlocks.push(memberBlock);\n    });\n    block.setMembers(memberCalldataBlocks);\n    return block;\n  };\n  AbstractSetDataType.prototype._generateCalldataBlockFromObject = function (obj, parentBlock) {\n    var _this = this;\n    // Create a new calldata block for this set.\n    var parentName = parentBlock === undefined ? '' : parentBlock.getName();\n    var block = new set_1.SetCalldataBlock(this.getDataItem().name, this.getSignature(), parentName);\n    // Create blocks for members of set.\n    var memberCalldataBlocks = [];\n    _.forEach(this._memberIndexByName, function (memberIndex, memberName) {\n      if (!(memberName in obj)) {\n        throw new Error(\"Could not assign tuple to object: missing key '\" + memberName + \"' in object \" + JSON.stringify(obj));\n      }\n      var memberValue = obj[memberName];\n      var memberBlock = _this._members[memberIndex].generateCalldataBlock(memberValue, block);\n      memberCalldataBlocks.push(memberBlock);\n    });\n    // Associate member blocks with Set block.\n    block.setMembers(memberCalldataBlocks);\n    return block;\n  };\n  AbstractSetDataType.prototype._computeSignatureOfMembers = function (isDetailed) {\n    var _this = this;\n    // Compute signature of members\n    var signature = \"(\";\n    _.each(this._members, function (member, i) {\n      signature += member.getSignature(isDetailed);\n      if (i < _this._members.length - 1) {\n        signature += ',';\n      }\n    });\n    signature += ')';\n    return signature;\n  };\n  AbstractSetDataType.prototype._createMembersWithKeys = function (dataItem) {\n    var _this = this;\n    // Sanity check\n    if (dataItem.components === undefined) {\n      throw new Error(\"Tried to create a set using key/value pairs, but no components were defined by the input DataItem '\" + dataItem.name + \"'.\");\n    }\n    // Create one member for each component of `dataItem`\n    var members = [];\n    var memberIndexByName = {};\n    var memberNames = [];\n    _.each(dataItem.components, function (memberItem) {\n      // If a component with `name` already exists then\n      // rename to `name_nameIdx` to avoid naming conflicts.\n      var memberName = memberItem.name;\n      var nameIdx = 0;\n      while (_.includes(memberNames, memberName) || _.isEmpty(memberName)) {\n        nameIdx++;\n        memberName = memberItem.name + \"_\" + nameIdx;\n      }\n      memberNames.push(memberName);\n      var childDataItem = {\n        type: memberItem.type,\n        name: dataItem.name + \".\" + memberName\n      };\n      var components = memberItem.components;\n      if (components !== undefined) {\n        childDataItem.components = components;\n      }\n      var child = _this.getFactory().create(childDataItem, _this);\n      memberIndexByName[memberName] = members.length;\n      members.push(child);\n    });\n    return [members, memberIndexByName];\n  };\n  AbstractSetDataType.prototype._createMembersWithLength = function (dataItem, length) {\n    var _this = this;\n    // Create `length` members, deriving the type from `dataItem`\n    var members = [];\n    var memberIndexByName = {};\n    var range = _.range(length);\n    _.each(range, function (idx) {\n      var memberDataItem = {\n        type: _this._arrayElementType === undefined ? '' : _this._arrayElementType,\n        name: dataItem.name + \"[\" + idx.toString(constants_1.constants.DEC_BASE) + \"]\"\n      };\n      var components = dataItem.components;\n      if (components !== undefined) {\n        memberDataItem.components = components;\n      }\n      var memberType = _this.getFactory().create(memberDataItem, _this);\n      memberIndexByName[idx.toString(constants_1.constants.DEC_BASE)] = members.length;\n      members.push(memberType);\n    });\n    return [members, memberIndexByName];\n  };\n  return AbstractSetDataType;\n}(data_type_1.DataType);\nexports.AbstractSetDataType = AbstractSetDataType;","map":{"version":3,"sources":["../../../../../src/abi_encoder/abstract_data_types/types/set.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethUtil = require(\"ethereumjs-util\");\nvar _ = require(\"lodash\");\nvar configured_bignumber_1 = require(\"../../../configured_bignumber\");\nvar set_1 = require(\"../../calldata/blocks/set\");\nvar constants_1 = require(\"../../utils/constants\");\nvar data_type_1 = require(\"../data_type\");\nvar pointer_1 = require(\"./pointer\");\nvar AbstractSetDataType = /** @class */ (function (_super) {\n    __extends(AbstractSetDataType, _super);\n    function AbstractSetDataType(dataItem, factory, isArray, arrayLength, arrayElementType) {\n        var _a, _b;\n        if (isArray === void 0) { isArray = false; }\n        var _this = _super.call(this, dataItem, factory) || this;\n        _this._memberIndexByName = {};\n        _this._members = [];\n        _this._isArray = isArray;\n        _this._arrayLength = arrayLength;\n        _this._arrayElementType = arrayElementType;\n        if (isArray && arrayLength !== undefined) {\n            _a = __read(_this._createMembersWithLength(dataItem, arrayLength), 2), _this._members = _a[0], _this._memberIndexByName = _a[1];\n        }\n        else if (!isArray) {\n            _b = __read(_this._createMembersWithKeys(dataItem), 2), _this._members = _b[0], _this._memberIndexByName = _b[1];\n        }\n        return _this;\n    }\n    AbstractSetDataType.prototype.generateCalldataBlock = function (value, parentBlock) {\n        var block = value instanceof Array\n            ? this._generateCalldataBlockFromArray(value, parentBlock)\n            : this._generateCalldataBlockFromObject(value, parentBlock);\n        return block;\n    };\n    AbstractSetDataType.prototype.generateValue = function (calldata, rules) {\n        var _this = this;\n        var _a;\n        var members = this._members;\n        // Case 1: This is an array of undefined length, which means that `this._members` was not\n        //         populated in the constructor. So we must construct the set of members now.\n        if (this._isArray && this._arrayLength === undefined) {\n            var arrayLengthBuf = calldata.popWord();\n            var arrayLengthHex = ethUtil.bufferToHex(arrayLengthBuf);\n            var arrayLength = new configured_bignumber_1.BigNumber(arrayLengthHex, constants_1.constants.HEX_BASE);\n            _a = __read(this._createMembersWithLength(this.getDataItem(), arrayLength.toNumber()), 1), members = _a[0];\n        }\n        // Create a new scope in the calldata, before descending into the members of this set.\n        calldata.startScope();\n        var value;\n        if (rules.shouldConvertStructsToObjects && !this._isArray) {\n            // Construct an object with values for each member of the set.\n            value = {};\n            _.each(this._memberIndexByName, function (idx, key) {\n                var member = _this._members[idx];\n                var memberValue = member.generateValue(calldata, rules);\n                value[key] = memberValue;\n            });\n        }\n        else {\n            // Construct an array with values for each member of the set.\n            value = [];\n            _.each(members, function (member, idx) {\n                var memberValue = member.generateValue(calldata, rules);\n                value.push(memberValue);\n            });\n        }\n        // Close this scope and return tetheh value.\n        calldata.endScope();\n        return value;\n    };\n    AbstractSetDataType.prototype.isStatic = function () {\n        // An array with an undefined length is never static.\n        if (this._isArray && this._arrayLength === undefined) {\n            return false;\n        }\n        // If any member of the set is a pointer then the set is not static.\n        var dependentMember = _.find(this._members, function (member) {\n            return member instanceof pointer_1.AbstractPointerDataType;\n        });\n        var isStatic = dependentMember === undefined;\n        return isStatic;\n    };\n    AbstractSetDataType.prototype.getDefaultValue = function (rules) {\n        var _this = this;\n        var defaultValue;\n        if (this._isArray && this._arrayLength === undefined) {\n            defaultValue = [];\n        }\n        else if (rules !== undefined && rules.shouldConvertStructsToObjects && !this._isArray) {\n            defaultValue = {};\n            _.each(this._memberIndexByName, function (idx, key) {\n                var member = _this._members[idx];\n                var memberValue = member.getDefaultValue();\n                defaultValue[key] = memberValue;\n            });\n        }\n        else {\n            defaultValue = [];\n            _.each(this._members, function (member, idx) {\n                var memberValue = member.getDefaultValue();\n                defaultValue.push(memberValue);\n            });\n        }\n        return defaultValue;\n    };\n    AbstractSetDataType.prototype._generateCalldataBlockFromArray = function (value, parentBlock) {\n        var _a;\n        // Sanity check: if the set has a defined length then `value` must have the same length.\n        if (this._arrayLength !== undefined && value.length !== this._arrayLength) {\n            throw new Error(\"Expected array of \" + JSON.stringify(this._arrayLength) + \" elements, but got array of length \" + JSON.stringify(value.length));\n        }\n        // Create a new calldata block for this set.\n        var parentName = parentBlock === undefined ? '' : parentBlock.getName();\n        var block = new set_1.SetCalldataBlock(this.getDataItem().name, this.getSignature(), parentName);\n        // If this set has an undefined length then set its header to be the number of elements.\n        var members = this._members;\n        if (this._isArray && this._arrayLength === undefined) {\n            _a = __read(this._createMembersWithLength(this.getDataItem(), value.length), 1), members = _a[0];\n            var lenBuf = ethUtil.setLengthLeft(ethUtil.toBuffer(\"0x\" + value.length.toString(constants_1.constants.HEX_BASE)), constants_1.constants.EVM_WORD_WIDTH_IN_BYTES);\n            block.setHeader(lenBuf);\n        }\n        // Create blocks for members of set.\n        var memberCalldataBlocks = [];\n        _.each(members, function (member, idx) {\n            var memberBlock = member.generateCalldataBlock(value[idx], block);\n            memberCalldataBlocks.push(memberBlock);\n        });\n        block.setMembers(memberCalldataBlocks);\n        return block;\n    };\n    AbstractSetDataType.prototype._generateCalldataBlockFromObject = function (obj, parentBlock) {\n        var _this = this;\n        // Create a new calldata block for this set.\n        var parentName = parentBlock === undefined ? '' : parentBlock.getName();\n        var block = new set_1.SetCalldataBlock(this.getDataItem().name, this.getSignature(), parentName);\n        // Create blocks for members of set.\n        var memberCalldataBlocks = [];\n        _.forEach(this._memberIndexByName, function (memberIndex, memberName) {\n            if (!(memberName in obj)) {\n                throw new Error(\"Could not assign tuple to object: missing key '\" + memberName + \"' in object \" + JSON.stringify(obj));\n            }\n            var memberValue = obj[memberName];\n            var memberBlock = _this._members[memberIndex].generateCalldataBlock(memberValue, block);\n            memberCalldataBlocks.push(memberBlock);\n        });\n        // Associate member blocks with Set block.\n        block.setMembers(memberCalldataBlocks);\n        return block;\n    };\n    AbstractSetDataType.prototype._computeSignatureOfMembers = function (isDetailed) {\n        var _this = this;\n        // Compute signature of members\n        var signature = \"(\";\n        _.each(this._members, function (member, i) {\n            signature += member.getSignature(isDetailed);\n            if (i < _this._members.length - 1) {\n                signature += ',';\n            }\n        });\n        signature += ')';\n        return signature;\n    };\n    AbstractSetDataType.prototype._createMembersWithKeys = function (dataItem) {\n        var _this = this;\n        // Sanity check\n        if (dataItem.components === undefined) {\n            throw new Error(\"Tried to create a set using key/value pairs, but no components were defined by the input DataItem '\" + dataItem.name + \"'.\");\n        }\n        // Create one member for each component of `dataItem`\n        var members = [];\n        var memberIndexByName = {};\n        var memberNames = [];\n        _.each(dataItem.components, function (memberItem) {\n            // If a component with `name` already exists then\n            // rename to `name_nameIdx` to avoid naming conflicts.\n            var memberName = memberItem.name;\n            var nameIdx = 0;\n            while (_.includes(memberNames, memberName) || _.isEmpty(memberName)) {\n                nameIdx++;\n                memberName = memberItem.name + \"_\" + nameIdx;\n            }\n            memberNames.push(memberName);\n            var childDataItem = {\n                type: memberItem.type,\n                name: dataItem.name + \".\" + memberName,\n            };\n            var components = memberItem.components;\n            if (components !== undefined) {\n                childDataItem.components = components;\n            }\n            var child = _this.getFactory().create(childDataItem, _this);\n            memberIndexByName[memberName] = members.length;\n            members.push(child);\n        });\n        return [members, memberIndexByName];\n    };\n    AbstractSetDataType.prototype._createMembersWithLength = function (dataItem, length) {\n        var _this = this;\n        // Create `length` members, deriving the type from `dataItem`\n        var members = [];\n        var memberIndexByName = {};\n        var range = _.range(length);\n        _.each(range, function (idx) {\n            var memberDataItem = {\n                type: _this._arrayElementType === undefined ? '' : _this._arrayElementType,\n                name: dataItem.name + \"[\" + idx.toString(constants_1.constants.DEC_BASE) + \"]\",\n            };\n            var components = dataItem.components;\n            if (components !== undefined) {\n                memberDataItem.components = components;\n            }\n            var memberType = _this.getFactory().create(memberDataItem, _this);\n            memberIndexByName[idx.toString(constants_1.constants.DEC_BASE)] = members.length;\n            members.push(memberType);\n        });\n        return [members, memberIndexByName];\n    };\n    return AbstractSetDataType;\n}(data_type_1.DataType));\nexports.AbstractSetDataType = AbstractSetDataType;\n//# sourceMappingURL=set.js.map"]},"metadata":{},"sourceType":"script"}