{"ast":null,"code":"import{useCallback,useMemo}from'react';import{useDispatch,useSelector}from'react-redux';import{useWallet}from'use-wallet';import{addTransaction,clearAllTransactions}from'./actions';// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(){var _useWallet=useWallet(),chainId=_useWallet.chainId,account=_useWallet.account;var dispatch=useDispatch();return useCallback(function(response){var _ref=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{},summary=_ref.summary,approval=_ref.approval;if(!account)return;if(!chainId)return;var hash=response.hash;if(!hash){throw Error('No transaction hash found.');}dispatch(addTransaction({hash:hash,from:account,chainId:chainId,approval:approval,summary:summary}));},[dispatch,chainId,account]);}// returns all the transactions for the current chain\nexport function useAllTransactions(){var _state$chainId;var _useWallet2=useWallet(),chainId=_useWallet2.chainId;var state=useSelector(function(state){return state.transactions;});return chainId?(_state$chainId=state[chainId])!==null&&_state$chainId!==void 0?_state$chainId:{}:{};}export function useIsTransactionPending(transactionHash){var transactions=useAllTransactions();if(!transactionHash||!transactions[transactionHash]){return false;}return!transactions[transactionHash].receipt;}/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */export function isTransactionRecent(tx){return new Date().getTime()-tx.addedTime<86400000;}// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress,spender){var allTransactions=useAllTransactions();return useMemo(function(){return typeof tokenAddress==='string'&&typeof spender==='string'&&Object.keys(allTransactions).some(function(hash){var tx=allTransactions[hash];if(!tx)return false;if(tx.receipt){return false;}else{var approval=tx.approval;if(!approval)return false;return approval.spender===spender&&approval.tokenAddress===tokenAddress&&isTransactionRecent(tx);}});},[allTransactions,spender,tokenAddress]);}export function useClearAllTransactions(){var _useWallet3=useWallet(),chainId=_useWallet3.chainId;var dispatch=useDispatch();return{clearAllTransactions:useCallback(function(){return dispatch(clearAllTransactions({chainId:chainId}));},[dispatch,chainId])};}","map":{"version":3,"names":["useCallback","useMemo","useDispatch","useSelector","useWallet","addTransaction","clearAllTransactions","useTransactionAdder","_useWallet","chainId","account","dispatch","response","_ref","arguments","length","undefined","summary","approval","hash","Error","from","useAllTransactions","_state$chainId","_useWallet2","state","transactions","useIsTransactionPending","transactionHash","receipt","isTransactionRecent","tx","Date","getTime","addedTime","useHasPendingApproval","tokenAddress","spender","allTransactions","Object","keys","some","useClearAllTransactions","_useWallet3"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/state/transactions/hooks.tsx"],"sourcesContent":["import {TransactionResponse} from '@ethersproject/providers';\nimport {useCallback, useMemo} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {useWallet} from 'use-wallet';\n\nimport {AppDispatch, AppState} from '../index';\nimport {addTransaction, clearAllTransactions} from './actions';\nimport {TransactionDetails} from './reducer';\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {summary?: string; approval?: {tokenAddress: string; spender: string}},\n) => void {\n  const {chainId, account} = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {summary, approval}: {summary?: string; approval?: {tokenAddress: string; spender: string}} = {},\n    ) => {\n      if (!account) return;\n      if (!chainId) return;\n\n      const {hash} = response;\n      if (!hash) {\n        throw Error('No transaction hash found.');\n      }\n      dispatch(addTransaction({hash, from: account, chainId, approval, summary}));\n    },\n    [dispatch, chainId, account],\n  );\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): {[txHash: string]: TransactionDetails} {\n  const {chainId} = useWallet();\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\n\n  return chainId ? state[chainId] ?? {} : {};\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions();\n  if (!transactionHash || !transactions[transactionHash]) {\n    return false;\n  }\n  return !transactions[transactionHash].receipt;\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000;\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions();\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash];\n        if (!tx) return false;\n        if (tx.receipt) {\n          return false;\n        } else {\n          const approval = tx.approval;\n          if (!approval) return false;\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\n        }\n      }),\n    [allTransactions, spender, tokenAddress],\n  );\n}\n\nexport function useClearAllTransactions(): {clearAllTransactions: () => void} {\n  const {chainId} = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n  return {\n    clearAllTransactions: useCallback(() => dispatch(clearAllTransactions({chainId})), [dispatch, chainId]),\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}