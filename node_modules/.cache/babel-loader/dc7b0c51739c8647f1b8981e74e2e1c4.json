{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar utils_1 = require(\"@0x/utils\");\nvar _ = require(\"lodash\");\nexports.utils = {\n  convertHexToNumber: function convertHexToNumber(value) {\n    var valueBigNumber = new utils_1.BigNumber(value);\n    var valueNumber = valueBigNumber.toNumber();\n    return valueNumber;\n  },\n  convertHexToNumberOrNull: function convertHexToNumberOrNull(hex) {\n    if (hex === null) {\n      return null;\n    }\n    var decimal = exports.utils.convertHexToNumber(hex);\n    return decimal;\n  },\n  convertAmountToBigNumber: function convertAmountToBigNumber(value) {\n    var num = value || 0;\n    var isBigNumber = utils_1.BigNumber.isBigNumber(num);\n    if (isBigNumber) {\n      return num;\n    }\n    if (_.isString(num) && (num.indexOf('0x') === 0 || num.indexOf('-0x') === 0)) {\n      return new utils_1.BigNumber(num.replace('0x', ''), 16);\n    }\n    var baseTen = 10;\n    return new utils_1.BigNumber(num.toString(baseTen), baseTen);\n  },\n  encodeAmountAsHexString: function encodeAmountAsHexString(value) {\n    var valueBigNumber = exports.utils.convertAmountToBigNumber(value);\n    var hexBase = 16;\n    var valueHex = valueBigNumber.toString(hexBase);\n    return valueBigNumber.isLessThan(0) ? \"-0x\" + valueHex.substr(1) : \"0x\" + valueHex;\n  },\n  numberToHex: function numberToHex(value) {\n    if (!isFinite(value) && !exports.utils.isHexStrict(value)) {\n      throw new Error(\"Given input \" + value + \" is not a number.\");\n    }\n    var valueBigNumber = new utils_1.BigNumber(value);\n    var hexBase = 16;\n    var result = valueBigNumber.toString(hexBase);\n    return valueBigNumber.lt(0) ? \"-0x\" + result.substr(1) : \"0x\" + result;\n  },\n  isHexStrict: function isHexStrict(hex) {\n    return (_.isString(hex) || _.isNumber(hex)) && /^(-)?0x[0-9a-f]*$/i.test(_.isNumber(hex) ? hex.toString() : hex);\n  }\n};","map":{"version":3,"sources":["../../src/utils.ts"],"names":[],"mappings":";;;;;AAAA,IAAA,OAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AACA,IAAA,CAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AAEa,OAAA,CAAA,KAAK,GAAG;EACjB,kBAAkB,EAAlB,SAAA,mBAAmB,KAAa,EAAA;IAC5B,IAAM,cAAc,GAAG,IAAI,OAAA,CAAA,SAAS,CAAC,KAAK,CAAC;IAC3C,IAAM,WAAW,GAAG,cAAc,CAAC,QAAQ,EAAE;IAC7C,OAAO,WAAW;EACtB,CAAC;EACD,wBAAwB,EAAxB,SAAA,yBAAyB,GAAkB,EAAA;IACvC,IAAI,GAAG,KAAK,IAAI,EAAE;MACd,OAAO,IAAI;IACd;IACD,IAAM,OAAO,GAAG,OAAA,CAAA,KAAK,CAAC,kBAAkB,CAAC,GAAG,CAAC;IAC7C,OAAO,OAAO;EAClB,CAAC;EACD,wBAAwB,EAAxB,SAAA,yBAAyB,KAAkC,EAAA;IACvD,IAAM,GAAG,GAAG,KAAK,IAAI,CAAC;IACtB,IAAM,WAAW,GAAG,OAAA,CAAA,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC;IAC9C,IAAI,WAAW,EAAE;MACb,OAAO,GAAgB;IAC1B;IAED,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;MAC1E,OAAO,IAAI,OAAA,CAAA,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;IAClD;IAED,IAAM,OAAO,GAAG,EAAE;IAClB,OAAO,IAAI,OAAA,CAAA,SAAS,CAAE,GAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC;EACpE,CAAC;EACD,uBAAuB,EAAvB,SAAA,wBAAwB,KAAkC,EAAA;IACtD,IAAM,cAAc,GAAG,OAAA,CAAA,KAAK,CAAC,wBAAwB,CAAC,KAAK,CAAC;IAC5D,IAAM,OAAO,GAAG,EAAE;IAClB,IAAM,QAAQ,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC;IAEjD,OAAO,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,KAAA,GAAM,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAG,GAAG,IAAA,GAAK,QAAU;EACtF,CAAC;EACD,WAAW,EAAX,SAAA,YAAY,KAAa,EAAA;IACrB,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,OAAA,CAAA,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE;MAC/C,MAAM,IAAI,KAAK,CAAC,cAAA,GAAe,KAAK,GAAA,mBAAmB,CAAC;IAC3D;IAED,IAAM,cAAc,GAAG,IAAI,OAAA,CAAA,SAAS,CAAC,KAAK,CAAC;IAC3C,IAAM,OAAO,GAAG,EAAE;IAClB,IAAM,MAAM,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC;IAE/C,OAAO,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAA,GAAM,MAAM,CAAC,MAAM,CAAC,CAAC,CAAG,GAAG,IAAA,GAAK,MAAQ;EAC1E,CAAC;EACD,WAAW,EAAX,SAAA,YAAY,GAAoB,EAAA;IAC5B,OACI,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,QAAQ,EAAE,GAAG,GAAG,CAAC;EAEjH;CACH","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"@0x/utils\");\nvar _ = require(\"lodash\");\nexports.utils = {\n    convertHexToNumber: function (value) {\n        var valueBigNumber = new utils_1.BigNumber(value);\n        var valueNumber = valueBigNumber.toNumber();\n        return valueNumber;\n    },\n    convertHexToNumberOrNull: function (hex) {\n        if (hex === null) {\n            return null;\n        }\n        var decimal = exports.utils.convertHexToNumber(hex);\n        return decimal;\n    },\n    convertAmountToBigNumber: function (value) {\n        var num = value || 0;\n        var isBigNumber = utils_1.BigNumber.isBigNumber(num);\n        if (isBigNumber) {\n            return num;\n        }\n        if (_.isString(num) && (num.indexOf('0x') === 0 || num.indexOf('-0x') === 0)) {\n            return new utils_1.BigNumber(num.replace('0x', ''), 16);\n        }\n        var baseTen = 10;\n        return new utils_1.BigNumber(num.toString(baseTen), baseTen);\n    },\n    encodeAmountAsHexString: function (value) {\n        var valueBigNumber = exports.utils.convertAmountToBigNumber(value);\n        var hexBase = 16;\n        var valueHex = valueBigNumber.toString(hexBase);\n        return valueBigNumber.isLessThan(0) ? \"-0x\" + valueHex.substr(1) : \"0x\" + valueHex;\n    },\n    numberToHex: function (value) {\n        if (!isFinite(value) && !exports.utils.isHexStrict(value)) {\n            throw new Error(\"Given input \" + value + \" is not a number.\");\n        }\n        var valueBigNumber = new utils_1.BigNumber(value);\n        var hexBase = 16;\n        var result = valueBigNumber.toString(hexBase);\n        return valueBigNumber.lt(0) ? \"-0x\" + result.substr(1) : \"0x\" + result;\n    },\n    isHexStrict: function (hex) {\n        return ((_.isString(hex) || _.isNumber(hex)) && /^(-)?0x[0-9a-f]*$/i.test(_.isNumber(hex) ? hex.toString() : hex));\n    },\n};\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"script"}