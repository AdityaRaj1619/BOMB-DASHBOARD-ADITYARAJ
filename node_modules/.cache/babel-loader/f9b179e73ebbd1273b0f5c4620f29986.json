{"ast":null,"code":"import { createReducer } from '@reduxjs/toolkit';\nimport { addTransaction, checkedTransaction, clearAllTransactions, finalizeTransaction } from './actions';\nconst now = () => new Date().getTime();\nexport const initialState = {};\nexport default createReducer(initialState, builder => builder.addCase(addTransaction, (transactions, _ref) => {\n  var _transactions$chainId, _transactions$chainId2;\n  let {\n    payload: {\n      chainId,\n      from,\n      hash,\n      approval,\n      summary\n    }\n  } = _ref;\n  if ((_transactions$chainId = transactions[chainId]) === null || _transactions$chainId === void 0 ? void 0 : _transactions$chainId[hash]) {\n    throw Error('Attempted to add existing transaction.');\n  }\n  const txs = (_transactions$chainId2 = transactions[chainId]) !== null && _transactions$chainId2 !== void 0 ? _transactions$chainId2 : {};\n  txs[hash] = {\n    hash,\n    approval,\n    summary,\n    from,\n    addedTime: now()\n  };\n  transactions[chainId] = txs;\n}).addCase(clearAllTransactions, (transactions, _ref2) => {\n  let {\n    payload: {\n      chainId\n    }\n  } = _ref2;\n  if (!transactions[chainId]) return;\n  transactions[chainId] = {};\n}).addCase(checkedTransaction, (transactions, _ref3) => {\n  var _transactions$chainId3;\n  let {\n    payload: {\n      chainId,\n      hash,\n      blockNumber\n    }\n  } = _ref3;\n  const tx = (_transactions$chainId3 = transactions[chainId]) === null || _transactions$chainId3 === void 0 ? void 0 : _transactions$chainId3[hash];\n  if (!tx) {\n    return;\n  }\n  if (!tx.lastCheckedBlockNumber) {\n    tx.lastCheckedBlockNumber = blockNumber;\n  } else {\n    tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\n  }\n}).addCase(finalizeTransaction, (transactions, _ref4) => {\n  var _transactions$chainId4;\n  let {\n    payload: {\n      hash,\n      chainId,\n      receipt\n    }\n  } = _ref4;\n  const tx = (_transactions$chainId4 = transactions[chainId]) === null || _transactions$chainId4 === void 0 ? void 0 : _transactions$chainId4[hash];\n  if (!tx) {\n    return;\n  }\n  tx.receipt = receipt;\n  tx.confirmedTime = now();\n}));","map":{"version":3,"names":["createReducer","addTransaction","checkedTransaction","clearAllTransactions","finalizeTransaction","now","Date","getTime","initialState","builder","addCase","transactions","_ref","_transactions$chainId","_transactions$chainId2","payload","chainId","from","hash","approval","summary","Error","txs","addedTime","_ref2","_ref3","_transactions$chainId3","blockNumber","tx","lastCheckedBlockNumber","Math","max","_ref4","_transactions$chainId4","receipt","confirmedTime"],"sources":["C:/Users/Aditya Raj Awasthi/Desktop/bomb-dashboard-final-task/src/state/transactions/reducer.ts"],"sourcesContent":["import {createReducer} from '@reduxjs/toolkit';\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions';\n\nconst now = () => new Date().getTime();\n\nexport interface TransactionDetails {\n  hash: string;\n  approval?: {tokenAddress: string; spender: string};\n  summary?: string;\n  receipt?: SerializableTransactionReceipt;\n  lastCheckedBlockNumber?: number;\n  addedTime: number;\n  confirmedTime?: number;\n  from: string;\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails;\n  };\n}\n\nexport const initialState: TransactionState = {};\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, {payload: {chainId, from, hash, approval, summary}}) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.');\n      }\n      const txs = transactions[chainId] ?? {};\n      txs[hash] = {hash, approval, summary, from, addedTime: now()};\n      transactions[chainId] = txs;\n    })\n    .addCase(clearAllTransactions, (transactions, {payload: {chainId}}) => {\n      if (!transactions[chainId]) return;\n      transactions[chainId] = {};\n    })\n    .addCase(checkedTransaction, (transactions, {payload: {chainId, hash, blockNumber}}) => {\n      const tx = transactions[chainId]?.[hash];\n      if (!tx) {\n        return;\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber;\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber);\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, {payload: {hash, chainId, receipt}}) => {\n      const tx = transactions[chainId]?.[hash];\n      if (!tx) {\n        return;\n      }\n      tx.receipt = receipt;\n      tx.confirmedTime = now();\n    }),\n);\n"],"mappings":"AAAA,SAAQA,aAAa,QAAO,kBAAkB;AAC9C,SACEC,cAAc,EACdC,kBAAkB,EAClBC,oBAAoB,EACpBC,mBAAmB,QAEd,WAAW;AAElB,MAAMC,GAAG,GAAGA,CAAA,KAAM,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;AAmBtC,OAAO,MAAMC,YAA8B,GAAG,CAAC,CAAC;AAEhD,eAAeR,aAAa,CAACQ,YAAY,EAAGC,OAAO,IACjDA,OAAO,CACJC,OAAO,CAACT,cAAc,EAAE,CAACU,YAAY,EAAAC,IAAA,KAA0D;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EAAA,IAAxD;IAACC,OAAO,EAAE;MAACC,OAAO;MAAEC,IAAI;MAAEC,IAAI;MAAEC,QAAQ;MAAEC;IAAO;EAAC,CAAC,GAAAR,IAAA;EACzF,KAAAC,qBAAA,GAAIF,YAAY,CAACK,OAAO,CAAC,cAAAH,qBAAA,uBAArBA,qBAAA,CAAwBK,IAAI,CAAC,EAAE;IACjC,MAAMG,KAAK,CAAC,wCAAwC,CAAC;EACvD;EACA,MAAMC,GAAG,IAAAR,sBAAA,GAAGH,YAAY,CAACK,OAAO,CAAC,cAAAF,sBAAA,cAAAA,sBAAA,GAAI,CAAC,CAAC;EACvCQ,GAAG,CAACJ,IAAI,CAAC,GAAG;IAACA,IAAI;IAAEC,QAAQ;IAAEC,OAAO;IAAEH,IAAI;IAAEM,SAAS,EAAElB,GAAG;EAAE,CAAC;EAC7DM,YAAY,CAACK,OAAO,CAAC,GAAGM,GAAG;AAC7B,CAAC,CAAC,CACDZ,OAAO,CAACP,oBAAoB,EAAE,CAACQ,YAAY,EAAAa,KAAA,KAA2B;EAAA,IAAzB;IAACT,OAAO,EAAE;MAACC;IAAO;EAAC,CAAC,GAAAQ,KAAA;EAChE,IAAI,CAACb,YAAY,CAACK,OAAO,CAAC,EAAE;EAC5BL,YAAY,CAACK,OAAO,CAAC,GAAG,CAAC,CAAC;AAC5B,CAAC,CAAC,CACDN,OAAO,CAACR,kBAAkB,EAAE,CAACS,YAAY,EAAAc,KAAA,KAA8C;EAAA,IAAAC,sBAAA;EAAA,IAA5C;IAACX,OAAO,EAAE;MAACC,OAAO;MAAEE,IAAI;MAAES;IAAW;EAAC,CAAC,GAAAF,KAAA;EACjF,MAAMG,EAAE,IAAAF,sBAAA,GAAGf,YAAY,CAACK,OAAO,CAAC,cAAAU,sBAAA,uBAArBA,sBAAA,CAAwBR,IAAI,CAAC;EACxC,IAAI,CAACU,EAAE,EAAE;IACP;EACF;EACA,IAAI,CAACA,EAAE,CAACC,sBAAsB,EAAE;IAC9BD,EAAE,CAACC,sBAAsB,GAAGF,WAAW;EACzC,CAAC,MAAM;IACLC,EAAE,CAACC,sBAAsB,GAAGC,IAAI,CAACC,GAAG,CAACJ,WAAW,EAAEC,EAAE,CAACC,sBAAsB,CAAC;EAC9E;AACF,CAAC,CAAC,CACDnB,OAAO,CAACN,mBAAmB,EAAE,CAACO,YAAY,EAAAqB,KAAA,KAA0C;EAAA,IAAAC,sBAAA;EAAA,IAAxC;IAAClB,OAAO,EAAE;MAACG,IAAI;MAAEF,OAAO;MAAEkB;IAAO;EAAC,CAAC,GAAAF,KAAA;EAC9E,MAAMJ,EAAE,IAAAK,sBAAA,GAAGtB,YAAY,CAACK,OAAO,CAAC,cAAAiB,sBAAA,uBAArBA,sBAAA,CAAwBf,IAAI,CAAC;EACxC,IAAI,CAACU,EAAE,EAAE;IACP;EACF;EACAA,EAAE,CAACM,OAAO,GAAGA,OAAO;EACpBN,EAAE,CAACO,aAAa,GAAG9B,GAAG,EAAE;AAC1B,CAAC,CAAC,CACL"},"metadata":{},"sourceType":"module"}